<?php
return [
    'android.xml' => 'Best Practices',
    'CallSuperFirst' => 'Best Practices',
    'CallSuperLast' => 'Best Practices',
    'DoNotHardCodeSDCard' => 'Best Practices',
    'basic.xml' => 'Multiple',
    'AvoidBranchingStatementAsLastInLoop' => 'Logic',
    'AvoidDecimalLiteralsInBigDecimalConstructor' => 'Resource',
    'AvoidMultipleUnaryOperators' => 'Logic',
    'AvoidThreadGroup' => 'Concurrency',
    'AvoidUsingHardCodedIP' => 'Best Practices',
    'AvoidUsingOctalValues' => 'Resource',
    'BigIntegerInstantiation' => 'Best Practices',
    'BooleanInstantiation' => 'Refactorings - Simplifications',
    'BrokenNullCheck' => 'Logic',
    'CheckResultSet' => 'Check',
    'CheckSkipResult' => 'Check',
    'ClassCastExceptionWithToArray' => 'Interface',
    'CollapsibleIfStatements' => 'Refactorings - Simplifications',
    'DontCallThreadRun' => 'Concurrency',
    'DontUseFloatTypeForLoopIndices' => 'Resource',
    'DoubleCheckedLocking' => 'Concurrency',
    'EmptyCatchBlock' => 'Refactorings - Redundancies',
    'EmptyFinallyBlock' => 'Refactorings - Redundancies',
    'EmptyIfStmt' => 'Refactorings - Redundancies',
    'EmptyInitializer' => 'Refactorings - Redundancies',
    'EmptyStatementBlock' => 'Refactorings - Redundancies',
    'EmptyStatementNotInLoop' => 'Refactorings - Redundancies',
    'EmptyStaticInitializer' => 'Refactorings - Redundancies',
    'EmptySwitchStatements' => 'Refactorings - Redundancies',
    'EmptySynchronizedBlock' => 'Refactorings - Redundancies',
    'EmptyTryBlock' => 'Refactorings - Redundancies',
    'EmptyWhileStmt' => 'Refactorings - Redundancies',
    'ExtendsObject' => 'Object Oriented Design',
    'ForLoopShouldBeWhileLoop' => 'Refactorings - Simplifications',
    'JumbledIncrementer' => 'Logic',
    'MisplacedNullCheck' => 'Logic',
    'OverrideBothEqualsAndHashcode' => 'Interface',
    'ReturnFromFinallyBlock' => 'Error Handling',
    'UnconditionalIfStatement' => 'Refactorings - Redundancies',
    'UnnecessaryConversionTemporary' => 'Refactorings - Redundancies',
    'UnnecessaryFinalModifier' => 'Refactorings - Redundancies',
    'UnnecessaryReturn' => 'Refactorings - Redundancies',
    'UnusedNullCheckInEquals' => 'Logic',
    'UselessOperationOnImmutable' => 'Refactorings - Redundancies',
    'UselessOverridingMethod' => 'Refactorings - Redundancies',
    'UselessParentheses' => 'Refactorings - Redundancies',
    'braces.xml' => 'Style Conventions',
    'ForLoopsMustUseBraces' => 'Style Conventions',
    'IfElseStmtsMustUseBraces' => 'Style Conventions',
    'IfStmtsMustUseBraces' => 'Style Conventions',
    'WhileLoopsMustUseBraces' => 'Style Conventions',
    'clone.xml' => 'Interface',
    'CloneMethodMustImplementCloneable' => 'Interface',
    'CloneThrowsCloneNotSupportedException' => 'Interface',
    'ProperCloneImplementation' => 'Interface',
    'codesize.xml' => 'Metric',
    'CyclomaticComplexity' => 'Metric',
    'ExcessiveClassLength' => 'Metric',
    'ExcessiveMethodLength' => 'Metric',
    'ExcessiveParameterList' => 'Metric',
    'ExcessivePublicCount' => 'Metric',
    'ModifiedCyclomaticComplexity' => 'Metric',
    'NcssConstructorCount' => 'Metric',
    'NcssMethodCount' => 'Metric',
    'NcssTypeCount' => 'Metric',
    'NPathComplexity' => 'Metric',
    'StdCyclomaticComplexity' => 'Metric',
    'TooManyFields' => 'Metric',
    'TooManyMethods' => 'Metric',
    'comments.xml' => 'Documentation Conventions',
    'CommentContent' => 'Documentation Conventions',
    'CommentRequired' => 'Documentation Conventions',
    'CommentSize' => 'Metric',
    'controversial.xml' => 'Multiple',
    'AssignmentInOperand' => 'Best Practices',
    'AtLeastOneConstructor' => 'Interface',
    'AvoidAccessibilityAlteration' => 'Object Oriented Design',
    'AvoidFinalLocalVariable' => 'Best Practices',
    'AvoidLiteralsInIfCondition' => 'Best Practices',
    'AvoidPrefixingMethodParameters' => 'Naming Conventions',
    'AvoidUsingNativeCode' => 'Best Practices',
    'AvoidUsingShortType' => 'Best Practices',
    'AvoidUsingVolatile' => 'Best Practices',
    'BooleanInversion' => 'Best Practices',
    'CallSuperInConstructor' => 'Object Oriented Design',
    'DataflowAnomalyAnalysis' => 'Resource',
    'DefaultPackage' => 'Object Oriented Design',
    'DoNotCallGarbageCollectionExplicitly' => 'Best Practices',
    'DontImportSun' => 'Code Structure',
    'NullAssignment' => 'Refactorings - Redundancies',
    'OneDeclarationPerLine' => 'Best Practices',
    'OnlyOneReturn' => 'Best Practices',
    'SuspiciousOctalEscape' => 'Logic',
    'UnnecessaryConstructor' => 'Refactorings - Redundancies',
    'UnnecessaryParentheses' => 'Refactorings - Redundancies',
    'UseConcurrentHashMap' => 'Concurrency',
    'UseObjectForClearerAPI' => 'Object Oriented Design',
    'coupling.xml' => 'Multiple',
    'CouplingBetweenObjects' => 'Metric',
    'ExcessiveImports' => 'Metric',
    'LawOfDemeter' => 'Object Oriented Design',
    'LooseCoupling' => 'Object Oriented Design',
    'LoosePackageCoupling' => 'Object Oriented Design',
    'design.xml' => 'Multiple',
    'AbstractClassWithoutAbstractMethod' => 'Interface',
    'AbstractClassWithoutAnyMethod' => 'Interface',
    'AccessorClassGeneration' => 'Interface',
    'AssignmentToNonFinalStatic' => 'Resource',
    'AvoidConstantsInterface' => 'Object Oriented Design',
    'AvoidDeeplyNestedIfStmts' => 'Metric',
    'AvoidInstanceofChecksInCatchClause' => 'Error Handling',
    'AvoidProtectedFieldInFinalClass' => 'Object Oriented Design',
    'AvoidProtectedMethodInFinalClassNotExtending' => 'Object Oriented Design',
    'AvoidReassigningParameters' => 'Best Practices',
    'AvoidSynchronizedAtMethodLevel' => 'Concurrency',
    'BadComparison' => 'Logic',
    'ClassWithOnlyPrivateConstructorsShouldBeFinal' => 'Best Practices',
    'CloseResource' => 'Resource',
    'CompareObjectsWithEquals' => 'Logic',
    'ConfusingTernary' => 'Best Practices',
    'ConstructorCallsOverridableMethod' => 'Interface',
    'DefaultLabelNotLastInSwitchStmt' => 'Best Practices',
    'EmptyMethodInAbstractClassShouldBeAbstract' => 'Interface',
    'EqualsNull' => 'Logic',
    'FieldDeclarationsShouldBeAtStartOfClass' => 'Best Practices',
    'FinalFieldCouldBeStatic' => 'Best Practices',
    'GodClass' => 'Metric',
    'IdempotentOperations' => 'Refactorings - Redundancies',
    'ImmutableField' => 'Best Practices',
    'InstantiationToGetClass' => 'Object Oriented Design',
    'LogicInversion' => 'Refactorings - Simplifications',
    'MissingBreakInSwitch' => 'Logic',
    'MissingStaticMethodInNonInstantiatableClass' => 'Interface',
    'NonCaseLabelInSwitchStatement' => 'Logic',
    'NonStaticInitializer' => 'Interface',
    'NonThreadSafeSingleton' => 'Concurrency',
    'OptimizableToArrayCall' => 'Best Practices',
    'PositionLiteralsFirstInCaseInsensitiveComparisons' => 'Logic',
    'PositionLiteralsFirstInComparisons' => 'Logic',
    'PreserveStackTrace' => 'Error Handling',
    'ReturnEmptyArrayRatherThanNull' => 'Best Practices',
    'SimpleDateFormatNeedsLocale' => 'Interface',
    'SimplifyBooleanExpressions' => 'Refactorings - Simplifications',
    'SimplifyBooleanReturns' => 'Refactorings - Simplifications',
    'SimplifyConditional' => 'Refactorings - Simplifications',
    'SingularField' => 'Best Practices',
    'SwitchDensity' => 'Metric',
    'SwitchStmtsShouldHaveDefault' => 'Logic',
    'TooFewBranchesForASwitchStatement' => 'Metric',
    'UncommentedEmptyConstructor' => 'Refactorings - Redundancies',
    'UncommentedEmptyMethod' => 'Refactorings - Redundancies',
    'UncommentedEmptyMethodBody' => 'Refactorings - Redundancies',
    'UnnecessaryLocalBeforeReturn' => 'Refactorings - Redundancies',
    'UnsynchronizedStaticDateFormatter' => 'Concurrency',
    'UseCollectionIsEmpty' => 'Best Practices',
    'UseLocaleWithCaseConversions' => 'Interface',
    'UseNotifyAllInsteadOfNotify' => 'Concurrency',
    'UseUtilityClass' => 'Object Oriented Design',
    'UseVarargs' => 'Best Practices',
    'empty.xml' => 'Refactorings - Redundancies',
    'finalizers.xml' => 'Multiple',
    'AvoidCallingFinalize' => 'Resource',
    'EmptyFinalizer' => 'Refactorings - Redundancies',
    'FinalizeDoesNotCallSuperFinalize' => 'Interface',
    'FinalizeOnlyCallsSuperFinalize' => 'Refactorings - Redundancies',
    'FinalizeOverloaded' => 'Interface',
    'FinalizeShouldBeProtected' => 'Interface',
    'imports.xml' => 'Multiple',
    'DontImportJavaLang' => 'Code Structure',
    'DuplicateImports' => 'Refactorings - Redundancies',
    'ImportFromSamePackage' => 'Refactorings - Redundancies',
    'TooManyStaticImports' => 'Code Structure',
    'UnnecessaryFullyQualifiedName' => 'Best Practices',
    'UnusedImports' => 'Refactorings - Redundancies',
    'j2ee.xml' => 'Multiple',
    'DoNotCallSystemExit' => 'Best Practices',
    'DoNotUseThreads' => 'Concurrency',
    'LocalHomeNamingConvention' => 'Naming Conventions',
    'LocalInterfaceSessionNamingConvention' => 'Naming Conventions',
    'MDBAndSessionBeanNamingConvention' => 'Naming Conventions',
    'RemoteInterfaceNamingConvention' => 'Naming Conventions',
    'RemoteSessionInterfaceNamingConvention' => 'Naming Conventions',
    'StaticEJBFieldShouldBeFinal' => 'Best Practices',
    'UseProperClassLoader' => 'Concurrency',
    'javabeans.xml' => 'Best Practices',
    'BeanMembersShouldSerialize' => 'Best Practices',
    'MissingSerialVersionUID' => 'Best Practices',
    'junit.xml' => 'Multiple',
    'JUnitAssertionsShouldIncludeMessage' => 'Best Practices',
    'JUnitSpelling' => 'Naming Conventions',
    'JUnitStaticSuite' => 'Best Practices',
    'JUnitTestContainsTooManyAsserts' => 'Best Practices',
    'JUnitTestsShouldIncludeAssert' => 'Best Practices',
    'SimplifyBooleanAssertion' => 'Refactorings - Simplifications',
    'TestClassWithoutTestCases' => 'Naming Conventions',
    'UnnecessaryBooleanAssertion' => 'Refactorings - Redundancies',
    'UseAssertEqualsInsteadOfAssertTrue' => 'Best Practices',
    'UseAssertNullInsteadOfAssertTrue' => 'Best Practices',
    'UseAssertSameInsteadOfAssertTrue' => 'Best Practices',
    'UseAssertTrueInsteadOfAssertEquals' => 'Best Practices',
    'logging-jakarta-commons.xml' => 'Multiple',
    'GuardDebugLogging' => 'Best Practices',
    'GuardLogStatement' => 'Best Practices',
    'ProperLogger' => 'Best Practices',
    'UseCorrectExceptionLogging' => 'Error Handling',
    'logging-java.xml' => 'Multiple',
    'AvoidPrintStackTrace' => 'Error Handling',
    'GuardLogStatementJavaUtil' => 'Best Practices',
    'LoggerIsNotStaticFinal' => 'Best Practices',
    'MoreThanOneLogger' => 'Best Practices',
    'SystemPrintln' => 'Best Practices',
    'migrating.xml' => 'Migration',
    'AvoidAssertAsIdentifier' => 'Migration',
    'AvoidEnumAsIdentifier' => 'Migration',
    'ByteInstantiation' => 'Migration',
    'IntegerInstantiation' => 'Migration',
    'JUnit4SuitesShouldUseSuiteAnnotation' => 'Migration',
    'JUnit4TestShouldUseAfterAnnotation' => 'Migration',
    'JUnit4TestShouldUseBeforeAnnotation' => 'Migration',
    'JUnit4TestShouldUseTestAnnotation' => 'Migration',
    'JUnitUseExpected' => 'Migration',
    'LongInstantiation' => 'Migration',
    'ReplaceEnumerationWithIterator' => 'Migration',
    'ReplaceHashtableWithMap' => 'Migration',
    'ReplaceVectorWithList' => 'Migration',
    'ShortInstantiation' => 'Migration',
    'migrating_to_13.xml' => 'Migration',
    'migrating_to_14.xml' => 'Migration',
    'migrating_to_15.xml' => 'Migration',
    'migrating_to_junit4.xml' => 'Migration',
    'naming.xml' => 'Naming Conventions',
    'AbstractNaming' => 'Naming Conventions',
    'AvoidDollarSigns' => 'Naming Conventions',
    'AvoidFieldNameMatchingMethodName' => 'Naming Conventions',
    'AvoidFieldNameMatchingTypeName' => 'Naming Conventions',
    'AvoidNonConstructorMethodsWithClassName' => 'Naming Conventions',
    'BooleanGetMethodName' => 'Naming Conventions',
    'ClassNamingConventions' => 'Naming Conventions',
    'ConstantNamingConventions' => 'Naming Conventions',
    'ConstructorWithNameAsEnclosingClass' => 'Naming Conventions',
    'GenericsNaming' => 'Naming Conventions',
    'LongVariable' => 'Naming Conventions',
    'MethodNamingConventions' => 'Naming Conventions',
    'MethodWithSameNameAsEnclosingClass' => 'Naming Conventions',
    'MisleadingVariableName' => 'Naming Conventions',
    'NoPackage' => 'Naming Conventions',
    'PackageCase' => 'Naming Conventions',
    'ShortClassName' => 'Naming Conventions',
    'ShortMethodName' => 'Naming Conventions',
    'ShortVariable' => 'Naming Conventions',
    'SuspiciousConstantFieldName' => 'Naming Conventions',
    'SuspiciousEqualsMethodName' => 'Naming Conventions',
    'SuspiciousHashcodeMethodName' => 'Naming Conventions',
    'VariableNamingConventions' => 'Naming Conventions',
    'optimizations.xml' => 'Multiple',
    'AddEmptyString' => 'Best Practices',
    'AvoidArrayLoops' => 'Best Practices',
    'AvoidInstantiatingObjectsInLoops' => 'Best Practices',
    'LocalVariableCouldBeFinal' => 'Best Practices',
    'MethodArgumentCouldBeFinal' => 'Best Practices',
    'PrematureDeclaration' => 'Refactorings - Redundancies',
    'RedundantFieldInitializer' => 'Refactorings - Redundancies',
    'SimplifyStartsWith' => 'Best Practices',
    'UnnecessaryWrapperObjectCreation' => 'Refactorings - Redundancies',
    'UseArrayListInsteadOfVector' => 'Best Practices',
    'UseArraysAsList' => 'Best Practices',
    'UseStringBufferForStringAppends' => 'Best Practices',
    'strictexception.xml' => 'Error Handling',
    'AvoidCatchingGenericException' => 'Error Handling',
    'AvoidCatchingNPE' => 'Error Handling',
    'AvoidCatchingThrowable' => 'Error Handling',
    'AvoidLosingExceptionInformation' => 'Error Handling',
    'AvoidRethrowingException' => 'Error Handling',
    'AvoidThrowingNewInstanceOfSameException' => 'Error Handling',
    'AvoidThrowingNullPointerException' => 'Error Handling',
    'AvoidThrowingRawExceptionTypes' => 'Error Handling',
    'DoNotExtendJavaLangError' => 'Error Handling',
    'DoNotThrowExceptionInFinally' => 'Error Handling',
    'ExceptionAsFlowControl' => 'Error Handling',
    'SignatureDeclareThrowsException' => 'Error Handling',
    'strings.xml' => 'Multiple',
    'AppendCharacterWithChar' => 'Best Practices',
    'AvoidDuplicateLiterals' => 'Refactorings - Redundancies',
    'AvoidStringBufferField' => 'Best Practices',
    'ConsecutiveAppendsShouldReuse' => 'Best Practices',
    'ConsecutiveLiteralAppends' => 'Best Practices',
    'InefficientEmptyStringCheck' => 'Best Practices',
    'InefficientStringBuffering' => 'Best Practices',
    'InsufficientStringBufferDeclaration' => 'Best Practices',
    'StringBufferInstantiationWithChar' => 'Best Practices',
    'StringInstantiation' => 'Best Practices',
    'StringToString' => 'Refactorings - Redundancies',
    'UnnecessaryCaseChange' => 'Best Practices',
    'UseEqualsToCompareStrings' => 'Logic',
    'UseIndexOfChar' => 'Best Practices',
    'UselessStringValueOf' => 'Refactorings - Redundancies',
    'UseStringBufferLength' => 'Best Practices',
    'sunsecure.xml' => 'Multiple',
    'ArrayIsStoredDirectly' => 'Best Practices',
    'MethodReturnsInternalArray' => 'Interface',
    'typeresolution.xml' => 'Multiple',
    'unnecessary.xml' => 'Refactorings - Redundancies',
    'unusedcode.xml' => 'Refactorings - Redundancies',
    'UnusedFormalParameter' => 'Refactorings - Redundancies',
    'UnusedLocalVariable' => 'Refactorings - Redundancies',
    'UnusedModifier' => 'Refactorings - Redundancies',
    'UnusedPrivateField' => 'Refactorings - Redundancies',
    'UnusedPrivateMethod' => 'Refactorings - Redundancies',
];
