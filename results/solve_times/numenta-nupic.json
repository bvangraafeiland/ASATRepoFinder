{"14":[{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:superfluous-parens:if not (self.getInferenceType() == InferenceType.TemporalAnomaly):","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:superfluous-parens:return self.getInferenceType() in (InferenceType.TemporalClassification)","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-variable:inputRecordSensorMappings = dict()","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-variable:predictions = dict()","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-variable:inferenceType = self.getInferenceType()","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-variable:tp = self._getTPRegion()","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-variable:isTemporal = self._hasTP","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-variable:value = getattr(self, realName)","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-import:from collections import defaultdict, deque","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-import:from datetime import timedelta","count":4,"result_id":4219},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:unused-import:from nupic.data.filters import AutoResetFilter","count":4,"result_id":4219},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:62","count":69,"result_id":4128},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:128","count":69,"result_id":4128},{"warning":"14:nupic\/research\/spatial_pooler.py:trailing-whitespace:@param overlaps:","count":150,"result_id":2722},{"warning":"14:nupic\/research\/spatial_pooler.py:trailing-whitespace:@param activeColumns:","count":300,"result_id":2722},{"warning":"14:nupic\/research\/spatial_pooler.py:trailing-whitespace:@param inputVector:","count":150,"result_id":2722},{"warning":"14:nupic\/research\/spatial_pooler.py:trailing-whitespace:1013","count":150,"result_id":2722},{"warning":"14:nupic\/encoders\/date.py:unused-import:from nupic.encoders.date_capnp import DateEncoderProto","count":82,"result_id":2716},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:746","count":15,"result_id":2715},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:752","count":15,"result_id":2715},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:761","count":15,"result_id":2715},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:764","count":15,"result_id":2715},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:441","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:490","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:511","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:520","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:528","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:532","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:548","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:558","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:562","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:565","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:676","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:688","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:692","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:694","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:702","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:705","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:713","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:717","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:724","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:727","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:733","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:740","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:744","count":65,"result_id":2713},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:747","count":65,"result_id":2713},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:393","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:399","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:597","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:623","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:661","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:666","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:668","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:700","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:793","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:826","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:836","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:843","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:863","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:877","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:891","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:908","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:928","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1017","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1266","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1281","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1291","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1293","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1304","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1310","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1314","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1384","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1389","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1391","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1403","count":118,"result_id":2708},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1420","count":118,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:56","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:64","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:68","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:74","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:77","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:235","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:243","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:256","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:261","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:263","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:268","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:279","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:297","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:304","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:309","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:317","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:329","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:334","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:354","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:359","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:386","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:388","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:404","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:413","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:415","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:430","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:444","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:465","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:492","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:502","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:504","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:508","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:526","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:532","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:542","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:546","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:549","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:554","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:564","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:569","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:571","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:573","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:576","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:580","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:585","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:587","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:591","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:612","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:619","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:640","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:644","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:650","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:656","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:664","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:668","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:672","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:683","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:705","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:715","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:723","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:726","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:729","count":114,"result_id":2708},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:735","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:60","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:74","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:88","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:97","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:103","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:105","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:109","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:117","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:123","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:131","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:137","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:146","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:160","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:312","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:400","count":114,"result_id":2708},{"warning":"14:nupic\/support\/configuration_base.py:trailing-whitespace:420","count":114,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:364","count":70,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:384","count":70,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:389","count":70,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:392","count":70,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:395","count":70,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:512","count":70,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:568","count":70,"result_id":2708},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:590","count":67,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:164","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:167","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:191","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:194","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:197","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:203","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:216","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:237","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:247","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:250","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:256","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:265","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:271","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:274","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:283","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:292","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:298","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:306","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:313","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:316","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:327","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:331","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:345","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:348","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:362","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:380","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:386","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:427","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:430","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:438","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:454","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:462","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:466","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:468","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:471","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:483","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:490","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:491","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:499","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:503","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:507","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:511","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:584","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:588","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:607","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:615","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:625","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:634","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:637","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:650","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:657","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:660","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:667","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:775","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:781","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:785","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:790","count":7,"result_id":2708},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:793","count":7,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:405","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:442","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:491","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:513","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:521","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:526","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:529","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:538","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:549","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:559","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:566","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:677","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:689","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:695","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:703","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:706","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:714","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:725","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:728","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:730","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:742","count":5,"result_id":2708},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:748","count":5,"result_id":2708},{"warning":"14:nupic\/algorithms\/KNNClassifier.py:trailing-whitespace:of exact matching.","count":25,"result_id":2707},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:440","count":177,"result_id":2699},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:151","count":55,"result_id":2198},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:154","count":12,"result_id":2195},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:464","count":12,"result_id":2195},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:746","count":25,"result_id":2191},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:752","count":25,"result_id":2191},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:761","count":25,"result_id":2191},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:764","count":25,"result_id":2191},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:70","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:73","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:104","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:108","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:112","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:160","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:188","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:202","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:207","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:281","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:289","count":34,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:149","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:153","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:156","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:166","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:174","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:180","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:183","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:193","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:220","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:233","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:254","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:264","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:284","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:296","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:299","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:307","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:311","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:325","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:328","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:342","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:357","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:363","count":27,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:762","count":2,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:766","count":2,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:771","count":2,"result_id":2189},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:774","count":2,"result_id":2189},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:672","count":160,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:676","count":160,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:830","count":160,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:840","count":160,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:847","count":160,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:395","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:401","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:601","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:627","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:665","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:670","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:680","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:797","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:834","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:844","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:851","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:867","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:881","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:895","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:932","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1021","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1267","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1282","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1294","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1305","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1311","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1315","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1385","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1390","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1392","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1404","count":42,"result_id":2174},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1421","count":42,"result_id":2174},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:89","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:103","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:140","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:152","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:165","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:275","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:321","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:328","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:339","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:347","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:379","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:391","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:403","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:406","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:409","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:432","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:436","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:445","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:448","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:460","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:463","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:505","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:507","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:531","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:582","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:589","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:595","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:596","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:605","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:606","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:667","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:675","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:684","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:691","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:709","count":43,"result_id":2173},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:741","count":43,"result_id":2173},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:99","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:102","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:111","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:124","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:129","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:132","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:135","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:140","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:147","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:148","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:154","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:165","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:173","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:184","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:186","count":44,"result_id":2172},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:192","count":44,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:95","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:132","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:144","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:157","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:270","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:311","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:323","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:342","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:374","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:396","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:398","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:404","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:427","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:431","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:438","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:440","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:455","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:458","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:495","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:502","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:526","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:577","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:584","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:591","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:600","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:601","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:662","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:670","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:679","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:686","count":1,"result_id":2172},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:736","count":1,"result_id":2172},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:600","count":45,"result_id":2171},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:177","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:629","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:635","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:644","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:655","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:665","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:676","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:689","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:698","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:716","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:722","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:734","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:757","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:815","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:826","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:856","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:861","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:926","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:947","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:963","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1100","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1115","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1123","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1133","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1143","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1147","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1171","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1182","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1185","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1187","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1326","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1335","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1425","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1432","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1790","count":47,"result_id":2169},{"warning":"14:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:trailing-whitespace:1844","count":47,"result_id":2169},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:741","count":121,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:569","count":56,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:676","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:692","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:713","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:717","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:724","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:727","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:733","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:740","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:744","count":51,"result_id":2165},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:747","count":51,"result_id":2165},{"warning":"14:nupic\/support\/serializationutils.py:trailing-whitespace:50","count":55,"result_id":2161},{"warning":"14:nupic\/data\/stream_reader.py:trailing-whitespace:self._recordStoreName = filePath","count":171,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:54","count":57,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:57","count":57,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:70","count":57,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:76","count":57,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:79","count":57,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:82","count":57,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:158","count":57,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:316","count":57,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:401","count":57,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:443","count":57,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:500","count":57,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:590","count":57,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:81","count":14,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:103","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:106","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:115","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:128","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:133","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:136","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:139","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:144","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:152","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:162","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:169","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:177","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:180","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:188","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:190","count":13,"result_id":2159},{"warning":"14:nupic\/data\/record_stream.py:trailing-whitespace:196","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:\"\"\"","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:There may be multiple fields of type datetime, but no more than one of them","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:may be the timestamp field (T). The sequence id field must be either a","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:string or an int. The reset field must be an int (and must contain 0 or 1).","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:127","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:The category field must be an int or space-separated list of ints, where","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:the former represents single-label classification and the latter is for","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:multi-label classification (e.g. \"1 3 4\" designates a record for labels 1,","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:3, and 4). The number of categories is allowed to vary record to record;","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:sensor regions represent non-categories with -1, thus the category values","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:149","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:162","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:275","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:321","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:328","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:339","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:347","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:379","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:391","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:403","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:406","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:409","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:432","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:436","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:445","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:448","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:460","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:463","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:505","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:507","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:531","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:582","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:589","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:595","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:596","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:605","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:606","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:667","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:675","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:684","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:691","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:709","count":13,"result_id":2159},{"warning":"14:nupic\/data\/file_record_stream.py:trailing-whitespace:741","count":13,"result_id":2159},{"warning":"14:nupic\/research\/temporal_memory.py:unused-variable:predictedColumns,","count":77,"result_id":2140},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1541","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1545","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1566","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1576","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1586","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1593","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1601","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1608","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1618","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1623","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1627","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1638","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1641","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1645","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1850","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1969","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2001","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2152","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2179","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2187","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2201","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2215","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2229","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2235","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2311","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2412","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2496","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2510","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2521","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2755","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2766","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2778","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2781","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2789","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2793","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2803","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2809","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2817","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2826","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2842","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2878","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3028","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3031","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3429","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3434","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3438","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3450","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3460","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3472","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3480","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3504","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3507","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3516","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3729","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3732","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3947","count":83,"result_id":2130},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3955","count":83,"result_id":2130},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:91","count":40,"result_id":2120},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:92","count":40,"result_id":2120},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:97","count":40,"result_id":2120},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:98","count":40,"result_id":2120},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:93","count":1,"result_id":2119},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:94","count":1,"result_id":2119},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:99","count":1,"result_id":2119},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:100","count":1,"result_id":2119},{"warning":"14:nupic\/research\/temporal_memory.py:unused-variable:predictedActiveColumns,","count":23,"result_id":2117},{"warning":"14:nupic\/encoders\/scalar.py:unused-import:import capnp","count":191,"result_id":2116},{"warning":"14:nupic\/encoders\/random_distributed_scalar.py:unused-import:from nupic.encoders.random_distributed_scalar_capnp import (","count":190,"result_id":2116},{"warning":"14:nupic\/encoders\/multi.py:unused-import:from nupic.encoders.scalar_capnp import ScalarEncoderProto","count":181,"result_id":2116},{"warning":"14:nupic\/encoders\/random_distributed_scalar.py:unused-import:import capnp","count":79,"result_id":2116},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:152","count":79,"result_id":2116},{"warning":"14:nupic\/encoders\/multi.py:unused-import:import capnp","count":79,"result_id":2116},{"warning":"14:nupic\/frameworks\/opf\/predictionmetricsmanager.py:trailing-whitespace:109","count":98,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1292","count":98,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:397","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:403","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:626","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:652","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:690","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:695","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:697","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:728","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:822","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:855","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:859","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:869","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:872","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:876","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:892","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:906","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:920","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:937","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:957","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1046","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1307","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1317","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1319","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1330","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1336","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1340","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1410","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1415","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1417","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1429","count":56,"result_id":2115},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1446","count":56,"result_id":2115},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:@param value - the current metric (\"raw\") input value, eg. \"orange\", or","count":91,"result_id":2113},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:@param timestamp - (optional) timestamp of the ocurrence,","count":91,"result_id":2113},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:87","count":79,"result_id":2113},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:96","count":79,"result_id":2113},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:152","count":79,"result_id":2113},{"warning":"14:nupic\/algorithms\/anomaly_likelihood.py:trailing-whitespace:462","count":79,"result_id":2113},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:436","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:440","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:442","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:445","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:458","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:465","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:473","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:477","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:481","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:485","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:558","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:562","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:578","count":114,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:71","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:74","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:87","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:105","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:109","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:113","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:150","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:154","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:157","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:161","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:167","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:175","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:178","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:184","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:194","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:203","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:208","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:234","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:241","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:249","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:258","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:265","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:267","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:273","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:276","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:282","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:285","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:297","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:300","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:308","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:312","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:326","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:329","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:343","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:358","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:364","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:402","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:405","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:413","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:416","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:429","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:584","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:594","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:603","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:606","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:619","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:626","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:629","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:636","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:754","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:760","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:764","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:769","count":87,"result_id":2099},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:772","count":87,"result_id":2099},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:trailing-whitespace:\"Expected predicted field '%s' in input row, but was not found!\"","count":276,"result_id":2091},{"warning":"14:nupic\/data\/generators\/distributions.py:superfluous-parens:assert (self.numOfValues>self.valueNum)","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/distributions.py:unused-variable:records = [self.getNext() for x in range(n)]","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/distributions.py:unused-argument:def __init__(self, params={}):","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/distributions.py:unused-variable:description = dict(name='GaussianDistribution', mean=self.mean,","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert(len(record)==len(self.fields))","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numRecords>n for field in self.fields))","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numEncodings>n for field in self.fields))","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numEncodings==numEncodings for field in self.fields))","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert(self.dataType is not None or self.encoderType is not None)","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-variable:except TypeError, e:","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-variable:fieldIndex = self.defineField(name, encoderParams)","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-variable:values = [self.addValueToField(i) for n in range(numValues)]","count":251,"result_id":2091},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-argument:def _setTypes(self, encoderSpec):","count":251,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:761","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:780","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:800","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:901","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:938","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1022","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1119","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1277","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1438","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1941","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:2559","count":242,"result_id":2091},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:3306","count":242,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\"Multi metric can combine multiple other (sub)metrics and","count":240,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\"MetricMulti","count":240,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:@param metrics - [list of submetrics]","count":240,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:if (weights is None or not isinstance(weights, list) or","count":240,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:return \"MetricMulti(weights=%s, metrics=%s)\" % (self.weights, self.metrics)","count":240,"result_id":2091},{"warning":"14:nupic\/research\/monitor_mixin\/monitor_mixin_base.py:unused-argument:def mmPrettyPrintMetrics(metrics, sigFigs=5):","count":239,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:221","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:226","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:230","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:285","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:288","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:291","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:294","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:301","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:398","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:401","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:515","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:556","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:560","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:596","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:599","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:609","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:623","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:631","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:636","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:692","count":236,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:710","count":236,"result_id":2091},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:if binaryAnomalyThreshold is not None and (","count":227,"result_id":2091},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:binaryAnomalyThreshold >= 1.0  or","count":227,"result_id":2091},{"warning":"14:nupic\/encoders\/scalar.py:unused-variable:radius = DEFAULT_RADIUS","count":216,"result_id":2091},{"warning":"14:nupic\/encoders\/scalar.py:unused-variable:resolution = DEFAULT_RESOLUTION","count":216,"result_id":2091},{"warning":"14:nupic\/encoders\/sdrcategory.py:unused-import:import random","count":210,"result_id":2091},{"warning":"14:nupic\/encoders\/scalar.py:superfluous-parens:if (radius !=0 or resolution != 0):","count":204,"result_id":2091},{"warning":"14:nupic\/encoders\/scalar.py:superfluous-parens:if (resolution != 0):","count":204,"result_id":2091},{"warning":"14:nupic\/regions\/AnomalyRegion.py:unused-argument:def __init__(self, *args, **kwargs):","count":193,"result_id":2091},{"warning":"14:nupic\/research\/temporal_memory.py:unused-import:from collections import defaultdict, namedtuple","count":191,"result_id":2091},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:453","count":189,"result_id":2091},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:457","count":189,"result_id":2091},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:461","count":189,"result_id":2091},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:465","count":189,"result_id":2091},{"warning":"14:nupic\/regions\/SPRegion.py:unused-import:import nupic.research.fdrutilities as fdru","count":189,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:unused-variable:for (iteration, learnPatternNZ) in self._patternNZHistory:","count":184,"result_id":2091},{"warning":"14:nupic\/research\/connections.py:unused-variable:synapse = connections.createSynapse(segment,","count":173,"result_id":2091},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:would yield a vector with a part encoded by the DateEncoder,","count":159,"result_id":2091},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:and to parts seperately taken care of by the ScalarEncoder with the specified parameters.","count":159,"result_id":2091},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:#  long-running process.  An alternate solution is to execute the guts of","count":151,"result_id":2091},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:89","count":151,"result_id":2091},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:95","count":151,"result_id":2091},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:105","count":151,"result_id":2091},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:109","count":151,"result_id":2091},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:112","count":151,"result_id":2091},{"warning":"14:nupic\/swarming\/DummyModelRunner.py:trailing-whitespace:451","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:271","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:336","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:348","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:354","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:363","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:386","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:393","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:417","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:421","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:601","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1585","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1617","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1644","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2234","count":122,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3471","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:240","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:258","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:265","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:276","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:282","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:298","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:306","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:313","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:314","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:326","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:331","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:351","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:356","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:383","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:395","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:409","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:410","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:439","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:458","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:493","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:495","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:499","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:506","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:519","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:529","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:533","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:535","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:536","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:543","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:551","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:558","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:567","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:574","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:578","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:582","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:583","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:606","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:610","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:627","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:637","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:651","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:658","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:659","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:669","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:678","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:679","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:696","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:697","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:702","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:713","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:716","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:744","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:747","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:750","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:751","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:770","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:775","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:776","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:793","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:827","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:829","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:832","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:871","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:872","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:873","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:874","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:875","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:876","count":122,"result_id":2091},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:877","count":122,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:189","count":122,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:240","count":122,"result_id":2091},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:589","count":122,"result_id":2091},{"warning":"14:nupic\/database\/ClientJobsDAO.py:trailing-whitespace:2372","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:407","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:444","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:493","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:514","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:515","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:522","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:527","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:534","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:539","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:550","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:560","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:564","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:688","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:694","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:702","count":122,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:705","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:117","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:119","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:126","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:137","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:151","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:178","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:187","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:189","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:191","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:194","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:197","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:208","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:223","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:235","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:247","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:250","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:256","count":122,"result_id":2091},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:258","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:99","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:101","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:116","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:118","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:122","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:127","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:129","count":122,"result_id":2091},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:136","count":122,"result_id":2091},{"warning":"14:nupic\/algorithms\/KNNClassifier.py:unused-argument:def infer(self, inputPattern, computeScores=True, overCategories=True,","count":242,"result_id":2091},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:def __init__(self,","count":113,"result_id":2091},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:slidingWindowSize=None,","count":113,"result_id":2091},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:mode=MODE_PURE,","count":113,"result_id":2091},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:if (self._mode == Anomaly.MODE_LIKELIHOOD or","count":113,"result_id":2091},{"warning":"14:nupic\/research\/temporal_memory.py:superfluous-parens:if (abs(permanence) < EPSILON):","count":98,"result_id":2091},{"warning":"14:nupic\/research\/connections.py:unused-import:from collections import defaultdict, namedtuple","count":89,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:705","count":80,"result_id":2091},{"warning":"14:nupic\/data\/utils.py:trailing-whitespace:106","count":79,"result_id":2091},{"warning":"14:nupic\/data\/utils.py:unused-import:import string","count":78,"result_id":2091},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:40","count":77,"result_id":2091},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:602","count":77,"result_id":2091},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:839","count":77,"result_id":2091},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:indices of the input category array are filled with -1s.","count":77,"result_id":2091},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:843","count":77,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:superfluous-parens:print(json.dumps(_getExperimentDescriptionSchema(), indent=_INDENT_STEP*2))","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:177","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:encoder.","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:629","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:634","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:635","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:'consumption':     {","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:644","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"PermuteEncoder(fieldName='consumption',","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:encoderClass='AdaptiveScalarEncoder',","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:w=21,","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:n=PermuteInt(28, 521),","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:655","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# put it in as a dict in the permutations.py file instead of a","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# PermuteEncoder().","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:665","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:permStr += \")\"","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:675","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:676","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:689","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:permStr += \"n=PermuteInt(%d, %d), \" % (encoderDict[\"w\"] + 1,","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:698","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# Category encoder","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:716","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:722","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:734","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:757","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:815","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#  the \"predicted\" field (the classification value) should be marked to ONLY","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"NontemporalMultiStep\",","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:826","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:runDelta = fieldInfo.get(\"runDelta\", False)","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:856","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:861","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:926","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# Now generate the encoderSpecsStr and permEncoderChoicesStr strings from","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:947","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:963","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1100","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1115","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1123","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:and options['inferenceType'] in ['NontemporalMultiStep',","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1132","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1133","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1142","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1143","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1147","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1171","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1182","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1185","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1187","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1326","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1335","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:and options['inferenceType'] != 'NontemporalClassification':","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:'MultiStep', 'TemporalAnomaly',","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# The Permutations alwaysIncludePredictedField setting.","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# * When the experiment description has 'inputPredictedField' set to 'no', we","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#   simply do not put in an encoder for the predicted field.","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# * When 'inputPredictedField' is set to 'auto', we include an encoder for the","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#   predicted field (the first swarm will be the predicted field only)","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:(options[\"inferenceArgs\"][\"inputPredictedField\"])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1425","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"minFieldContribution = %d\" % (options['minFieldContribution'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1432","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"killUselessSwarms = %r\" % (options['killUselessSwarms'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"maxFieldBranching = %r\" % (options['maxFieldBranching'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"tryAll3FieldCombinations = %r\" % (options['tryAll3FieldCombinations'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:(options['tryAll3FieldCombinationsWTimestamps'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"fixedFields = %r\" % (options['fixedFields'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"fastSwarmModelParams = %r\" % (options['fastSwarmModelParams'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"maxModels = %r\" % (options['maxModels'])","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1790","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:superfluous-parens:elif inferenceType in (InferenceType.TemporalClassification):","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1844","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:outputLines = []","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:(choicesList, aggFunction) = _generateEncoderChoicesV1(fieldInfo)","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:fieldName = fieldInfo['fieldName']","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-argument:def _generatePermEncoderStr(options, encoderDict):","count":75,"result_id":2091},{"warning":"14:nupic\/swarming\/hypersearch\/errorcodes.py:trailing-whitespace:invalidType           = \"E10010\"      # Invalid","count":73,"result_id":2091},{"warning":"14:nupic\/swarming\/hypersearch\/utils.py:unused-argument:def _handleModelRunnerException(jobID, modelID, jobsDAO, experimentDir, logger,","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:637","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:649","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:653","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:655","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:663","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:666","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:674","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:678","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:685","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:690","count":71,"result_id":2091},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:701","count":71,"result_id":2091},{"warning":"14:nupic\/data\/dictutils.py:unused-import:import copy","count":68,"result_id":2091},{"warning":"14:nupic\/data\/utils.py:trailing-whitespace:163","count":61,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:248","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:668","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:673","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:677","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:762","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:765","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:940","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:943","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1053","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1420","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1528","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1532","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1536","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1540","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1544","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1565","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1575","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1584","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1592","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1600","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1602","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1607","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1616","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1622","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1626","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1637","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1849","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1968","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2000","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2151","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2178","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2186","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2200","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2214","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2228","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2233","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2310","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2411","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2495","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2509","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2511","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2520","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2754","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2756","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2765","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2777","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2788","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2792","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2802","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2808","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2816","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2825","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2841","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2877","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3027","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3428","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3433","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3437","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3449","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3459","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3470","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3479","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3503","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3515","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3728","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3946","count":39,"result_id":2091},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3954","count":39,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:When learning, for every bit in activation pattern, it records a history of","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:the classification each time that bit was active. The history is weighted so","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:# without inference being on. So initialize retval outside","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:393","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:469","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:470","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:Return the inference value from one input sample. The actual","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:learning happens in compute(). The method customCompute() is here to","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:maintain backward compatibility.","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:494","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:541","count":34,"result_id":2091},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:543","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:When learning, for every bit in activation pattern, it records a history of","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# arbitrarily large value for backward compatibility","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Flag to know if the compute() function is ever called. This is to","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# being called at the same time as the compute() method. Only compute()","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# should be called via network.run(). This flag will be removed once we","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# This flag helps to prevent double-computation, in case the deprecated","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# customCompute() method is being called in addition to compute() called","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# An input can potentially belong to multiple categories.","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# If a category value is < 0, it means that the input does not belong to","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Allow to train on multiple input categories.","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Dummy classification input, because this param is required. Learning is","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:#   becomes: [0.1, 0.3, 0.2, 0.7, 0.2, 0.4, 0.3, 0.5]","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:Just return the inference value from one input sample. The actual","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:learning happens in compute() -- if, and only if learning is enabled --","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:348","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:WARNING: The method customCompute() is here to maintain backward","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# If the compute flag has not been initialized (for example if we","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Will raise an exception if the deprecated method customCompute() is","count":34,"result_id":2091},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Large default value for backward compatibility","count":34,"result_id":2091},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:96","count":28,"result_id":2091},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:97","count":28,"result_id":2091},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:102","count":28,"result_id":2091},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:103","count":28,"result_id":2091},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:147","count":25,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:404","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:410","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:679","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:743","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:748","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:750","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:754","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:758","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:781","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:908","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:918","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:922","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:925","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:929","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:945","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:959","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:973","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:990","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1010","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1099","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1360","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1370","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1382","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1388","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1392","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1462","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1467","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1469","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1481","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1498","count":24,"result_id":2091},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:trailing-whitespace:455","count":24,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:70","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:73","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:104","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:108","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:112","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:149","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:153","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:156","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:160","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:166","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:174","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:180","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:183","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:188","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:193","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:202","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:207","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:220","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:233","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:254","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:264","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:281","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:284","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:289","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:296","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:299","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:307","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:311","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:325","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:328","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:342","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:357","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:363","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:577","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:583","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:593","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:602","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:618","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:625","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:635","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:759","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:763","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:768","count":8,"result_id":2091},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:771","count":8,"result_id":2091},{"warning":"14:src\/swarming\/ModelTerminator.py:unused-argument:def checkIsTerminated(self, metric, milestoneIndex):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:75","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:78","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:82","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:#  long-running process.  An alternate solution is to execute the guts of","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:89","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:91","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:95","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:97","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:105","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:109","count":2,"result_id":2089},{"warning":"14:src\/swarming\/api.py:trailing-whitespace:112","count":2,"result_id":2089},{"warning":"14:src\/swarming\/DummyModelRunner.py:trailing-whitespace:while running the model. This causes the","count":2,"result_id":2089},{"warning":"14:src\/swarming\/DummyModelRunner.py:trailing-whitespace:451","count":2,"result_id":2089},{"warning":"14:src\/swarming\/regression.py:unused-argument:def removePoint(self, x, pctChange):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:superfluous-parens:assert (not self.__modelCache)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-argument:def _termHandler(signal, frame):","count":4,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-argument:def _nupicHyperSearchHasErrors(hyperSearchJob):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-variable:for i in range(numWorkers):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-variable:searchParams = _ClientJobUtils.makeSearchJobParamsDict(options=options)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-variable:hsJobParams = hyperSearchJob.getParams()","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-variable:bestMetric = optimizationMetrics.values()[0]","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-variable:for (score, modelID, description, paramLabels) in scoreModelIDDescList:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-argument:def __openAndInitCSVFile(self, modelInfo):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutations_runner.py:unused-argument:def getExpectedNumModels(self, searchMethod):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:superfluous-parens:assert (self._modelIDCtrList[idx][0] == modelID)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:superfluous-parens:assert (curCtr != oldCtr)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:superfluous-parens:assert (modelID == mParamsAndHash.modelId)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:271","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:336","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:348","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:354","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:363","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:particleHash = cjDAO.modelsGetFields(modelID,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:\"paramsHash=%s, particleHash=%s, particleId='%s'\", modelID,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:386","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:393","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:417","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:421","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:422","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:superfluous-parens:if (options.jobID and options.params):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:superfluous-parens:if (options.jobID is None and options.params is None):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchWorker.py:trailing-whitespace:601","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutationhelpers.py:superfluous-parens:assert (max(positions) <= maxValue)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/permutationhelpers.py:superfluous-parens:assert (min(positions) <= minValue)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/ModelRunner.py:trailing-whitespace:don't bother creating a model checkpoint.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/ModelRunner.py:unused-variable:reportDict = dict([(k,metrics[k]) for k in self._reportMetricLabels])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/ModelRunner.py:unused-variable:bestMetric = jobResults.get('bestValue', None)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/ModelRunner.py:unused-variable:isSaved = jobResults.get('saved', False)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/ModelRunner.py:unused-argument:def handleWarningSignal(self, signum, frame):","count":4,"result_id":2089},{"warning":"14:src\/swarming\/hypersearch\/utils.py:unused-argument:def _handleModelRunnerException(jobID, modelID, jobsDAO, experimentDir, logger,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/hypersearch\/errorcodes.py:trailing-whitespace:invalidType           = \"E10010\"      # Invalid","count":2,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:trailing-whitespace:96","count":2,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:trailing-whitespace:97","count":2,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:trailing-whitespace:102","count":2,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:trailing-whitespace:103","count":2,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:unused-argument:globalDecay=0.10,","count":4,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:unused-argument:permanenceMax=1.0,","count":4,"result_id":2089},{"warning":"14:src\/research\/TP_shim.py:unused-argument:def compute(self, bottomUpInput, enableLearn, computeInfOutput=None):","count":4,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(len(SP1._masterConnectedM)!=len(SP2._masterConnectedM)):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(len(SP1._masterPotentialM)!=len(SP2._masterPotentialM)):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(len(SP1._masterPermanenceM)!=len(SP2._masterPermanenceM)):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(connected1!=connected2):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(permanences1!=permanences2):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(potential1!=potential2):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(not numpy.array_equal(SP1._firingBoostFactors,SP2._firingBoostFactors)):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(not numpy.array_equal(SP1._dutyCycleAfterInh,SP2._dutyCycleAfterInh)):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:if(not numpy.array_equal(SP1._dutyCycleBeforeInh,SP2._dutyCycleBeforeInh)):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:print(\"Spatial Poolers are equivalent\")","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:assert(buVectors.shape == vectors.shape)","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:assert (outputs.max() < outputsShape[0] * outputsShape[1])","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:superfluous-parens:assert (len(shape) <= 2)","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:for i in xrange(numVectors):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:for i in xrange(nSeq):","count":4,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:for x in xrange(len):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:for idx,coinc in enumerate(seq):","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:endIdx = nonzeros[-1]","count":4,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:numTimeSteps = len(vectors)","count":4,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:numSpreadOffsets = len(spreadOffsets)","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:numCenterOffsets = len(centerOffsets)","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-variable:(rows, cols) = shape","count":2,"result_id":2089},{"warning":"14:src\/research\/fdrutilities.py:unused-import:from nupic.bindings.math import (SM32, SparseBinaryMatrix)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:superfluous-parens:print(json.dumps(_getExperimentDescriptionSchema(), indent=_INDENT_STEP*2))","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:177","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:encoder.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:629","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:634","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:635","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:'consumption':     {","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:644","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"PermuteEncoder(fieldName='consumption',","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:encoderClass='AdaptiveScalarEncoder',","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:w=21,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:n=PermuteInt(28, 521),","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:655","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# put it in as a dict in the permutations.py file instead of a","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# PermuteEncoder().","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:665","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:permStr += \")\"","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:675","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:676","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:689","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:permStr += \"n=PermuteInt(%d, %d), \" % (encoderDict[\"w\"] + 1,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:698","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# Category encoder","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:716","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:722","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:734","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:757","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:815","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#  the \"predicted\" field (the classification value) should be marked to ONLY","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"NontemporalMultiStep\",","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:826","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:runDelta = fieldInfo.get(\"runDelta\", False)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:856","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:861","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:926","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# Now generate the encoderSpecsStr and permEncoderChoicesStr strings from","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:947","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:963","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1100","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1115","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1123","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:and options['inferenceType'] in ['NontemporalMultiStep',","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1132","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1133","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1142","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1143","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1147","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1171","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1182","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1185","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1187","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1326","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1335","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:and options['inferenceType'] != 'NontemporalClassification':","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:'MultiStep', 'TemporalAnomaly',","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# The Permutations alwaysIncludePredictedField setting.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# * When the experiment description has 'inputPredictedField' set to 'no', we","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#   simply do not put in an encoder for the predicted field.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# * When 'inputPredictedField' is set to 'auto', we include an encoder for the","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#   predicted field (the first swarm will be the predicted field only)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:(options[\"inferenceArgs\"][\"inputPredictedField\"])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1425","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"minFieldContribution = %d\" % (options['minFieldContribution'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1432","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"killUselessSwarms = %r\" % (options['killUselessSwarms'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"maxFieldBranching = %r\" % (options['maxFieldBranching'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"tryAll3FieldCombinations = %r\" % (options['tryAll3FieldCombinations'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:(options['tryAll3FieldCombinationsWTimestamps'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"fixedFields = %r\" % (options['fixedFields'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"fastSwarmModelParams = %r\" % (options['fastSwarmModelParams'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"maxModels = %r\" % (options['maxModels'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1790","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:superfluous-parens:elif inferenceType in (InferenceType.TemporalClassification):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1844","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:outputLines = []","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:(choicesList, aggFunction) = _generateEncoderChoicesV1(fieldInfo)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:fieldName = fieldInfo['fieldName']","count":2,"result_id":2089},{"warning":"14:src\/swarming\/exp_generator\/ExpGenerator.py:unused-argument:def _generatePermEncoderStr(options, encoderDict):","count":2,"result_id":2089},{"warning":"14:src\/research\/temporal_memory_shim.py:unused-import:from nupic.research.TP import TP","count":2,"result_id":2089},{"warning":"14:src\/research\/connections.py:unused-variable:synapse = connections.createSynapse(segment,","count":2,"result_id":2089},{"warning":"14:src\/research\/connections.py:unused-import:from collections import defaultdict, namedtuple","count":2,"result_id":2089},{"warning":"14:src\/research\/temporal_memory.py:superfluous-parens:if (abs(permanence) < EPSILON):","count":2,"result_id":2089},{"warning":"14:src\/research\/temporal_memory.py:unused-import:from collections import defaultdict, namedtuple","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert(len(entry) == generation)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert(len(self.swarmBests[swarmId]) == len(self.swarmScores[swarmId]))","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (generation == 0)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:248","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (modelParamsHash is not None)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (modelParams is not None)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (entryIdx is not None)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (entryIdx in self._swarmIdToIndexes[swarmId])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (not entry['hidden'])","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:swarm generation that have been orphaned.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:668","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:673","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:677","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:retval:  generation index, or None if no particles at all.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:762","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:765","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:The dict will have 3 elements. The keys are the stringified choiceVars,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:and each value is tuple containing (choiceVar, errors) where choiceVar is","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:the original form of the choiceVar (before stringification) and errors is","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:940","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:a new particle ID.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:943","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (evolveFromState is None)","count":4,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (newFromClone is None)","count":4,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (swarmId is None)","count":4,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (newFarFrom is None)","count":4,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1053","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:if varName in varNames:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# in fixedFields","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  the predicted field may or may not be that one field.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  each where this field can NOT be the predicted field.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1420","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  an older multi-step model that doesn't have a separate","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  'classifierOnly' encoder for the predicted field. Here, the predicted","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  field must ALWAYS be present and the first sprint tries the predicted","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert (self._priorStateJSON is not None)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:\"\"\" Given an encoder dictionary key, get the encoder name.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1528","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1532","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1536","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:\"\"\" Given an encoder name, get the key.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1540","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1544","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#in the fast swarm, there is only 1 sprint and field contributions are","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# Get the predicted field encoder name","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1565","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1575","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1584","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1585","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# If we only have 1 field that was tried in the first sprint, then use that","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  as the base and get the contributions from the fields in the next sprint.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert(len(fieldScores)==1)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1592","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1600","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1602","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  (within the top self._hsObj._maxBranching ones) as the base","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1607","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  the top maxBranching+1 fields as our base, which will give that field","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  a contribution of 0.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:and len(fieldScores) > self._hsObj._maxBranching:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1616","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1617","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1622","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:if baseErrScore is not None:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1626","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:errScore = baseErrScore   # for absFieldContribution","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1637","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1640","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1643","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1644","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1849","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:return (self._state['sprints'][sprintIdx]['status'] == 'completed')","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#     (('a.b', {...}, 3.0), ('b.c', {...}, 4.0))]","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#     (('d.e', {...}, 3.0), ('e.f', {...}, 4.0))]","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:1968","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:if(len(activeMatrix[i-1])==0):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  off in sprint 2","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:else:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2000","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:elif self._hsObj._searchType == HsSearchType.legacyTemporal:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2151","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# Build up the new encoder combinations for the next sprint.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2178","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  3 fields.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2186","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2200","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:if (len(self.getActiveSwarms(sprintIdx-1)) > 0):","count":4,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2214","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2228","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:break","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2233","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2234","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:For prediction experiments, this implementation starts out evaluating only","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:single encoder models that encode the predicted field. This is the first","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:\"sprint\". Once it finds the optimum set of variables for that, it starts to","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:build up by adding in combinations of 2 fields (the second \"sprint\"), where","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:one of them is the predicted field. Once the top 2-field combination(s) are","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:discovered, it starts to build up on those by adding in a 3rd field, etc.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2310","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:first \"sprint\". Once it finds the optimum set of variables for that, it starts","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:to  build up by evauating combinations of 3 fields (the second \"sprint\"), where","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:course being the classified field). Once the top 3-field combination(s) are","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:not sent \"into\" the network. Rather, the encoded value just goes directly to","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:the classifier as the classifier input.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:the maxModels variable within the permutations","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:file, or maxModels in the JSON description","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2411","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2495","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2509","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2511","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:streamReader = StreamReader(streamDef, isBlocking=False,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2520","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:superfluous-parens:assert ('descriptionPyContents' in self._searchParams)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:Generate stream definition based on","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2754","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2756","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2765","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2777","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2780","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2788","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2792","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  be present in the permutations file.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# When set to \"yes\", this will force the first sprint to try the predicted","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# When set to \"auto\", the first sprint tries all possible fields (one at a","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  time) in the first sprint.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2802","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  all possible 3-field combinations which takes longer but can find a","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  better model.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2808","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# Always include timestamp fields in the 3-field swarms?","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# This is a less compute intensive version of tryAll3FieldCombinations.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# out when generating the 3-field swarms.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2816","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  a field that did poorly in an early sprint could help accuracy when","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2825","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# Allow the permutations file to override maxBranching.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2841","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  in the jobParams is deprecated.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# If it does not have a separate encoder for the predicted field that","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:classifierOnlyEncoder = None","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:and encoder[\"fieldname\"] == vars.get('predictedField', None):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:2877","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  field, then use the legacy temporal search methodology.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  classification value.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:retval:","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3027","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3030","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:return","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:swarmId=swarmId,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3428","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3433","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:# Clone a random orphaned particle from the incomplete generation","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3437","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  we've already successfully cloned each of the orphaned models at","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  least once, but still need at least one more. If we don't create","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  a new particleID, we will never be able to instantiate another","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  model (since particleID hash is a unique key in the models table).","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  So, on 1\/8\/2013 this logic was changed to create a new particleID","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  whenever we clone an orphan.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3449","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:#  continued particles completed in the prior generation.","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:self._resultsDB.getParticleInfos(swarmId=swarmId,","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3459","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3470","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3471","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3479","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3503","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3506","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3515","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:Before choosing some new models, we first do a sweep for any models that","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:may have been abandonded by failed workers. If\/when we detect an abandoned","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:model, we mark it as complete and orphaned and hide it from any subsequent","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:queries to our ResultsDB. This effectively considers it as if it never","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:existed. We also change the paramsHash and particleHash in the model record","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:of the models table so that we can create another model with the same","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3728","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3731","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3946","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:trailing-whitespace:3954","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-argument:def __init__(self, milestones=None, logLevel=None):","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:particleId = particleState['id']","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:(_, _, errScores, completedFlags, maturedFlags) = \\","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:for (varName, var) in self.permuteVars.iteritems():","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:predictedEncoderName = self._hsObj._predictedFieldEncoder","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:pctFieldContributions, absFieldContributions = \\","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:hasAggregation = False","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:permFile = execfile(filename, globals(), vars)","count":2,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:(readyParticles, readyModelIds, readyErrScores, _, _) = (","count":4,"result_id":2089},{"warning":"14:src\/swarming\/HypersearchV2.py:unused-variable:(allParticles, allModelIds, errScores, completed, matured) = \\","count":6,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-variable:for k,segIdx in enumerate(segList):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def getActiveSegment(self, c,i, timeStep):","count":6,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def getBestMatchingCell(self, c, timeStep, learnState = False):","count":6,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def getLeastAllocatedCell(self, c):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def isSegmentActive(self, seg, timeStep):","count":4,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def getSegmentActivityLevel(self, seg, timeStep, connectedSynapsesOnly =False,","count":6,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:learnState = False):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def isSequenceSegment(self, s):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def getBestMatchingSegment(self, c, i, timeStep, learnState = False):","count":8,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def getSegmentActiveSynapses(self, c,i,s, timeStep, newSynapses =False):","count":10,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def updateSynapse(self, segment, synapse, delta):","count":6,"result_id":2089},{"warning":"14:src\/research\/TP10X2.py:unused-argument:def adaptSegment(self, update, positiveReinforcement):","count":4,"result_id":2089},{"warning":"14:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:unused-argument:def mmGetDefaultMetrics(self, verbosity=1):","count":2,"result_id":2089},{"warning":"14:src\/research\/monitor_mixin\/trace.py:unused-import:import numpy","count":2,"result_id":2089},{"warning":"14:src\/research\/monitor_mixin\/monitor_mixin_base.py:unused-argument:def mmPrettyPrintMetrics(metrics, sigFigs=5):","count":2,"result_id":2089},{"warning":"14:src\/research\/monitor_mixin\/monitor_mixin_base.py:unused-argument:def mmGetDefaultTraces(self, verbosity=1):","count":2,"result_id":2089},{"warning":"14:src\/research\/monitor_mixin\/monitor_mixin_base.py:unused-argument:def mmGetDefaultMetrics(self, verbosity=1):","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:When learning, for every bit in activation pattern, it records a history of","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:the classification each time that bit was active. The history is weighted so","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:# without inference being on. So initialize retval outside","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:393","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:469","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:470","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:Return the inference value from one input sample. The actual","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:learning happens in compute(). The method customCompute() is here to","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:maintain backward compatibility.","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:494","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:541","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:trailing-whitespace:543","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/CLAClassifier.py:unused-variable:for (iteration, learnPatternNZ) in self._patternNZHistory:","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(numActiveColumnsPerInhArea > 0)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(localAreaDensity > 0 and localAreaDensity <= 1)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(column < self._numColumns)","count":10,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:if (period > self._iterationNum):","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(self._inputDimensions.size == 1)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(self._inputDimensions.size == 2)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:if (potential[i] < 1):","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:if (self._random.getReal64() <= connectedPct):","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(period >= 1)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:if (self._localAreaDensity > 0):","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(dimensions.size == 1)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(neighbors)","count":4,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(dimensions.size == 2)","count":2,"result_id":2089},{"warning":"14:src\/research\/spatial_pooler.py:superfluous-parens:assert(dimensions.size > 0)","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:def __init__(self,","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:slidingWindowSize=None,","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:mode=MODE_PURE,","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:if (self._mode == Anomaly.MODE_LIKELIHOOD or","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:if binaryAnomalyThreshold is not None and (","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:binaryAnomalyThreshold >= 1.0  or","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:def compute(self, activeColumns, predictedColumns,","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/anomaly.py:trailing-whitespace:@param inputValue: (optional) value of current input to encoders","count":2,"result_id":2089},{"warning":"14:src\/data\/stats.py:unused-variable:for i in xrange(maxSamples):","count":2,"result_id":2089},{"warning":"14:src\/data\/dictutils.py:superfluous-parens:for key in (set(da) - resultDict['inAButNotInB']):","count":2,"result_id":2089},{"warning":"14:src\/data\/dictutils.py:unused-import:import copy","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/KNNClassifier.py:trailing-whitespace:# Added when svd is not able to decompose vectors - uses raw spare vectors","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/KNNClassifier.py:unused-variable:numCols = thresholdedInput.size \/ self.cellsPerCol","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/KNNClassifier.py:unused-argument:def infer(self, inputPattern, computeScores=True, overCategories=True,","count":4,"result_id":2089},{"warning":"14:src\/algorithms\/KNNClassifier.py:unused-variable:(nz, values) = self._Memory.rowNonZeros(idx)","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/KNNClassifier.py:unused-variable:u,self._s,self._vt = numpy.linalg.svd(self._a[:numSVDSamples])","count":2,"result_id":2089},{"warning":"14:src\/algorithms\/KNNClassifier.py:unused-variable:for j in xrange(self.k):","count":2,"result_id":2089},{"warning":"14:src\/data\/utils.py:trailing-whitespace:# Workaround for this error:","count":2,"result_id":2089},{"warning":"14:src\/data\/utils.py:trailing-whitespace:#  \"ImportError: Failed to import _strptime because the import lockis held by","count":2,"result_id":2089},{"warning":"14:src\/data\/utils.py:trailing-whitespace:106","count":2,"result_id":2089},{"warning":"14:src\/data\/utils.py:trailing-whitespace:163","count":2,"result_id":2089},{"warning":"14:src\/data\/utils.py:unused-import:import string","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:'normal': output the OR of the active and predicted state.","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:'activeState': output only the active state.","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:assert (maxSegmentsPerCell > 0 and maxSynapsesPerSegment > 0)","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:assert (globalDecay == 0.0)","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:assert (maxAge == 0)","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:self.segID = 0","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:\"\"\" @internal","count":4,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:a number of stats in our _internalStats dictionary, including our computed","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:761","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:780","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:800","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:cells in state.","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:901","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:938","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:1022","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:1119","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:1277","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:assert (nSteps>0)","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:1438","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:1941","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:if we started over on startCells. False indicates that the current","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:if (self.verbosity >= 4):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:assert (enableLearn or computeInfOutput)","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:2559","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:# TODO: check if the situation described in the docstring above actually","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:\"\"\"","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:@retval totalMissing a global count of all the missing bits, i.e. the bits","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:that are on in the or of the patterns, but not in the","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:in the output. This list is only returned if details is","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:@returns True if some synapses were decremented to 0 and the segment is a","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:trailing-whitespace:3306","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:assert (numToFree <= len(self.syns))","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:superfluous-parens:if (verbosity >= 4):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:unused-argument:checkSynapseConsistency=False,  # for cpp only -- ignored","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:unused-variable:(creationDate, segUpdate) = updateInfo","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:unused-variable:i, s, numActive = self.getBestMatchingCell(","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:unused-argument:def columnConfidences(self, cellConfidences=None):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:unused-argument:def topDownCompute(self, topDownIn=None):","count":2,"result_id":2089},{"warning":"14:src\/research\/TP.py:unused-argument:def chooseCellsToLearnFrom(self, c, i, s, n, activeState):","count":4,"result_id":2089},{"warning":"14:src\/data\/stream_reader.py:unused-argument:def getLastRecords(self, numRecords):","count":2,"result_id":2089},{"warning":"14:src\/data\/stream_reader.py:unused-argument:def getRecordsRange(self, bookmark=None, range=None):","count":4,"result_id":2089},{"warning":"14:src\/data\/stream_reader.py:unused-argument:def appendRecord(self, record, inputRef=None):","count":4,"result_id":2089},{"warning":"14:src\/data\/stream_reader.py:unused-argument:def appendRecords(self, records, inputRef=None, progressCB=None):","count":6,"result_id":2089},{"warning":"14:src\/data\/stream_reader.py:unused-argument:def seekFromEnd(self, numRecords):","count":2,"result_id":2089},{"warning":"14:src\/data\/CategoryFilter.py:unused-variable:for field, meta in self.filterDict.iteritems():","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:55","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:63","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:67","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:73","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:76","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:superfluous-parens:assert(len(inList) == len(params))","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:221","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:weightsSum = sum(params)","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:226","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:230","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:repeatedly to get each aggregated record.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:240","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:{","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:258","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:260","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:265","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:276","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:are: (fieldName, type, special). The type can be 'float', 'int',","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:'string', 'datetime' or 'bool'. And the special can be '',","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:'T' (for timestamp), 'S' (for sequenceId), or 'R' (for reset).","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:282","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:then the time field will be queried from the reader.","count":6,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:285","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:288","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:291","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:293","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:294","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:298","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:301","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:306","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:313","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:314","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:else:","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:if (aggDef['years'] == aggDef['months'] == aggDef['weeks'] ==","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:aggDef['days'] == aggDef['hours'] == aggDef['minutes'] ==","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:aggDef['seconds'] == aggDef['milliseconds'] ==","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:326","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:#  based on specified min or max values for each field.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:331","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:self._fields = None","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:351","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:356","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:#  fields list.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:383","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:385","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:395","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:398","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:401","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:409","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:410","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:412","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:439","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:and param.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:458","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:493","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:495","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:499","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:506","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:aggregationInfo was None or all aggregation params within it were 0.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:515","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:519","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:aggregated time period)","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:529","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:inputBookmark: a bookmark to the last position from the input that","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:contributed to this aggregated record.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:533","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:535","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:536","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:541","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:543","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:547","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:551","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:556","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:558","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:560","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:563","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:#  aggregated record we return.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:567","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:572","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:574","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:578","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:582","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:583","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:586","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:596","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:599","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:606","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:609","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:610","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:618","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:623","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:627","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:630","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:631","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:# We end the aggregation chunk if we go past the end time","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:636","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:637","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:# -------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:643","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:651","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:655","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:658","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:659","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:669","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:670","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:678","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:679","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:# If a slice just ended, re-compute the start and end time for the","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:#   till we get to the next end time boundary.","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:691","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:692","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:696","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:697","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:702","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:710","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:713","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:716","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:744","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:747","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:750","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:751","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:770","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:aggregator = Aggregator(aggregationInfo=aggregationInfo,","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:775","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:776","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:# If we were not given an output filename, create one based on the","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:793","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:# If some other process already started creating this file, simply","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:827","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:829","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:832","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:871","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:872","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:873","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:874","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:875","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:876","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:trailing-whitespace:877","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:unused-variable:for (name, type, special) in self._inputFields:","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:unused-variable:for i, (fieldIdx, aggFP, paramIdx) in enumerate(self._fields):","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:unused-variable:refIndex = None","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:unused-variable:lockFD = open(lockFilePath, 'w')","count":2,"result_id":2089},{"warning":"14:src\/data\/aggregator.py:unused-variable:(aggRecord, aggBookmark) = aggregator.next(inRecord, None)","count":2,"result_id":2089},{"warning":"14:src\/data\/stats_v2.py:unused-variable:decodedInput = encoder.decode(totalOrEncoderOutput)[0]","count":2,"result_id":2089},{"warning":"14:src\/data\/file_record_stream.py:unused-argument:def getNextRecord(self, useCache=True):","count":2,"result_id":2089},{"warning":"14:src\/data\/file_record_stream.py:unused-argument:def getRecordsRange(self, bookmark=None, range=None):","count":4,"result_id":2089},{"warning":"14:src\/data\/file_record_stream.py:unused-argument:def getLastRecords(self, numRecords):","count":2,"result_id":2089},{"warning":"14:src\/data\/file_record_stream.py:unused-argument:def recordsExistAfter(self, bookmark):","count":2,"result_id":2089},{"warning":"14:src\/data\/file_record_stream.py:unused-argument:def setError(self, error):","count":2,"result_id":2089},{"warning":"14:src\/data\/file_record_stream.py:unused-argument:def setCompleted(self, completed=True):","count":2,"result_id":2089},{"warning":"14:src\/data\/sorter.py:unused-variable:fileds = f.getFields()","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/distributions.py:superfluous-parens:assert (self.numOfValues>self.valueNum)","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/distributions.py:unused-variable:records = [self.getNext() for x in range(n)]","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/distributions.py:unused-argument:def __init__(self, params={}):","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/distributions.py:unused-variable:description = dict(name='GaussianDistribution', mean=self.mean,","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert(len(record)==len(self.fields))","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numRecords>n for field in self.fields))","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numRecords==numRecords for field in self.fields))","count":4,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert(len(self.fields)>i)","count":4,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numEncodings>n for field in self.fields))","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numEncodings==numEncodings for field in self.fields))","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:superfluous-parens:assert(self.dataType is not None or self.encoderType is not None)","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:unused-variable:except TypeError, e:","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:unused-variable:fieldIndex = self.defineField(name, encoderParams)","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:unused-variable:values = [self.addValueToField(i) for n in range(numValues)]","count":2,"result_id":2089},{"warning":"14:src\/data\/generators\/data_generator.py:unused-argument:def _setTypes(self, encoderSpec):","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:70","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:73","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:86","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:#","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:104","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:stacktrace = getattr(value, 'stackTrace', '')","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:108","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:112","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:# Do it this way instead of bringing engine.Timer","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:149","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:153","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:156","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:160","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:166","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:174","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:177","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:180","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:183","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:188","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:189","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:193","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:202","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:207","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:220","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:230","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:233","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:239","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:240","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:self.__class__.__doc__ == collection.__class__.__doc__","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:248","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:254","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:257","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:264","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:266","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:272","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:275","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:281","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:284","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:289","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:296","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:299","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:307","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:311","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:325","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:328","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:342","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:357","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:363","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:# return a PyArray instead of a plain array.","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:#- Implement syntactic sugar properties:","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:401","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:404","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:412","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:415","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:428","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:435","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:439","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:** This line comes from the original docstring (not generated by Documentor)","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:441","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:444","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:456","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:457","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:\"\"\"","count":4,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:463","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:464","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:472","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:476","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:480","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:484","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:\"\"\"Returns functions to set\/get the parameter. These are","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:# Catch the error here. We will re-throw in getParameter or","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:info = (s, g)","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:557","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:561","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:577","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:583","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:593","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:602","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:605","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:618","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:function is passed a value wrapper to the CollectionWrapper","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:625","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:regions = CollectionWrapper(engine.Network.getRegions(self), makeRegion)","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:628","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:def addRegion(self, name, nodeType, nodeParams):","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:635","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:from nupic.analysis import inspect","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:753","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:759","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:763","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:768","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:trailing-whitespace:771","count":2,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:unused-variable:(setter, getter) = self._getParameterMethods(paramName)","count":4,"result_id":2089},{"warning":"14:src\/engine\/__init__.py:unused-argument:def makeRegion(name, r):","count":2,"result_id":2089},{"warning":"14:src\/image\/__init__.py:unused-variable:for i in xrange(iterations):","count":2,"result_id":2089},{"warning":"14:src\/database\/Connection.py:trailing-whitespace:513","count":2,"result_id":2089},{"warning":"14:src\/database\/Connection.py:trailing-whitespace:514","count":2,"result_id":2089},{"warning":"14:src\/database\/Connection.py:trailing-whitespace:583","count":2,"result_id":2089},{"warning":"14:src\/database\/Connection.py:trailing-whitespace:584","count":2,"result_id":2089},{"warning":"14:src\/database\/Connection.py:unused-argument:def _releaseConnection(self, dbConn, cursor):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/adaptivescalar.py:unused-argument:resolution=0, name=None, verbosity=0, clipInput=True, forced=False):","count":4,"result_id":2089},{"warning":"14:src\/encoders\/adaptivescalar.py:unused-argument:def __init__(self, w, minval=None, maxval=None, periodic=False, n=0, radius=0,","count":2,"result_id":2089},{"warning":"14:src\/encoders\/adaptivescalar.py:unused-import:import numpy as np","count":2,"result_id":2089},{"warning":"14:src\/encoders\/date.py:unused-variable:(name, encoder, offset) = self.encoders[i]","count":6,"result_id":2089},{"warning":"14:src\/encoders\/category.py:superfluous-parens:assert(len(fieldsDict) == 1)","count":2,"result_id":2089},{"warning":"14:src\/encoders\/category.py:unused-variable:(inRanges, inDesc) = fieldsDict.values()[0]","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:superfluous-parens:if (w % 2 == 0):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:superfluous-parens:if (minval is not None and maxval is not None):","count":8,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:superfluous-parens:if (minval >= maxval):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:superfluous-parens:if (radius !=0 or resolution != 0):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:superfluous-parens:if (resolution != 0):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:superfluous-parens:while (i < len(nz)):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:unused-variable:name = \"[%s:%s]\" % (self.minval, self.maxval)","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:unused-argument:def encodeIntoArray(self, input, output, learn=True):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:unused-variable:topDownMappingM = self._getTopDownMapping()","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:unused-variable:radius = DEFAULT_RADIUS","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalar.py:unused-variable:resolution = DEFAULT_RESOLUTION","count":2,"result_id":2089},{"warning":"14:src\/encoders\/base.py:superfluous-parens:if (name == fieldName):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/base.py:unused-variable:for (name, encoder, offset) in self.encoders:","count":18,"result_id":2089},{"warning":"14:src\/encoders\/base.py:unused-variable:for name, encoders, offset in self.encoders:","count":2,"result_id":2089},{"warning":"14:src\/encoders\/base.py:unused-variable:(name, encoder, offset) = self.encoders[i]","count":8,"result_id":2089},{"warning":"14:src\/encoders\/base.py:unused-variable:(ranges, rangesStr) = fieldsDict[fieldName]","count":2,"result_id":2089},{"warning":"14:src\/encoders\/delta.py:unused-argument:resolution=0, name=None, verbosity=0, clipInput=True, forced=False):","count":4,"result_id":2089},{"warning":"14:src\/encoders\/delta.py:unused-argument:def __init__(self, w, minval=None, maxval=None, periodic=False, n=0, radius=0,","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:trailing-whitespace:147","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:trailing-whitespace:would yield a vector with a part encoded by the DateEncoder,","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:trailing-whitespace:and to parts seperately taken care of by the ScalarEncoder with the specified parameters.","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-argument:def setFieldStats(self, fieldName, fieldStatistics ):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-variable:for (name, encoder, offset) in self.encoders:","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-variable:for name, encoder, offset in self.encoders:","count":4,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-variable:except TypeError, e:","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-import:from nupic.encoders.scalarspace import ScalarSpaceEncoder","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-import:from nupic.encoders.geospatial_coordinate import GeospatialCoordinateEncoder","count":2,"result_id":2089},{"warning":"14:src\/encoders\/multi.py:unused-import:from nupic.encoders.utils import bitsToString","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalarspace.py:trailing-whitespace:31","count":2,"result_id":2089},{"warning":"14:src\/encoders\/scalarspace.py:trailing-whitespace:resolution=0, name=None, verbosity=0, clipInput=False,","count":2,"result_id":2089},{"warning":"14:src\/encoders\/pass_through_encoder.py:unused-argument:def getScalars(self, input):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/pass_through_encoder.py:unused-argument:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/pass_through_encoder.py:unused-argument:def decode(self, encoded, parentFieldName=\"\"):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/pass_through_encoder.py:unused-argument:def getBucketInfo(self, buckets):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/pass_through_encoder.py:unused-argument:def topDownCompute(self, encoded):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/pass_through_encoder.py:unused-argument:def closenessScores(self, expValues, actValues, **kwargs):","count":2,"result_id":2089},{"warning":"14:src\/encoders\/sdrcategory.py:unused-import:import random","count":2,"result_id":2089},{"warning":"14:src\/encoders\/logenc.py:superfluous-parens:assert(len(fieldsDict) == 1)","count":2,"result_id":2089},{"warning":"14:src\/encoders\/logenc.py:unused-argument:periodic=False,","count":2,"result_id":2089},{"warning":"14:src\/encoders\/logenc.py:unused-variable:(inRanges, inDesc) = fieldsDict.values()[0]","count":2,"result_id":2089},{"warning":"14:src\/regions\/TestRegion.py:superfluous-parens:if (not hasattr(p, '__len__')):","count":4,"result_id":2089},{"warning":"14:src\/regions\/TestRegion.py:unused-argument:def initialize(self, dims, splitterMaps):","count":4,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:superfluous-parens:assert (ClientJobsDAO._instance is None)","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:superfluous-parens:if (not isinstance(p[1], (bool)) and p[1] is not None)]","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:superfluous-parens:return (result == 1)","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:trailing-whitespace:#  the exception args just in case this happens. For example, the","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:trailing-whitespace:#","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:trailing-whitespace:#  If it weren't for this possible Unicode translation error, we","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:trailing-whitespace:#  could watch for only the exceptions we want, like this:","count":2,"result_id":2089},{"warning":"14:src\/database\/ClientJobsDAO.py:trailing-whitespace:2372","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:trailing-whitespace:453","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:trailing-whitespace:457","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:trailing-whitespace:461","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:trailing-whitespace:465","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:superfluous-parens:assert(rfInput.shape[0] == 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:trailing-whitespace:589","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:superfluous-parens:if (not hasattr(p, '__len__')):","count":4,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:unused-argument:def _getAdditionalSpecs(spatialImp, kwargs={}):","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:unused-argument:def initialize(self, dims, splitterMaps):","count":4,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:unused-argument:def _allocateSpatialFDR(self, rfInput):","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:unused-argument:def _doBottomUpCompute(self, rfInput, resetSignal):","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:unused-argument:def _doTopDownInfer(self, topDownInput = None):","count":2,"result_id":2089},{"warning":"14:src\/regions\/SPRegion.py:unused-import:import nupic.research.fdrutilities as fdru","count":2,"result_id":2089},{"warning":"14:src\/regions\/RecordSensor.py:unused-argument:def initialize(self, dims, splitterMaps):","count":4,"result_id":2089},{"warning":"14:src\/regions\/KNNAnomalyClassifierRegion.py:superfluous-parens:if not (a[i] == b[i]):","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNAnomalyClassifierRegion.py:unused-argument:def initialize(self, dims, splitterMaps):","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNAnomalyClassifierRegion.py:unused-variable:numPredictedCols = len(self._prevPredictedColumns)","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:trailing-whitespace:40","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:trailing-whitespace:602","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:trailing-whitespace:839","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:trailing-whitespace:indices of the input category array are filled with -1s.","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:trailing-whitespace:843","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:unused-argument:def initialize(self, dims, splitterMaps):","count":2,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:unused-variable:prediction, inference, allScores = self._knn.infer(activeInput)","count":4,"result_id":2089},{"warning":"14:src\/regions\/KNNClassifierRegion.py:unused-variable:winner, inference, protoScores, categoryDistances = \\","count":2,"result_id":2089},{"warning":"14:src\/regions\/PyRegion.py:unused-argument:def decorated(*args, **kw):","count":4,"result_id":2089},{"warning":"14:src\/regions\/PyRegion.py:unused-argument:def getParameter(self, name, index):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PyRegion.py:unused-argument:def getParameterArrayCount(self, name, index):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PyRegion.py:unused-variable:v = getattr(self, name)","count":2,"result_id":2089},{"warning":"14:src\/regions\/PyRegion.py:unused-argument:def getParameterArray(self, name, index, array):","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:When learning, for every bit in activation pattern, it records a history of","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# arbitrarily large value for backward compatibility","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Flag to know if the compute() function is ever called. This is to","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# being called at the same time as the compute() method. Only compute()","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# should be called via network.run(). This flag will be removed once we","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# This flag helps to prevent double-computation, in case the deprecated","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# customCompute() method is being called in addition to compute() called","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# An input can potentially belong to multiple categories.","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# If a category value is < 0, it means that the input does not belong to","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Allow to train on multiple input categories.","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Dummy classification input, because this param is required. Learning is","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:#   becomes: [0.1, 0.3, 0.2, 0.7, 0.2, 0.4, 0.3, 0.5]","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:Just return the inference value from one input sample. The actual","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:learning happens in compute() -- if, and only if learning is enabled --","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:348","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:WARNING: The method customCompute() is here to maintain backward","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# If the compute flag has not been initialized (for example if we","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Will raise an exception if the deprecated method customCompute() is","count":2,"result_id":2089},{"warning":"14:src\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Large default value for backward compatibility","count":2,"result_id":2089},{"warning":"14:src\/regions\/AnomalyRegion.py:unused-argument:def __init__(self, *args, **kwargs):","count":4,"result_id":2089},{"warning":"14:src\/regions\/TestNode.py:reimported:from pprint import pprint as pp","count":2,"result_id":2089},{"warning":"14:src\/regions\/TPRegion.py:superfluous-parens:if (not hasattr(p, '__len__')):","count":4,"result_id":2089},{"warning":"14:src\/regions\/TPRegion.py:unused-argument:def _getAdditionalSpecs(temporalImp, kwargs={}):","count":2,"result_id":2089},{"warning":"14:src\/regions\/TPRegion.py:unused-argument:def initialize(self, dims, splitterMaps):","count":4,"result_id":2089},{"warning":"14:src\/regions\/TPRegion.py:unused-variable:resetSignal = False","count":2,"result_id":2089},{"warning":"14:src\/regions\/SVMClassifierNode.py:unused-argument:categoriesOut=2,","count":2,"result_id":2089},{"warning":"14:src\/regions\/SVMClassifierNode.py:unused-argument:def compute(self, nodeInfo, inputs, outputs):","count":2,"result_id":2089},{"warning":"14:src\/regions\/SVMClassifierNode.py:unused-variable:(svmParams, svmAccuracy, svmModel) = self._doRecursion(None, None, paramRange)","count":4,"result_id":2089},{"warning":"14:src\/regions\/SVMClassifierNode.py:unused-variable:u, self._s, self._vt = numpy.linalg.svd(self._samples[:numSVDSamples,:self._samples.shape[1]-self._auxInputLen])","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/inward.py:unused-variable:numCats = self._getNumCategories()","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/inward.py:unused-variable:radialPosn = catIterCount % (radialLength + 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/inward.py:unused-argument:def updateSequence(self, state, params):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/random1DOF.py:unused-variable:iteration = self._getIterCount()","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/random1DOF.py:unused-argument:def updateSequence(self, state, params):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/blockSpread.py:unused-argument:def _presentNextPosn(self, state, params):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/rotate_block.py:unused-variable:numIters = numItersPerCat * numCats","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/random.py:unused-argument:def updateSequence(self, state, params):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/center.py:unused-argument:def initSequence(self, state, params):","count":2,"result_id":2089},{"warning":"14:src\/regions\/PictureSensorExplorers\/center.py:unused-argument:def updateSequence(self, state, params):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/GaussianBlur.py:unused-variable:for i in xrange(self.level):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensor.py:superfluous-parens:assert (response[1] is None) # Only one post-filter can determine raw_output","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensor.py:unused-argument:useAux=False, auxDataOut=None, auxDataWidth=None, **keywds):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensor.py:unused-variable:except OSError, e:","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensor.py:unused-argument:def _loadImage(self, index, returnOriginal=False, setErodeFlag=True, userAuxData=None):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensor.py:unused-variable:callerArgs, a, k, callerLocals = inspect.getargvalues(callerFrame)","count":4,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/GaborFilter.py:unused-variable:responses = []","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/GaborFilter.py:unused-argument:def _saveDebugImages(self, imageSet, amplification=1.0):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/GaborFilter.py:unused-variable:filterIndex = 0","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/GaborFilter.py:unused-variable:halfMaxPixelVal = 0.5 * maxPixelVal","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/BoxFixer.py:unused-variable:imgDir, imgName = os.path.split(imagePath)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/BoxFixer.py:unused-variable:key = (videoID, seqID)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:superfluous-parens:while(basePath[0]):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Contrast.py:superfluous-parens:if scaleTowardCenter and not (0.0 <= factor <= 1.0):","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingMin=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingMethod=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:forceBoxContraction=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:gainConstant=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:normalizationMethod=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:suppressByAlpha=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:for paramName, paramValue in self._defaults.items():","count":4,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:perPhaseNormalization=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingMax=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingCenter=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:offImagePixelValue=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:perPlaneNormalization=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:zeroThresholdOut=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:centerSurround=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:boundaryMode=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:filterDim=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:phaseMode=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:logPrefix=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingSlope=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:def calcOutputDims(cls, inputDims,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:defValue = cls._defaults[paramName]","count":4,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:def calcNumPlanes(cls, numOrientations=None,","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:def initialize(self, dims, splitterMaps):","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unreachable:self._gaborComputeProc = None","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:preSuppression = False","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:[left, top, right, bottom] = validRegionIn","count":4,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:outputSize = outHeight * outWidth * self._numPlanes","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:inputSize  = inHeight * inWidth","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:def _doCompute(self, rfInput, rfMask, rfSize, resetSignal, validPyramid):","count":6,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-variable:numGaborFilters = self._gaborBank.shape[1]","count":2,"result_id":2089},{"warning":"14:src\/regions\/extra\/GaborNode2.py:unused-argument:def _doTopDownInfer(self, tdInput, tdNumParents, buOutput, buInput):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Resize.py:unused-variable:for i, size in enumerate(self.sizes):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Occlusion.py:unused-variable:for j in xrange(self.numRectangles):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Flip.py:unused-argument:def __init__(self, difficulty = 0.5, seed=None, reproducible=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/LogPolar.py:unused-variable:sentinel = -1 * img.size[0] * img.size[1]","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:outputSize = outHeight * outWidth * self._outputPlaneCount","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:outputOffset = 0","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:inputOffset  = 0","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:mask_box = (0, 0, outWidth, outHeight)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Tracking.py:unused-variable:clipBoxHeight = clipBox[3] - clipBox[1]","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Tracking.py:unused-variable:clipBoxWidth = clipBox[2] - clipBox[0]","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorFilters\/Lines.py:unused-variable:for i in xrange(int(self.difficulty*self.maxLines)):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/Flash.py:unused-variable:for i in xrange(remainingIterations-1):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/ToCenterSweep.py:superfluous-parens:assert(length >= 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RandomJump.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/OnionSweep.py:superfluous-parens:assert(self.jitterLength == 4*jitterSize+1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/OnionSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/CrossSweep.py:superfluous-parens:assert(radius >= 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/EyeMovements.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RandomSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:unused-argument:def seek(self, iteration=None, position=None):","count":4,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RandomFlash.py:unused-variable:totalNumSamples = minNumSamples * numCats","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/RandomFlash.py:unused-variable:minNumSamples = min([pop for (cat, pop) in catPopulation.items()])","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/InwardSweep.py:unused-variable:for spokeIter in range(spokeIdx):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/InwardSweep.py:unused-variable:radialPosn = catIterCount % (radius + 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/InwardSweep.py:unused-argument:def seek(self, iteration=None, position=None):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/InwardSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/PatrolSweep.py:superfluous-parens:assert(radius >= 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:superfluous-parens:assert(radius >= 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/OnionBlock.py:unused-argument:def seek(self, iteration=None, position=None):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/OnionBlock.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/Jiggle.py:superfluous-parens:assert(radius >= 1)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/Jiggle.py:superfluous-parens:if (jiggleIndex & 1):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:unused-variable:for i in xrange(iteration-1):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:unused-argument:def getNumIterations(self, image):","count":2,"result_id":2089},{"warning":"14:src\/regions\/RecordSensorFilters\/AddNoise.py:unused-argument:def process(self, encoder, data):","count":2,"result_id":2089},{"warning":"14:src\/regions\/RecordSensorFilters\/ModifyFields.py:superfluous-parens:assert (False)","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/opftaskdriver.py:unused-variable:loggedMetricPatterns =  taskControl.get('loggedMetrics', None)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/client.py:trailing-whitespace:61","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/client.py:trailing-whitespace:71","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/client.py:trailing-whitespace:80","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/client.py:unused-variable:for i in range(n):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unused-argument:def next(self, seeking=False):","count":2,"result_id":2089},{"warning":"14:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unused-argument:def _firstTranslationPosition(self, ebbox, image):","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/previousvaluemodel.py:trailing-whitespace:82","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/previousvaluemodel.py:trailing-whitespace:96","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/previousvaluemodel.py:trailing-whitespace:This method is used for the data source to communicate to the","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/previousvaluemodel.py:trailing-whitespace:model any statistics that it knows about the fields","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/predictionmetricsmanager.py:trailing-whitespace:110","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/predictionmetricsmanager.py:unused-import:import logging","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/predictionmetricsmanager.py:unused-import:import pprint","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/predictionmetricsmanager.py:unused-import:from collections import (namedtuple,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/two_gram_model.py:trailing-whitespace:This method is used for the data source to communicate to the","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/two_gram_model.py:trailing-whitespace:model any statistics that it knows about the fields","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/opfutils.py:trailing-whitespace:\")\".format(self.dataRow,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/opfutils.py:trailing-whitespace:#                      in \"predictionRow\".","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/opfutils.py:trailing-whitespace:__slots__= (\"predictionNumber\", \"rawInput\", \"sensorInput\", \"inferences\",","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/opfbasicenvironment.py:unused-argument:def _translateMetricsToJSON(self, metrics, label):","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/opfbasicenvironment.py:unused-variable:for i in xrange(numRowsToSkip):","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/clamodel_classifier_helper.py:unused-variable:knn = classifier.getSelf()._knn","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/clamodel_classifier_helper.py:unused-variable:numPredictedCols = len(self._prevPredictedColumns)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/expdescriptionhelpers.py:superfluous-parens:assert(not self.__inLookup)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/expdescriptionhelpers.py:superfluous-parens:assert(self.__cachedResult is not self.__NoResult)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/expdescriptionhelpers.py:superfluous-parens:assert(not isinstance(self.__cachedResult, ValueGetterBase))","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/expdescriptionhelpers.py:superfluous-parens:assert(referenceDict is None or isinstance(referenceDict, dict))","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/expdescriptionhelpers.py:superfluous-parens:assert(len(dictKeyChain) >= 1)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/expdescriptionhelpers.py:superfluous-parens:assert(len(recursionStack) < 1000)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:superfluous-parens:assert(self._countDict[removeElem] > -1)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:404","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:410","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:history buffer, and returns the groundTruth from self._predictionSteps ago,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:superfluous-parens:assert (len(self._predictionSteps) == 1)","count":6,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:an average. Note that this can suffer from samples where the actual value is","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:very small or zero - this one sample can drastically alter the mean. To","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:avoid this potential issue, use 'altMAPE' instead.","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:679","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:other investigations that have also used MAPE.","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:705","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:743","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:748","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:750","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:754","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:758","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:781","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:superfluous-parens:if(self.dataLength < 0 ):","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:superfluous-parens:if(self.elements==self.dataLength):","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:875","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:908","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:912","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:918","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:922","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:925","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:929","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:945","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\" Helper function to return a scalar value representing the expected","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:959","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:973","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:990","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1010","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1099","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:superfluous-parens:assert(metricSpec.params.has_key('predictionField'))","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1345","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:the underlying metric for each step.","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1360","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1370","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:# Unless this is a custom_error_metric, when we have a dict of","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:#  probabilities, get the most probable one. For custom error metrics,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1382","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1388","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1392","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:print \"MetricMultiStep %s: aggErrAvg: %s\" % (self._predictionSteps,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\\n  Metric:  %s\" % (self._predictionSteps, groundTruth, prediction,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:# Force all subErrorMetric windows to 1. This is necessary because by","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:\"Predictions:  %s\" % (self._predictionSteps, groundTruth,","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1462","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1467","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1469","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1481","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:print (\"MetricMultiStepProbability %s: aggErr for stepSize %d: %s\" %","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:print (\"MetricMultiStepProbability %s: aggErr moving avg: %s\" %","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:1498","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\"Multi metric can combine multiple other (sub)metrics and","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\"MetricMulti","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:@param metrics - [list of submetrics]","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:if (weights is None or not isinstance(weights, list) or","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:trailing-whitespace:return \"MetricMulti(weights=%s, metrics=%s)\" % (self.weights, self.metrics)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-variable:for step in self._predictionSteps:","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-variable:self.data = [None for i in range(max(length,0))]","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-variable:n = len(historyBuffer)","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-variable:expectedValue = 0","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-import:import random","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-import:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/metrics.py:unused-import:from io import BytesIO, StringIO","count":2,"result_id":2089},{"warning":"14:src\/support\/features.py:superfluous-parens:return (feature in Features.getFeatures(group, addList, removeList))","count":2,"result_id":2089},{"warning":"14:src\/support\/features.py:unused-variable:return [group for group, features in GROUPS.iteritems()]","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:117","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:119","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:126","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:137","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:138","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:151","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:timeoutSec:           How many seconds from time of initial call to stop","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:Default: any Exception-based exception will trigger","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:current exception meets the retryExceptions criteria:","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:takes the current exception instance, args, and kwargs","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:178","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:187","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:189","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:191","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:194","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:197","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:208","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:223","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:235","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:247","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:248","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:250","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:256","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:258","count":2,"result_id":2089},{"warning":"14:src\/support\/decorators.py:trailing-whitespace:259","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:366","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:to console, but allows WARNING, ERROR, and CRITICAL","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:386","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:391","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:394","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:397","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:407","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:444","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:493","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:514","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:515","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:522","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:527","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:530","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:534","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:539","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:550","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:560","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:564","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:567","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:Return the number of months and seconds from an aggregation dict that","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:represents a date and time.","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:637","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:'months', 'weeks', 'days', 'hours', 'minutes', seconds', 'milliseconds',","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:microsecond.","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:649","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:aggregationMicroseconds({'years': 1, 'hours': 4, 'microseconds':42}) ==","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:653","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:655","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:seconds += interval.get('seconds', 0)","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:663","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:666","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:674","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:678","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:number.","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:685","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:688","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:690","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:694","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:701","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:702","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:trailing-whitespace:705","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:unused-variable:callable_name, file_name, class_name = getCallerInfo(2)","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:unused-argument:def title(s=None, additional='', stream=sys.stdout, frame='-'):","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:unused-variable:method_name = s","count":2,"result_id":2089},{"warning":"14:src\/support\/__init__.py:unused-argument:def handleErrorPatch(*args, **kwargs):","count":4,"result_id":2089},{"warning":"14:src\/support\/configuration.py:unused-import:from nupic.support.configuration_custom import Configuration","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:88","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:90","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:94","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:106","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:107","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:130","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_custom.py:trailing-whitespace:275","count":2,"result_id":2089},{"warning":"14:src\/support\/datafiles.py:superfluous-parens:assert (min(allCategories[start:end]) == max(allCategories[start:end]))","count":2,"result_id":2089},{"warning":"14:src\/support\/datafiles.py:unused-variable:for i in range(len(allCategories) \/ count):","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:99","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:101","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:116","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:118","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:122","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:127","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:129","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:130","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:trailing-whitespace:136","count":2,"result_id":2089},{"warning":"14:src\/support\/pymysqlhelpers.py:unused-argument:def retryFilter(e, args, kwargs):","count":4,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:59","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:73","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:87","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:96","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:102","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:104","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:108","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:116","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:122","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:130","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:136","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:145","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:159","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:311","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:399","count":2,"result_id":2089},{"warning":"14:src\/support\/configuration_base.py:trailing-whitespace:419","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:trailing-whitespace:68","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:trailing-whitespace:78","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:trailing-whitespace:79","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:superfluous-parens:if (numActiveColumnsPerInhArea > 0):","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:trailing-whitespace:given parameters.","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:trailing-whitespace:162","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:superfluous-parens:if (imp == \"py\"):","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:superfluous-parens:elif (imp == \"cpp\"):","count":2,"result_id":2089},{"warning":"14:src\/support\/unittesthelpers\/algorithm_test_helpers.py:trailing-whitespace:173","count":2,"result_id":2089},{"warning":"14:src\/test\/test_framework_helpers.py:unused-argument:def tagTest(tag, comment=None):","count":2,"result_id":2089},{"warning":"14:src\/math\/stats.py:unused-variable:for j in range(iter):","count":2,"result_id":2089},{"warning":"14:src\/math\/dist.py:superfluous-parens:return ( - self.lambdaParameter + self.logLambda * x - logFactorial(x) )","count":4,"result_id":2089},{"warning":"14:src\/math\/dist.py:unreachable:import bisect","count":2,"result_id":2089},{"warning":"14:src\/math\/proposal.py:superfluous-parens:if (self.accepted.n >= self.accepted.max):","count":2,"result_id":2089},{"warning":"14:src\/math\/proposal.py:unreachable:from nupic.math.dist import *","count":2,"result_id":2089},{"warning":"14:src\/math\/proposal.py:unused-argument:def __init__(self, prop, min=None, max=None, offset=0, maxIterations=1000):","count":2,"result_id":2089},{"warning":"14:src\/math\/proposal.py:unused-variable:maxIterations = 10","count":2,"result_id":2089},{"warning":"14:src\/math\/logarithms.py:unused-variable:except FloatingPointError, e:","count":2,"result_id":2089},{"warning":"14:src\/math\/logarithms.py:unused-variable:ssum = x.sum(0)","count":2,"result_id":2089},{"warning":"14:src\/math\/mvn.py:superfluous-parens:if self.mean is not None: return (x - self.mean)","count":2,"result_id":2089},{"warning":"14:src\/math\/mvn.py:unreachable:import numpy","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/clamodel.py:trailing-whitespace:455","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/clamodel.py:trailing-whitespace:\"Expected predicted field '%s' in input row, but was not found!\"","count":2,"result_id":2089},{"warning":"14:src\/frameworks\/opf\/clamodel.py:unused-argument:predictedField=None,","count":2,"result_id":2089},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:#  long-running process.  An alternate solution is to execute the guts of","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:89","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:95","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:105","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:109","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/api.py:trailing-whitespace:112","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/DummyModelRunner.py:trailing-whitespace:451","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:271","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:336","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:348","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:354","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:363","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:386","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:393","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:417","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:421","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchWorker.py:trailing-whitespace:601","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/hypersearch\/errorcodes.py:trailing-whitespace:invalidType           = \"E10010\"      # Invalid","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/hypersearch\/utils.py:unused-argument:def _handleModelRunnerException(jobID, modelID, jobsDAO, experimentDir, logger,","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:96","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:97","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:102","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP_shim.py:trailing-whitespace:103","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:superfluous-parens:print(json.dumps(_getExperimentDescriptionSchema(), indent=_INDENT_STEP*2))","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:177","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:encoder.","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:629","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:634","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:635","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:'consumption':     {","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:644","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"PermuteEncoder(fieldName='consumption',","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:encoderClass='AdaptiveScalarEncoder',","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:w=21,","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:n=PermuteInt(28, 521),","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:655","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# put it in as a dict in the permutations.py file instead of a","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# PermuteEncoder().","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:665","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:permStr += \")\"","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:675","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:676","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:689","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:permStr += \"n=PermuteInt(%d, %d), \" % (encoderDict[\"w\"] + 1,","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:698","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# Category encoder","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:716","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:722","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:734","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:757","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:815","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#  the \"predicted\" field (the classification value) should be marked to ONLY","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"NontemporalMultiStep\",","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:826","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:runDelta = fieldInfo.get(\"runDelta\", False)","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:856","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:861","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:926","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# Now generate the encoderSpecsStr and permEncoderChoicesStr strings from","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:947","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:963","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1100","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1115","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1123","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:and options['inferenceType'] in ['NontemporalMultiStep',","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1132","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1133","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1142","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1143","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1147","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1171","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1182","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1185","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1187","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1326","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1335","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:and options['inferenceType'] != 'NontemporalClassification':","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:'MultiStep', 'TemporalAnomaly',","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# The Permutations alwaysIncludePredictedField setting.","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# * When the experiment description has 'inputPredictedField' set to 'no', we","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#   simply do not put in an encoder for the predicted field.","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:# * When 'inputPredictedField' is set to 'auto', we include an encoder for the","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:#   predicted field (the first swarm will be the predicted field only)","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:(options[\"inferenceArgs\"][\"inputPredictedField\"])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1425","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"minFieldContribution = %d\" % (options['minFieldContribution'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1432","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"killUselessSwarms = %r\" % (options['killUselessSwarms'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"maxFieldBranching = %r\" % (options['maxFieldBranching'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"tryAll3FieldCombinations = %r\" % (options['tryAll3FieldCombinations'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:(options['tryAll3FieldCombinationsWTimestamps'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"fixedFields = %r\" % (options['fixedFields'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"fastSwarmModelParams = %r\" % (options['fastSwarmModelParams'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:\"maxModels = %r\" % (options['maxModels'])","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1790","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:superfluous-parens:elif inferenceType in (InferenceType.TemporalClassification):","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:trailing-whitespace:1844","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:outputLines = []","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:(choicesList, aggFunction) = _generateEncoderChoicesV1(fieldInfo)","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-variable:fieldName = fieldInfo['fieldName']","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/exp_generator\/ExpGenerator.py:unused-argument:def _generatePermEncoderStr(options, encoderDict):","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:248","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:668","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:673","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:677","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:762","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:765","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:940","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:943","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1053","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1420","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1528","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1532","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1536","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1540","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1544","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1565","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1575","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1584","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1585","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1592","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1600","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1602","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1607","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1616","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1617","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1622","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1626","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1637","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1644","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1849","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:1968","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2000","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2151","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2178","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2186","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2200","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2214","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2228","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2233","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2234","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2310","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2411","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2495","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2509","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2511","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2520","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2754","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2756","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2765","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2777","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2788","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2792","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2802","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2808","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2816","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2825","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2841","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:2877","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3027","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3428","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3433","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3437","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3449","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3459","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3470","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3471","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3479","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3503","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3515","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3728","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3946","count":1,"result_id":2088},{"warning":"14:nupic\/swarming\/HypersearchV2.py:trailing-whitespace:3954","count":1,"result_id":2088},{"warning":"14:nupic\/research\/connections.py:unused-variable:synapse = connections.createSynapse(segment,","count":1,"result_id":2088},{"warning":"14:nupic\/research\/connections.py:unused-import:from collections import defaultdict, namedtuple","count":1,"result_id":2088},{"warning":"14:nupic\/research\/temporal_memory.py:superfluous-parens:if (abs(permanence) < EPSILON):","count":1,"result_id":2088},{"warning":"14:nupic\/research\/temporal_memory.py:unused-import:from collections import defaultdict, namedtuple","count":1,"result_id":2088},{"warning":"14:nupic\/research\/monitor_mixin\/monitor_mixin_base.py:unused-argument:def mmPrettyPrintMetrics(metrics, sigFigs=5):","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:When learning, for every bit in activation pattern, it records a history of","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:the classification each time that bit was active. The history is weighted so","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:# without inference being on. So initialize retval outside","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:393","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:469","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:470","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:Return the inference value from one input sample. The actual","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:learning happens in compute(). The method customCompute() is here to","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:maintain backward compatibility.","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:494","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:541","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:543","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/CLAClassifier.py:unused-variable:for (iteration, learnPatternNZ) in self._patternNZHistory:","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:def __init__(self,","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:slidingWindowSize=None,","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:mode=MODE_PURE,","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:if (self._mode == Anomaly.MODE_LIKELIHOOD or","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:if binaryAnomalyThreshold is not None and (","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/anomaly.py:trailing-whitespace:binaryAnomalyThreshold >= 1.0  or","count":1,"result_id":2088},{"warning":"14:nupic\/data\/dictutils.py:unused-import:import copy","count":1,"result_id":2088},{"warning":"14:nupic\/algorithms\/KNNClassifier.py:unused-argument:def infer(self, inputPattern, computeScores=True, overCategories=True,","count":2,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:761","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:780","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:800","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:901","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:938","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1022","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1119","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1277","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1438","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:1941","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:2559","count":1,"result_id":2088},{"warning":"14:nupic\/research\/TP.py:trailing-whitespace:3306","count":1,"result_id":2088},{"warning":"14:nupic\/data\/utils.py:trailing-whitespace:106","count":1,"result_id":2088},{"warning":"14:nupic\/data\/utils.py:trailing-whitespace:163","count":1,"result_id":2088},{"warning":"14:nupic\/data\/utils.py:unused-import:import string","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:221","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:226","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:230","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:240","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:258","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:265","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:276","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:282","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:285","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:288","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:291","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:294","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:298","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:301","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:306","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:313","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:314","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:326","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:331","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:351","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:356","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:383","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:395","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:398","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:401","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:409","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:410","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:439","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:458","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:493","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:495","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:499","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:506","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:515","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:519","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:529","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:533","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:535","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:536","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:543","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:551","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:556","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:558","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:560","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:567","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:574","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:578","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:582","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:583","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:596","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:599","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:606","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:609","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:610","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:623","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:627","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:631","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:636","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:637","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:651","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:658","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:659","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:669","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:678","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:679","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:692","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:696","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:697","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:702","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:710","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:713","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:716","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:744","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:747","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:750","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:751","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:770","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:775","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:776","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:793","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:827","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:829","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:832","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:871","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:872","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:873","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:874","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:875","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:876","count":1,"result_id":2088},{"warning":"14:nupic\/data\/aggregator.py:trailing-whitespace:877","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/distributions.py:superfluous-parens:assert (self.numOfValues>self.valueNum)","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/distributions.py:unused-variable:records = [self.getNext() for x in range(n)]","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/distributions.py:unused-argument:def __init__(self, params={}):","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/distributions.py:unused-variable:description = dict(name='GaussianDistribution', mean=self.mean,","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert(len(record)==len(self.fields))","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numRecords>n for field in self.fields))","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numRecords==numRecords for field in self.fields))","count":2,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert(len(self.fields)>i)","count":2,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numEncodings>n for field in self.fields))","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert (all(field.numEncodings==numEncodings for field in self.fields))","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:superfluous-parens:assert(self.dataType is not None or self.encoderType is not None)","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-variable:except TypeError, e:","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-variable:fieldIndex = self.defineField(name, encoderParams)","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-variable:values = [self.addValueToField(i) for n in range(numValues)]","count":1,"result_id":2088},{"warning":"14:nupic\/data\/generators\/data_generator.py:unused-argument:def _setTypes(self, encoderSpec):","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:70","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:73","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:104","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:108","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:112","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:149","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:153","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:156","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:160","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:166","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:174","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:180","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:183","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:188","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:189","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:193","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:202","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:207","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:220","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:233","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:240","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:254","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:264","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:281","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:284","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:289","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:296","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:299","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:307","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:311","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:325","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:328","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:342","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:357","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:363","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:577","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:583","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:593","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:602","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:618","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:625","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:635","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:759","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:763","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:768","count":1,"result_id":2088},{"warning":"14:nupic\/engine\/__init__.py:trailing-whitespace:771","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/scalar.py:superfluous-parens:if (radius !=0 or resolution != 0):","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/scalar.py:superfluous-parens:if (resolution != 0):","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/scalar.py:unused-variable:radius = DEFAULT_RADIUS","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/scalar.py:unused-variable:resolution = DEFAULT_RESOLUTION","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:147","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:would yield a vector with a part encoded by the DateEncoder,","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/multi.py:trailing-whitespace:and to parts seperately taken care of by the ScalarEncoder with the specified parameters.","count":1,"result_id":2088},{"warning":"14:nupic\/encoders\/sdrcategory.py:unused-import:import random","count":1,"result_id":2088},{"warning":"14:nupic\/database\/ClientJobsDAO.py:trailing-whitespace:2372","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:453","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:457","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:461","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:465","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/SPRegion.py:trailing-whitespace:589","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/SPRegion.py:unused-import:import nupic.research.fdrutilities as fdru","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:40","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:602","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:839","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:indices of the input category array are filled with -1s.","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:843","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:When learning, for every bit in activation pattern, it records a history of","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# arbitrarily large value for backward compatibility","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Flag to know if the compute() function is ever called. This is to","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# being called at the same time as the compute() method. Only compute()","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# should be called via network.run(). This flag will be removed once we","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# This flag helps to prevent double-computation, in case the deprecated","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# customCompute() method is being called in addition to compute() called","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# An input can potentially belong to multiple categories.","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# If a category value is < 0, it means that the input does not belong to","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Allow to train on multiple input categories.","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Dummy classification input, because this param is required. Learning is","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:#   becomes: [0.1, 0.3, 0.2, 0.7, 0.2, 0.4, 0.3, 0.5]","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:Just return the inference value from one input sample. The actual","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:learning happens in compute() -- if, and only if learning is enabled --","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:348","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:WARNING: The method customCompute() is here to maintain backward","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# If the compute flag has not been initialized (for example if we","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Will raise an exception if the deprecated method customCompute() is","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:# Large default value for backward compatibility","count":1,"result_id":2088},{"warning":"14:nupic\/regions\/AnomalyRegion.py:unused-argument:def __init__(self, *args, **kwargs):","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:404","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:410","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:679","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:705","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:743","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:748","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:750","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:754","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:758","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:781","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:908","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:918","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:922","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:925","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:929","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:945","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:959","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:973","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:990","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1010","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1099","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1360","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1370","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1382","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1388","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1392","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1462","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1467","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1469","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1481","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:1498","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\"Multi metric can combine multiple other (sub)metrics and","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:\"\"\"MetricMulti","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:@param metrics - [list of submetrics]","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:if (weights is None or not isinstance(weights, list) or","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/metrics.py:trailing-whitespace:return \"MetricMulti(weights=%s, metrics=%s)\" % (self.weights, self.metrics)","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:117","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:119","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:126","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:137","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:151","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:178","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:187","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:189","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:191","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:194","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:197","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:208","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:223","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:235","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:247","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:250","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:256","count":1,"result_id":2088},{"warning":"14:nupic\/support\/decorators.py:trailing-whitespace:258","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:407","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:444","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:493","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:514","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:515","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:522","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:527","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:534","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:539","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:550","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:560","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:564","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:637","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:649","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:653","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:655","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:663","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:666","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:674","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:678","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:685","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:688","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:690","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:694","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:701","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:702","count":1,"result_id":2088},{"warning":"14:nupic\/support\/__init__.py:trailing-whitespace:705","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:99","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:101","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:116","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:118","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:122","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:127","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:129","count":1,"result_id":2088},{"warning":"14:nupic\/support\/pymysqlhelpers.py:trailing-whitespace:136","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:trailing-whitespace:455","count":1,"result_id":2088},{"warning":"14:nupic\/frameworks\/opf\/clamodel.py:trailing-whitespace:\"Expected predicted field '%s' in input row, but was not found!\"","count":1,"result_id":2088},{"warning":"14:src\/nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:40","count":6,"result_id":2082},{"warning":"14:src\/nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:602","count":6,"result_id":2082},{"warning":"14:src\/nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:839","count":6,"result_id":2082},{"warning":"14:src\/nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:indices of the input category array are filled with -1s.","count":6,"result_id":2082},{"warning":"14:src\/nupic\/regions\/KNNClassifierRegion.py:trailing-whitespace:843","count":6,"result_id":2082},{"warning":"14:src\/nupic\/image\/__init__.py:unused-variable:for i in xrange(iterations):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:unused-variable:numCats = self._getNumCategories()","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:unused-variable:radialPosn = catIterCount % (radialLength + 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:unused-argument:def updateSequence(self, state, params):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:unused-variable:iteration = self._getIterCount()","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:unused-argument:def updateSequence(self, state, params):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:unused-argument:def _presentNextPosn(self, state, params):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:unused-variable:numIters = numItersPerCat * numCats","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/random.py:unused-argument:def updateSequence(self, state, params):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/center.py:unused-argument:def initSequence(self, state, params):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/PictureSensorExplorers\/center.py:unused-argument:def updateSequence(self, state, params):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/GaussianBlur.py:unused-variable:for i in xrange(self.level):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensor.py:superfluous-parens:assert (response[1] is None) # Only one post-filter can determine raw_output","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensor.py:unused-argument:useAux=False, auxDataOut=None, auxDataWidth=None, **keywds):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensor.py:unused-variable:except OSError, e:","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensor.py:unused-argument:def _loadImage(self, index, returnOriginal=False, setErodeFlag=True, userAuxData=None):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensor.py:unused-variable:callerArgs, a, k, callerLocals = inspect.getargvalues(callerFrame)","count":38,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:unused-variable:responses = []","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:unused-argument:def _saveDebugImages(self, imageSet, amplification=1.0):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:unused-variable:filterIndex = 0","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:unused-variable:halfMaxPixelVal = 0.5 * maxPixelVal","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:unused-variable:imgDir, imgName = os.path.split(imagePath)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:unused-variable:key = (videoID, seqID)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:superfluous-parens:if scaleTowardCenter and not (0.0 <= factor <= 1.0):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:superfluous-parens:while(basePath[0]):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingMin=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingMethod=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:forceBoxContraction=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:gainConstant=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:normalizationMethod=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:suppressByAlpha=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:for paramName, paramValue in self._defaults.items():","count":38,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:perPhaseNormalization=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingMax=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingCenter=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:offImagePixelValue=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:perPlaneNormalization=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:zeroThresholdOut=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:centerSurround=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:boundaryMode=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:filterDim=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:phaseMode=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:logPrefix=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:postProcessingSlope=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:def calcOutputDims(cls, inputDims,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:defValue = cls._defaults[paramName]","count":38,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:def calcNumPlanes(cls, numOrientations=None,","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:def initialize(self, dims, splitterMaps):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unreachable:self._gaborComputeProc = None","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:preSuppression = False","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:[left, top, right, bottom] = validRegionIn","count":38,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:outputSize = outHeight * outWidth * self._numPlanes","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:inputSize  = inHeight * inWidth","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:def _doCompute(self, rfInput, rfMask, rfSize, resetSignal, validPyramid):","count":57,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-variable:numGaborFilters = self._gaborBank.shape[1]","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/extra\/GaborNode2.py:unused-argument:def _doTopDownInfer(self, tdInput, tdNumParents, buOutput, buInput):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:unused-variable:for i, size in enumerate(self.sizes):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:unused-variable:sentinel = -1 * img.size[0] * img.size[1]","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Flip.py:unused-argument:def __init__(self, difficulty = 0.5, seed=None, reproducible=False):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Occlusion.py:unused-variable:for j in xrange(self.numRectangles):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:outputSize = outHeight * outWidth * self._outputPlaneCount","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:outputOffset = 0","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:inputOffset  = 0","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:unused-variable:mask_box = (0, 0, outWidth, outHeight)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:unused-variable:for i in xrange(int(self.difficulty*self.maxLines)):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:unused-variable:clipBoxHeight = clipBox[3] - clipBox[1]","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:unused-variable:clipBoxWidth = clipBox[2] - clipBox[0]","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/Flash.py:unused-variable:for i in xrange(remainingIterations-1):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/ToCenterSweep.py:superfluous-parens:assert(length >= 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:superfluous-parens:assert(self.jitterLength == 4*jitterSize+1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:superfluous-parens:assert(radius >= 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:unused-variable:totalNumSamples = minNumSamples * numCats","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:unused-variable:minNumSamples = min([pop for (cat, pop) in catPopulation.items()])","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:unused-variable:for spokeIter in range(spokeIdx):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:unused-variable:radialPosn = catIterCount % (radius + 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/PatrolSweep.py:superfluous-parens:assert(radius >= 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:superfluous-parens:assert(radius >= 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:superfluous-parens:assert(radius >= 1)","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:superfluous-parens:if (jiggleIndex & 1):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:unused-variable:for i in xrange(iteration-1):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:unused-argument:def getNumIterations(self, image):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unused-argument:def _firstTranslationPosition(self, ebbox, image):","count":19,"result_id":2069},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:70","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:73","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:86","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:104","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:stacktrace = getattr(value, 'stackTrace', '')","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:108","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:112","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:149","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:153","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:156","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:160","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:166","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:174","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:177","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:180","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:183","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:188","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:193","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:202","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:207","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:220","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:230","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:239","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:240","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:self.__class__.__doc__ == collection.__class__.__doc__","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:248","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:254","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:257","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:264","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:266","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:272","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:275","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:281","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:284","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:289","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:296","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:299","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:307","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:311","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:325","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:328","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:342","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:357","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:363","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:401","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:412","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:415","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:428","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:435","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:439","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:441","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:456","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:457","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:\"\"\"","count":56,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:463","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:464","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:472","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:476","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:480","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:484","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:info = (s, g)","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:557","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:561","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:577","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:583","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:593","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:602","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:605","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:618","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:625","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:regions = CollectionWrapper(engine.Network.getRegions(self), makeRegion)","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:628","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:def addRegion(self, name, nodeType, nodeParams):","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:635","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:from nupic.analysis import inspect","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:753","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:759","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:763","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:768","count":28,"result_id":2060},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:771","count":28,"result_id":2060},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:178","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:187","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:189","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:191","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:194","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:197","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:208","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:223","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:235","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:247","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:250","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:256","count":37,"result_id":2051},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:258","count":37,"result_id":2051},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:2372","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:117","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:119","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:126","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:137","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:138","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:151","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:timeoutSec:           How many seconds from time of initial call to stop","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:Default: any Exception-based exception will trigger","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:current exception meets the retryExceptions criteria:","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:takes the current exception instance, args, and kwargs","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:248","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:259","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:116","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:118","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:122","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:127","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:129","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:130","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/pymysqlhelpers.py:trailing-whitespace:136","count":39,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:179","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:188","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:190","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:192","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:195","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:198","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:209","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:224","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:236","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:249","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:251","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:257","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/decorators.py:trailing-whitespace:260","count":2,"result_id":2049},{"warning":"14:src\/nupic\/support\/configuration_custom.py:trailing-whitespace:88","count":40,"result_id":2048},{"warning":"14:src\/nupic\/support\/configuration_custom.py:trailing-whitespace:90","count":40,"result_id":2048},{"warning":"14:src\/nupic\/support\/configuration_custom.py:trailing-whitespace:94","count":40,"result_id":2048},{"warning":"14:src\/nupic\/support\/configuration_custom.py:trailing-whitespace:106","count":40,"result_id":2048},{"warning":"14:src\/nupic\/support\/configuration_custom.py:trailing-whitespace:130","count":40,"result_id":2048},{"warning":"14:src\/nupic\/support\/configuration_custom.py:trailing-whitespace:275","count":40,"result_id":2048},{"warning":"14:src\/nupic\/algorithms\/KNNClassifier.py:trailing-whitespace:# Added when svd is not able to decompose vectors - uses raw spare vectors","count":47,"result_id":2041},{"warning":"14:src\/nupic\/regions\/TestNode.py:reimported:from pprint import pprint as pp","count":48,"result_id":2040},{"warning":"14:src\/nupic\/regions\/TestNode.py:unused-import:import capnp","count":13,"result_id":2040},{"warning":"14:src\/nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:393","count":49,"result_id":2039},{"warning":"14:src\/nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:469","count":49,"result_id":2039},{"warning":"14:src\/nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:470","count":49,"result_id":2039},{"warning":"14:src\/nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:494","count":49,"result_id":2039},{"warning":"14:src\/nupic\/algorithms\/CLAClassifier.py:trailing-whitespace:541","count":49,"result_id":2039},{"warning":"14:src\/nupic\/research\/TP_shim.py:trailing-whitespace:96","count":50,"result_id":2038},{"warning":"14:src\/nupic\/research\/TP_shim.py:trailing-whitespace:102","count":50,"result_id":2038},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:444","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:493","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:514","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:515","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:522","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:530","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:534","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:550","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:560","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:564","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:567","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:637","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:649","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:653","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:655","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:663","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:666","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:674","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:678","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:685","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:688","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:694","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:701","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:702","count":51,"result_id":2037},{"warning":"14:src\/nupic\/support\/__init__.py:trailing-whitespace:705","count":51,"result_id":2037},{"warning":"14:src\/nupic\/research\/TP_shim.py:trailing-whitespace:97","count":53,"result_id":2035},{"warning":"14:src\/nupic\/research\/TP_shim.py:trailing-whitespace:103","count":53,"result_id":2035},{"warning":"14:src\/nupic\/research\/TP_shim.py:trailing-whitespace:98","count":3,"result_id":2035},{"warning":"14:src\/nupic\/research\/TP_shim.py:trailing-whitespace:104","count":3,"result_id":2035},{"warning":"14:src\/nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:348","count":64,"result_id":2024},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:581","count":36,"result_id":2024},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:597","count":36,"result_id":2024},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:610","count":36,"result_id":2024},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:623","count":36,"result_id":2024},{"warning":"14:src\/nupic\/research\/spatial_pooler.py:unused-variable:self._tieBreaker = 0.01*numpy.array([self._random.getReal64() for i in","count":60,"result_id":2023},{"warning":"14:src\/nupic\/regions\/PyRegion.py:unused-argument:def decorated(*args, **kw):","count":132,"result_id":2022},{"warning":"14:src\/nupic\/regions\/PyRegion.py:unused-argument:def getParameter(self, name, index):","count":66,"result_id":2022},{"warning":"14:src\/nupic\/regions\/PyRegion.py:unused-argument:def getParameterArrayCount(self, name, index):","count":66,"result_id":2022},{"warning":"14:src\/nupic\/regions\/PyRegion.py:unused-variable:v = getattr(self, name)","count":66,"result_id":2022},{"warning":"14:src\/nupic\/regions\/PyRegion.py:unused-argument:def getParameterArray(self, name, index, array):","count":66,"result_id":2022},{"warning":"14:src\/nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:353","count":22,"result_id":2002},{"warning":"14:src\/nupic\/regions\/SPRegion.py:trailing-whitespace:453","count":89,"result_id":1999},{"warning":"14:src\/nupic\/regions\/SPRegion.py:trailing-whitespace:457","count":89,"result_id":1999},{"warning":"14:src\/nupic\/regions\/SPRegion.py:trailing-whitespace:461","count":89,"result_id":1999},{"warning":"14:src\/nupic\/regions\/SPRegion.py:trailing-whitespace:465","count":89,"result_id":1999},{"warning":"14:src\/nupic\/regions\/SPRegion.py:trailing-whitespace:589","count":89,"result_id":1999},{"warning":"14:src\/nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:404","count":4,"result_id":1998},{"warning":"14:src\/nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:414","count":7,"result_id":1991},{"warning":"14:src\/nupic\/algorithms\/KNNClassifier.py:unused-variable:numCols = thresholdedInput.size \/ self.cellsPerCol","count":98,"result_id":1990},{"warning":"14:src\/nupic\/frameworks\/opf\/clamodel.py:trailing-whitespace:455","count":102,"result_id":1986},{"warning":"14:src\/nupic\/algorithms\/KNNClassifier.py:unused-variable:for j in xrange(self.k):","count":110,"result_id":1978},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:55","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:63","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:67","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:73","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:76","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:221","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:weightsSum = sum(params)","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:226","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:230","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:repeatedly to get each aggregated record.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:240","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:{","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:258","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:260","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:265","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:276","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:are: (fieldName, type, special). The type can be 'float', 'int',","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:'string', 'datetime' or 'bool'. And the special can be '',","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:'T' (for timestamp), 'S' (for sequenceId), or 'R' (for reset).","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:282","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:then the time field will be queried from the reader.","count":336,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:285","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:288","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:291","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:293","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:294","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:298","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:301","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:306","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:313","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:314","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:else:","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:if (aggDef['years'] == aggDef['months'] == aggDef['weeks'] ==","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:aggDef['days'] == aggDef['hours'] == aggDef['minutes'] ==","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:aggDef['seconds'] == aggDef['milliseconds'] ==","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:326","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:#  based on specified min or max values for each field.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:331","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:self._fields = None","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:351","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:356","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:#  fields list.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:383","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:385","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:395","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:398","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:401","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:409","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:410","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:412","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:439","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:and param.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:458","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:493","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:495","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:499","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:506","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:aggregationInfo was None or all aggregation params within it were 0.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:515","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:519","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:aggregated time period)","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:529","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:inputBookmark: a bookmark to the last position from the input that","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:contributed to this aggregated record.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:533","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:535","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:536","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:541","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:543","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:547","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:551","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:556","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:558","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:560","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:563","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:#  aggregated record we return.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:567","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:572","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:574","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:578","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:582","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:583","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:# ----------------------------------------------------------------------","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:586","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:596","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:599","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:606","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:609","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:610","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:618","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:623","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:627","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:630","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:631","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:# We end the aggregation chunk if we go past the end time","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:636","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:637","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:# -------------------------------------------------------------------","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:643","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:651","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:655","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:658","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:659","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:669","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:670","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:678","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:679","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:# If a slice just ended, re-compute the start and end time for the","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:#   till we get to the next end time boundary.","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:691","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:692","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:696","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:697","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:702","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:710","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:713","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:716","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:744","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:747","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:750","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:751","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:770","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:aggregator = Aggregator(aggregationInfo=aggregationInfo,","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:775","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:776","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:# If we were not given an output filename, create one based on the","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:793","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:# If some other process already started creating this file, simply","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:827","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:829","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:832","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:871","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:872","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:873","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:874","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:875","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:876","count":112,"result_id":1976},{"warning":"14:src\/nupic\/data\/aggregator.py:trailing-whitespace:877","count":112,"result_id":1976},{"warning":"14:src\/nupic\/research\/temporal_memory.py:superfluous-parens:if (abs(permanence) < EPSILON):","count":149,"result_id":1939},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:189","count":162,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:233","count":162,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:404","count":162,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:444","count":162,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:78","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:150","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:154","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:157","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:162","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:175","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:178","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:184","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:236","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:309","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:313","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:407","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:442","count":134,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:595","count":98,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:611","count":98,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:624","count":98,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:637","count":98,"result_id":1926},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:79","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:151","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:155","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:158","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:163","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:176","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:179","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:185","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:191","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:234","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:237","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:310","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:314","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:405","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:408","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:443","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:445","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:596","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:612","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:625","count":6,"result_id":1920},{"warning":"14:src\/nupic\/engine\/__init__.py:trailing-whitespace:638","count":6,"result_id":1920},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:2362","count":140,"result_id":1909},{"warning":"14:src\/nupic\/regions\/CLAClassifierRegion.py:trailing-whitespace:416","count":85,"result_id":1906},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:#  the exception args just in case this happens. For example, the","count":192,"result_id":1896},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:#","count":192,"result_id":1896},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:#  If it weren't for this possible Unicode translation error, we","count":192,"result_id":1896},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:#  could watch for only the exceptions we want, like this:","count":192,"result_id":1896},{"warning":"14:src\/nupic\/database\/ClientJobsDAO.py:trailing-whitespace:2363","count":13,"result_id":1896}],"11":[{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:ModelResult.inferences depends on the the specific inference type","count":4,"result_id":4219},{"warning":"11:nupic\/research\/spatial_pooler.py:line-too-long:@param connectedPct: A value between 0 or 1 specifying the percent of the input","count":22,"result_id":4186},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param prevPredictiveCells (set)         Indices of predictive cells in `t-1`","count":73,"result_id":2712},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:###################################################################################","count":118,"result_id":2708},{"warning":"11:nupic\/algorithms\/anomaly.py:line-too-long:def __init__(self, slidingWindowSize=None, mode=MODE_PURE, binaryAnomalyThreshold=None):","count":114,"result_id":2699},{"warning":"11:nupic\/algorithms\/anomaly.py:line-too-long:The transformation is applied after moving average is computed and updated.","count":114,"result_id":2699},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:if abs(self.predictedSegmentDecrement - other.predictedSegmentDecrement) > epsilon:","count":28,"result_id":2192},{"warning":"11:nupic\/algorithms\/CLAClassifier.py:line-too-long:bitHistory._stats.extend(itertools.repeat(0.0, statProto.index - statsLen))","count":150,"result_id":2125},{"warning":"11:nupic\/algorithms\/CLAClassifier.py:line-too-long:classifier._recordNumMinusLearnIteration = proto.recordNumMinusLearnIteration","count":150,"result_id":2125},{"warning":"11:nupic\/algorithms\/CLAClassifier.py:line-too-long:classifier._patternNZHistory.append((learnIteration, list(patternNZHistoryProto[i])))","count":150,"result_id":2125},{"warning":"11:nupic\/algorithms\/CLAClassifier.py:line-too-long:activeBitHistoryProtos = proto.init(\"activeBitHistory\", len(self._activeBitHistory))","count":150,"result_id":2125},{"warning":"11:nupic\/algorithms\/CLAClassifier.py:line-too-long:indexBitHistoryListProto = stepBitHistoryProto.init(\"bitHistories\", len(stepBitHistory))","count":150,"result_id":2125},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param prevPredictiveCells   (set)         Indices of predictive cells in `t-1`","count":100,"result_id":2117},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param prevActiveSegments    (set)         Indices of active segments in `t-1`","count":100,"result_id":2117},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param prevMatchingSegments  (set)         Indices of matching segments in `t-1`","count":100,"result_id":2117},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param prevMatchingCells     (set)         Indices of matching cells in `t-1`","count":100,"result_id":2117},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param learn                 (bool)        Whether or not learning is enabled","count":100,"result_id":2117},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:isPredictedInactiveCell = connections.cellForSegment(segment) in predictedInactiveCells","count":100,"result_id":2117},{"warning":"11:nupic\/research\/spatial_pooler.py:line-too-long:@param dutyCycles: An array containing one or more duty cycle values that need","count":286,"result_id":2091},{"warning":"11:nupic\/data\/generators\/distributions.py:line-too-long:nextVal = self.amplitude*np.sin(2*pi*(self.period)*self.valueNum*(pi\/180) - \\","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/distributions.py:line-too-long:description = dict(name='SineWave', period=self.period, amplitude=self.amplitude, \\","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:assert all(x in field for x in ['name', 'fieldSpec', 'encoderParams'] for field \\","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:self.addField(spec.pop('name'), spec.pop('fieldSpec'), spec.pop('encoderParams'))","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:fields:       An object of the class field that specifies the characteristics","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:toBeAdded:     Whether the encodings corresponding to the record are added to","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:encoding = np.concatenate([field.encoder.encode(SENTINEL_VALUE_FOR_MISSING_DATA)\\","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:if field.isPredictedField else field.encodings[n] for field in self.fields])","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:raise RuntimeError('At least one of dataType and encoderType must be specified')","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:self.encoderType, numRecords=self.numRecords, numEncodings=self.numEncodings)","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:self.encoder=adaptivescalar.AdaptiveScalarEncoder(name='AdaptiveScalarEncoder',\\","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:w=self.w, n=self.n, minval=self.minval, maxval=self.maxval, periodic=False, forced=True)","count":251,"result_id":2091},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:raise RuntimeError('Error in constructing class object. Either encoder type'","count":251,"result_id":2091},{"warning":"11:nupic\/regions\/TPRegion.py:line-too-long:'py' or 'cpp'. The 'cpp' implementation is optimized for speed in C++.\"\"\",","count":242,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:#FIXME @abstractmethod - this should be marked abstract method and required to be implemented","count":480,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti cannot be constructed from metricSpec string! \"","count":240,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:@param window - (opt) window size for moving average, or None when disabled","count":240,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti requires 'weights' parameter as a [list of floats]\")","count":240,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti requires 'metrics' parameter as a [list of Metrics]\")","count":240,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:subResults = [m.addInstance(groundTruth, prediction, record) for m in self.metrics]","count":240,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:print \"IN=\",groundTruth,\" pred=\",prediction,\": w=\",self.weights[i],\" metric=\",self.metrics[i],\" value=\",m,\" err=\",err","count":240,"result_id":2091},{"warning":"11:nupic\/encoders\/scalar.py:line-too-long:raise ValueError(\"Only one of n\/radius\/resolution can be specified for a ScalarEncoder\")","count":204,"result_id":2091},{"warning":"11:nupic\/encoders\/scalar.py:line-too-long:raise ValueError(\"Only one of radius\/resolution can be specified for a ScalarEncoder\")","count":204,"result_id":2091},{"warning":"11:nupic\/regions\/SPRegion.py:line-too-long:SpatialPooler instance for the enitire level and does *not* support the concept","count":189,"result_id":2091},{"warning":"11:nupic\/regions\/SPRegion.py:line-too-long:from SpatialPooler. Thus, there are only a few hardcoded arguments in __init__,","count":189,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:line-too-long:self.clamodel._getSPRegion().getSelf().getParameter('numActiveColumnsPerInhArea')","count":189,"result_id":2091},{"warning":"11:nupic\/encoders\/multi.py:line-too-long:and to parts seperately taken care of by the ScalarEncoder with the specified parameters.","count":159,"result_id":2091},{"warning":"11:nupic\/encoders\/multi.py:line-too-long:The three seperate encodings are then merged together to the final vector, in such a way that","count":159,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/model.py:line-too-long:pre-existing directory will only be accepted if it contains previously","count":145,"result_id":2091},{"warning":"11:nupic\/regions\/TPRegion.py:line-too-long:predictedState = self._tfdr.getPredictedState().reshape(-1).astype('float32')","count":131,"result_id":2091},{"warning":"11:nupic\/regions\/TPRegion.py:line-too-long:predictedActiveIndices = numpy.intersect1d(activeIndices, predictedIndices)","count":131,"result_id":2091},{"warning":"11:nupic\/engine\/__init__.py:line-too-long:(\"nupic.regions.KNNAnomalyClassifierRegion\", \"KNNAnomalyClassifierRegion\"),","count":129,"result_id":2091},{"warning":"11:nupic\/engine\/__init__.py:line-too-long:Adds the module and class name for the region to the list of classes the network can use","count":129,"result_id":2091},{"warning":"11:nupic\/engine\/__init__.py:line-too-long:engine.Network.registerPyRegion(regionClass.__module__, regionClass.__name__)","count":129,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param activationThreshold       (int)   If the number of active connected synapses on a segment is at least this threshold, the segment is said to be active.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param initialPermanence         (float) Initial permanence of a new synapse.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param connectedPermanence       (float) If the permanence value for a synapse is greater than this value, it is said to be connected.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param minThreshold              (int)   If the number of synapses active on a segment is at least this threshold, it is selected as the best matching cell in a bursting column.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param maxNewSynapseCount        (int)   The maximum number of synapses added to a segment during learning.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param permanenceIncrement       (float) Amount by which permanences of synapses are incremented during learning.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param permanenceDecrement       (float) Amount by which permanences of synapses are decremented during learning.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param predictedSegmentDecrement (float) Amount by which active permanences of synapses of previously predicted but inactive segments are decremented.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param seed                      (int)   Seed for the random number generator.","count":126,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param predictedInactiveCells       (set)         Indices of predicted inactive cells","count":126,"result_id":2091},{"warning":"11:nupic\/regions\/extra\/GaborNode2.py:line-too-long:# The following parameters are for advanced configuration and unsupported at this time","count":122,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:if abs(self.predictedSegmentDecrement - other.predictedSegmentDecrement) > EPSILON:","count":98,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:variable or a scalar variable.  Mainly used for determining the appropriate","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:A list of template file names; these files are assumed to be in","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:encoder = dict(type='ScalarSpaceEncoder', name=fieldName, fieldname=fieldName,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:'__consumption_encoder': PermuteEncoder('consumption', 'AdaptiveScalarEncoder',","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:raise _ExpGeneratorException(\"Illegal character %s in field %r\"  %(c, encoderDict['name']))","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:# If the \"uber\" metric 'MultiStep' was specified, then plug in TemporalMultiStep","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:raise _InvalidCommandArgException(\"Invalid environment type %s\"% environment)","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateV1.tpl'],permutationsPyPath,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateEnsemble.tpl'],permutationsPyPath,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateV2.tpl'],permutationsPyPath,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:for ptrn in options['loggedMetrics']]))","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:metricSpec, metricLabel =_generateMetricSpecString(field=predictedFieldName,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:inferenceElement=InferenceElement.prediction,","count":225,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":trivialErrorMetric,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                            inferenceElement=InferenceElement.encodings,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                                          \"errorMetric\":oneGramErrorMetric,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                                          'predictionField':predictedFieldName,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateMetricSpecString(inferenceElement=InferenceElement.classification,","count":300,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":trivialErrorMetric})","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":oneGramErrorMetric})","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:inferenceElement=InferenceElement.classification,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:parser.set_usage(\"%prog [options] --description='{json object with args}'\\n\" + \\","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:too-many-locals:def _generateExperiment(options, outputDirPath, hsVersion,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:too-many-statements:def _generateExperiment(options, outputDirPath, hsVersion,","count":75,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:return \"\"\"# ----------------------------------------------------------------------","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:This is the first portion of every sub-experiment params file we generate. Between","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:This is the tail of every params file we generate. Between the head and the tail","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:retval:         list of keys from allReportKeys that match the regular expressions","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:optimizeKey:         Which report item, if any, we will be optimizing for. This can","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:also be a regular expression, but is an error if it matches","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:# Extract the report items that match the regular expressions passed in reportKeys","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:optimizeKey, jobsDAO, modelCheckpointGUID, logLevel=None, predictionCacheMaxRecords=None):","count":71,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:predictionCacheMaxRecords=predictionCacheMaxRecords)","count":71,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param predictedActiveColumns          (set)         Indices of predicted => active columns in `t`","count":49,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/experimentutils.py:line-too-long:TEMPORAL. That is, a temporal model CAN have non-temporal inference elements,","count":39,"result_id":2091},{"warning":"11:nupic\/swarming\/hypersearch\/experimentutils.py:line-too-long:#              which corresponds to the type of prediction being made. Each value","count":39,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/opfutils.py:line-too-long:\"metrics\", \"predictedFieldIdx\", \"predictedFieldName\", \"classifierInput\")","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer, result):","count":48,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:self.accumulatedError, self.history, result)","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:computes negative log-likelihood. Likelihood is the predicted probability of","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:the true data from a model. It is more powerful than metrics that only considers","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:the single best prediction (e.g. MSE) as it considers the entire probability","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:# a manually set minimum prediction probability so that the log(LL) doesn't blow up","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer, result = None):","count":144,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:aggErr = subErrorMetric.addInstance(groundTruth, stepPrediction, record, result)","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:if self._predictedFieldName is not None and self._classifierInputEncoder is not None:","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:bucketIdx = self._classifierInputEncoder.getBucketIndices(absoluteValue)[0]","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:bucketLikelihood[self._classifierInputEncoder.getBucketIndices(k)[0]] = (","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:likelihoodsDict[k])","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:bucketLikelihoodOffset[self._classifierInputEncoder.getBucketIndices(k)[0]] = (","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:offsetDict[k])","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepBucketLikelihoods][steps] = bucketLikelihoodOffset","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepPredictions][steps] = likelihoodsDict","count":24,"result_id":2091},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepBucketLikelihoods][steps] = bucketLikelihood","count":24,"result_id":2091},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:isPredictedInactiveCell = connections.cellForSegment(segment) in predictedInactiveCells","count":13,"result_id":2091},{"warning":"11:src\/swarming\/ModelTerminator.py:line-too-long:bestMetric = self._cjDB.jobGetFields(self._jobID,['results'])[0]['bestMetric']","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelTerminator.py:line-too-long:self.logger.info(\"Model %d underperforming (metric:%f, best:%f). Canceling...\"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/modelchooser.py:line-too-long:self._MIN_UPDATE_INTERVAL)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/modelchooser.py:line-too-long:\" updateTime=%f\"%(self._jobID, self._lastUpdateAttemptTime))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/modelchooser.py:line-too-long:self.logger.info(\"Succesfully updated selection sweep timestamp jobid=%d updateTime=%f\"\\","count":2,"result_id":2089},{"warning":"11:src\/swarming\/modelchooser.py:line-too-long:candidateIDs, bestMetric = self._cjDB.modelsGetCandidates(self._jobID, minUpdateRecords)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:before it conducts its finalization operations.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:is the best model, and writing out checkpoints.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:serialized as strings, which return the metric","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:produced. It is required to create certain","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:endIdx: delay'. When present, if we are running","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:Maximum number of records for the prediction output cache.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:reportKeyPatterns=reportKeyPatterns,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:optimizeKeyPattern=optimizeKeyPattern,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:modelCheckpointGUID=modelCheckpointGUID,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:self._sysExitModelRange = [int(x) for x in self._sysExitModelRange.split(',')]","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:specified as lists, read the appropriate value for this model using the model","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:'sleepModelRange' doesn't use the modelIndex property for a model, but rather","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:\"\"\" Protected function that can be overridden by subclasses. Its main purpose","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:# =========================================================================","count":12,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:self._busyWaitTime = random.uniform((1.0-self.randomizeWait) * self._busyWaitTime,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:(1.0+self.randomizeWait) * self._busyWaitTime)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/DummyModelRunner.py:line-too-long:modelNums = [json.loads(e[1][0])['structuredParams']['__model_num'] for e in results]","count":2,"result_id":2089},{"warning":"11:src\/swarming\/regression.py:line-too-long:\"\"\" Helper class to compute the slope of a best-fit line given a set of (x,y)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/regression.py:line-too-long:points. This is an object that keeps track of some extra state in order to compute","count":2,"result_id":2089},{"warning":"11:src\/swarming\/regression.py:line-too-long:a function of the form  y(x) = a e^(bx) to the data. The function getPctChange()","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:line-too-long:@param swarmConfig {dict} A complete [swarm description](https:\/\/github.com\/numenta\/nupic\/wiki\/Running-Swarms#the-swarm-description) object.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:line-too-long:[swarm description](https:\/\/github.com\/numenta\/nupic\/wiki\/Running-Swarms#the-swarm-description).","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:line-too-long:_emit(Verbosity.DEBUG, \"_NupicJob: \\n%s\" % pprint.pformat(jobInfo, indent=4))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:line-too-long:workers:  If this job was launched outside of the nupic job engine, then this","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:line-too-long:workers:  If this job was launched outside of the Nupic job engine, then this","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:line-too-long:assert jobInfo.jobId == nupicJobID, \"%s != %s\" % (jobInfo.jobId, nupicJobID)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:too-many-nested-blocks:while not hyperSearchFinished:","count":2,"result_id":2089},{"warning":"11:src\/swarming\/permutations_runner.py:too-many-locals:def generateReport(cls,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:#self.logger.debug(\"Value of nupic.hypersearch.modelOrphanIntervalSecs: %s\" \\","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:options.jobID = cjDAO.jobInsert(client='hwTest', cmdLine=\"echo 'test mode'\",","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:# updateCounters with what we have cached, fetches the results for the","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:# --------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:jsonModelParams, modelParamsHash, particleHash)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:# Some other worker is already running it, tell the Hypersearch object","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:\"paramsHash=%s, particleHash=%s, particleId='%s'\", modelID,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:attempt)).digest()","count":4,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:particleHash = hashlib.md5(\"OrphanParticle.%d.%d\" % (modelIDToRun,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:raise RuntimeError(\"Unexpected failure to change paramsHash and \"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:# jobParams['persistentJobGUID'] contains the client's (e.g., API Server)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:modelParams=modelParams, modelParamsHash=modelParamsHash,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:jobsDAO=cjDAO, modelCheckpointGUID=modelCheckpointGUID)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:line-too-long:print >>sys.stderr, \"reporter:status:Finished, evaluated %d models\" % (numModelsTotal)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchWorker.py:too-many-nested-blocks:try:","count":6,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/experimentutils.py:line-too-long:TEMPORAL. That is, a temporal model CAN have non-temporal inference elements,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/experimentutils.py:line-too-long:#              which corresponds to the type of prediction being made. Each value","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:# The maximum rate of change in the model's metric for it to be considered 'mature'","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:Maximum number of records for the prediction output cache.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._MIN_RECORDS_TO_BE_BEST = int(Configuration.get('nupic.hypersearch.bestModelMinRecords'))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._MATURITY_MAX_CHANGE = float(Configuration.get('nupic.hypersearch.maturityPctChange'))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._MATURITY_NUM_POINTS = int(Configuration.get('nupic.hypersearch.maturityNumPoints'))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._isMaturityEnabled = bool(int(Configuration.get('nupic.hypersearch.enableModelMaturity')))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:# List of tuples, (iteration, metric), used to see if the model has 'matured'","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._metricRegression = regression.AveragePctChange(windowSize=self._MATURITY_NUM_POINTS)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:iterationCountInferOnly = self._modelControl.get('iterationCountInferOnly', 0)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:assert numIters > iterationCountInferOnly, \"when iterationCountInferOnly \" \\","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:maxRows=int(Configuration.get('nupic.model.checkpoint.maxPredictionRows')))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._model.save(os.path.join(self._experimentDir, str(self._modelCheckpointGUID)))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:{'modelCheckpointId':str(self._modelCheckpointGUID)},","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:shutil.rmtree(os.path.join(self._experimentDir, str(self._modelCheckpointGUID)))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:newValue=json.dumps(jobResults))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:Writes the contents of this model's in-memory prediction cache to a permanent","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:cb=self.__updateJobResultsPeriodic)","count":4,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._logger.info(\"Model %s canceled because it was killed by hypersearch\",","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:self._logger.info(\"Model %s stopped because hypersearch ended\", self._modelID)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/ModelRunner.py:line-too-long:raise RuntimeError (\"Unexpected stop reason encountered: %s\" % (stopReason))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:return \"\"\"# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:This is the first portion of every sub-experiment params file we generate. Between","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:This is the tail of every params file we generate. Between the head and the tail","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:retval:         list of keys from allReportKeys that match the regular expressions","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:optimizeKey:         Which report item, if any, we will be optimizing for. This can","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:also be a regular expression, but is an error if it matches","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:# Extract the report items that match the regular expressions passed in reportKeys","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:optimizeKey, jobsDAO, modelCheckpointGUID, logLevel=None, predictionCacheMaxRecords=None):","count":2,"result_id":2089},{"warning":"11:src\/swarming\/hypersearch\/utils.py:line-too-long:predictionCacheMaxRecords=predictionCacheMaxRecords)","count":2,"result_id":2089},{"warning":"11:src\/research\/TP_shim.py:line-too-long:@param bottomUpInput     The bottom-up input, typically from a spatial pooler","count":4,"result_id":2089},{"warning":"11:src\/research\/TP_shim.py:line-too-long:@param computeInfOutput  If None, default behavior is to disable the inference","count":4,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:Generate a list of random sparse distributed vectors.  This is used to generate","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:training vectors to the spatial or temporal learner and to compare the predicted","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:one step look back idea. The second set of sequences are generated by modifying","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:seqList1, seqList2: a list of sequences. Each sequence is itself a list","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:containing the input pattern indices for that sequence.","count":4,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:generateHubSequences(nCoinc=nPatterns, hubs=hubs, seqLength=seqLength,","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:seqList: a list of sequences output from L2. Each sequence is","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:itself a list containing the input pattern indices for that","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:for param in [\"numberOfCols\", \"cellsPerColumn\", \"initialPerm\", \"connectedPerm\",","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:\"minThreshold\", \"newSynapseCount\", \"permanenceInc\", \"permanenceDec\",","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print 'Active states diverge', numpy.where(tp1.activeState['t'] != tp2.activeState['t'])","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print 'Predicted states diverge', numpy.where(tp1.predictedState['t'] != tp2.predictedState['t'])","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print \"Number of segments are different\", tp1.getNumSegments(), tp2.getNumSegments()","count":4,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print \"Number of synapses are different\", tp1.getNumSynapses(), tp2.getNumSynapses()","count":4,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:# Loop through all segments in tp2seg and see if any of them match tp1seg","count":4,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:# Compare states at t first, they usually diverge before the structure of the","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print 'Active states diverged', numpy.where(tp1.infActiveState['t'] != tp2.infActiveState['t'])","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print 'Predicted states diverged', numpy.where(tp1.infPredictedState['t'] != tp2.infPredictedState['t'])","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print 'lrnActiveState[t] diverged', numpy.where(tp1.lrnActiveState['t'] != tp2.lrnActiveState['t'])","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:if checkLearn and (tp1.lrnPredictedState['t'] - tp2.lrnPredictedState['t']).any():","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print 'lrnPredictedState[t] diverged', numpy.where(tp1.lrnPredictedState['t'] != tp2.lrnPredictedState['t'])","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:if checkLearn and abs(tp1.getAvgLearnedSeqLength() - tp2.getAvgLearnedSeqLength()) > 0.01:","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:static variables between the two poolers to make sure that they are equivalent.","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print \"Duty cycles after inhibition are different between spatial poolers\"","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print \"Duty cycles before inhibition are different between spatial poolers\"","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:For example, if values contained the following: [1,1,3,5,1,3,5], and the initial","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:and each output is plotted on a different line, allowing you to see the overlap","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:pooling outputs. The buVector (sequence) outputs will be drawn","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:distinguish where the cell is outputting due to pooling vs.","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:innerSat: list of the saturation level of each non-empty region","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:# We will use regions that are 15x15, which give us about a 1\/225 (.4%) resolution","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:totalActiveInPrediction:  The total number of active elements in the prediction","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:foundInInput = len(activeElementsInPrediction.intersection(activeElementsInInput))","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:missingFromInput = len(activeElementsInPrediction.difference(activeElementsInInput))","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:missingFromPrediction = len(activeElementsInInput.difference(activeElementsInPrediction))","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:print \"preds. found in input:\", foundInInput, \"out of\", totalActiveInPrediction,","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:Computes the predictive ability of a temporal pooler (TP). This routine returns","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:The 'outputs' are the pooling outputs of the TP. This routine treats each output","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:*both* the spacing of the center-points within the block and the","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:>>> makeCloneMap(columnsShape=(7, 8), outputCloningWidth=3, outputCloningHeight=4)","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:line-too-long:array:    The numpy array to print. This can be either a 1D vector or 2D matrix","count":2,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:too-many-nested-blocks:if result == True and not relaxSegmentTests:","count":4,"result_id":2089},{"warning":"11:src\/research\/fdrutilities.py:too-many-nested-blocks:if result == True and not relaxSegmentTests and checkLearn:","count":4,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:variable or a scalar variable.  Mainly used for determining the appropriate","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:A list of template file names; these files are assumed to be in","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:encoder = dict(type='ScalarSpaceEncoder', name=fieldName, fieldname=fieldName,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:'__consumption_encoder': PermuteEncoder('consumption', 'AdaptiveScalarEncoder',","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:raise _ExpGeneratorException(\"Illegal character %s in field %r\"  %(c, encoderDict['name']))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:# If the \"uber\" metric 'MultiStep' was specified, then plug in TemporalMultiStep","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:raise _InvalidCommandArgException(\"Invalid environment type %s\"% environment)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateV1.tpl'],permutationsPyPath,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateEnsemble.tpl'],permutationsPyPath,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateV2.tpl'],permutationsPyPath,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:for ptrn in options['loggedMetrics']]))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:metricSpec, metricLabel =_generateMetricSpecString(field=predictedFieldName,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:inferenceElement=InferenceElement.prediction,","count":6,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":trivialErrorMetric,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                            inferenceElement=InferenceElement.encodings,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                                          \"errorMetric\":oneGramErrorMetric,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                                          'predictionField':predictedFieldName,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateMetricSpecString(inferenceElement=InferenceElement.classification,","count":8,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":trivialErrorMetric})","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":oneGramErrorMetric})","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:inferenceElement=InferenceElement.classification,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:parser.set_usage(\"%prog [options] --description='{json object with args}'\\n\" + \\","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:too-many-locals:def _generateExperiment(options, outputDirPath, hsVersion,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/exp_generator\/ExpGenerator.py:too-many-statements:def _generateExperiment(options, outputDirPath, hsVersion,","count":2,"result_id":2089},{"warning":"11:src\/research\/fast_temporal_memory.py:line-too-long:@param activeColumns                   (set)         Indices of active columns in `t`","count":2,"result_id":2089},{"warning":"11:src\/research\/fast_temporal_memory.py:line-too-long:@param predictedColumns                (set)         Indices of predicted columns in `t`","count":2,"result_id":2089},{"warning":"11:src\/research\/fast_temporal_memory.py:line-too-long:@param prevActiveCells                 (set)         Indices of active cells in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/fast_temporal_memory.py:line-too-long:@param prevWinnerCells                 (set)         Indices of winner cells in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param activationThreshold       (int)   If the number of active connected synapses on a segment is at least this threshold, the segment is said to be active.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param initialPermanence         (float) Initial permanence of a new synapse.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param connectedPermanence       (float) If the permanence value for a synapse is greater than this value, it is said to be connected.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param minThreshold              (int)   If the number of synapses active on a segment is at least this threshold, it is selected as the best matching cell in a bursting column.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param maxNewSynapseCount        (int)   The maximum number of synapses added to a segment during learning.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param permanenceIncrement       (float) Amount by which permanences of synapses are incremented during learning.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param permanenceDecrement       (float) Amount by which permanences of synapses are decremented during learning.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param predictedSegmentDecrement (float) Amount by which active permanences of synapses of previously predicted but inactive segments are decremented.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param seed                      (int)   Seed for the random number generator.","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param activeColumns                   (set)         Indices of active columns in `t`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param predictedActiveColumns          (set)         Indices of predicted => active columns in `t`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param prevActiveCells                 (set)         Indices of active cells in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param prevWinnerCells                 (set)         Indices of winner cells in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param prevActiveSegments           (set)         Indices of active segments in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param learningSegments             (set)         Indices of learning segments in `t`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param prevActiveCells              (set)         Indices of active cells in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param winnerCells                  (set)         Indices of winner cells in `t`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param prevWinnerCells              (set)         Indices of winner cells in `t-1`","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:@param predictedInactiveCells       (set)         Indices of predicted inactive cells","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:isPredictedInactiveCell = connections.cellForSegment(segment) in predictedInactiveCells","count":2,"result_id":2089},{"warning":"11:src\/research\/temporal_memory.py:line-too-long:if abs(self.predictedSegmentDecrement - other.predictedSegmentDecrement) > EPSILON:","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:modelParams:    params dict for this model, or None if this is just an update","count":4,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:you want to move it to the next position, or just jiggle it a bit, call","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:newFromClone: If not None, clone this other particle's position and generation","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:otherPositions.append(particleState['varStates'][varName]['position'])","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:(bestModelId, _) = self._resultsDB.bestModelIdAndErrScore(self.swarmId, genIdx)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:(particleState, _, _, _, _) = self._resultsDB.getParticleInfo(bestModelId)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:swarms = {'a': {'status': 'completed',        # 'active','completing','completed',","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:#  be obtained from the swarms entry that follows, but is summarized here","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:(modelId, errScore) = self._hsObj._resultsDB.bestModelIdAndErrScore(swarmId)","count":4,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:has finally completed, we can now tell which fields should *really* be present","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# if there are more than two completed encoders sets that are complete and","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# are worse than at least one active swarm in the previous sprint. Remove","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# any combinations that have any pair of them since they cannot have the best encoder.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:if pctFieldContributions[fieldname] < self._hsObj._minFieldContribution:","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# Else, we only build up by adding 1 new encoder to the best combination(s)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# If a speculative sprint, only add the first encoder, if not add","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:implementation that can be used by the HypersearchWorker. Other implementations","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:to  build up by evauating combinations of 3 fields (the second \"sprint\"), where","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:useTerminators      OPTIONAL - True of False (default config.xml). When set","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:the maxModels variable within the permutations","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:nupic.hypersearch.speculative.particles.default","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:self._predictionCacheMaxRecords = self._searchParams.get('predictionCacheMaxRecords', None)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:Configuration.set('nupic.hypersearch.enableModelTermination', useTerminators)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:Configuration.set('nupic.hypersearch.enableSwarmTermination', useTerminators)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:raise RuntimeError (\"Either 'description' or 'permutationsScript' must be\"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:newValue = self._baseDescription)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:'nupic.hypersearch.maxUniqueModelAttempts'))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:'nupic.hypersearch.modelOrphanIntervalSecs'))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:aggregationPeriod[key] = modelDescription['streamDef']['aggregation'][key]","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:for (fieldName, func) in modelDescription['streamDef']['aggregation']['fields']:","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:raise RuntimeError(\"Permutations file '%s' does not define permutations\" % filename)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:raise RuntimeError(\"Permutations file '%s' defines a permutations variable \"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:completionReason = ClientJobsDAO.CMPL_REASON_ORPHAN,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:newValue = json.dumps(results))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# best (and has  matured) will notice that and stop itself at that point.","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:\" \\n%s\" % (pprint.pformat(self._hsState._state, indent=4)))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:At any one time, there is an active set of swarms in the current sprint, where","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:1.) The particle will be created from new (generation #0) if there are not","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:self.logger.info(\"Waiting for all particles in sprint %d to complete\"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# Look for swarms that have particle \"holes\" in their generations. That is,","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:#  model (since particleID hash is a unique key in the models table).","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:self.logger.debug(\"Particle after incorporating encoder vars from best \"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:newValue=json.dumps(jobResults))","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:pctFieldContributions)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:models: list of tuples, one for each model. Each tuple contains:","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# If we don't already have a particle to work on, get a candidate swarm and","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# Send an update status periodically to the JobTracker so that it doesn't","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:print >> sys.stderr, \"reporter:status:In hypersearchV2: speculativeWait\"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:self.logger.debug(\"Agitating particle to get unique position after %d \"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:# exhausted the parameter space for this swarm. The question is, how many","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:if valid and self._resultsDB.getModelIDFromParamsHash(paramsHash) is None:","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:self.logger.debug(\"Submitting new potential model to HypersearchWorker: \\n%s\"","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:line-too-long:modelID, completed, completionReason, numRecords, errScore)","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:too-many-nested-blocks:for i in range(1, numExistingSprints):","count":2,"result_id":2089},{"warning":"11:src\/swarming\/HypersearchV2.py:too-many-nested-blocks:while True:","count":4,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:activationThreshold = 12, # 3\/4 of newSynapseCount TODO make fraction","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:burnIn = 2,             # Used for evaluating the prediction score","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:collectStats = False,    # If true, collect training and inference stats","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:#---------------------------------------------------------------------------------","count":8,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:\"\"\"If state is allocated in CPP, copy over the data into our numpy arrays.\"\"\"","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.lrnActiveState['t-1'] = activeT1.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.lrnActiveState['t'] = activeT.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.lrnPredictedState['t-1'] = predT1.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.lrnPredictedState['t'] = predT.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:(activeT, activeT1, predT, predT1, colConfidenceT, colConfidenceT1, confidenceT,","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.confidence['t-1'] = confidenceT1.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.confidence['t'] = confidenceT.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.infActiveState['t-1'] = activeT1.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.infActiveState['t'] = activeT.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.infPredictedState['t-1'] = predT1.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:self.infPredictedState['t'] = predT.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:return self.cells4.trimSegments(minPermanence=minPermanence, minNumSyns=minNumSyns)","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:################################################################################","count":8,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:prevAct < self.activationThreshold and currAct >= self.activationThreshold:","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:prevAct >= self.activationThreshold and currAct < self.activationThreshold:","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:prevAct >= self.activationThreshold and currAct >= self.activationThreshold:","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:line-too-long:distPermValues,   # a dict where d[p] = number of synapses with perm = p\/10","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/research\/TP10X2.py:too-many-nested-blocks:for c in xrange(self.numberOfCols):","count":2,"result_id":2089},{"warning":"11:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:line-too-long:synapseStringList = [\"{0:3}={1:.2f}\".format(sourceCell, permanence) for","count":2,"result_id":2089},{"warning":"11:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:line-too-long:self._mmTraces[\"predictedInactiveCells\"].data.append(predictedInactiveCells)","count":2,"result_id":2089},{"warning":"11:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:line-too-long:self._mmTraces[\"predictedActiveColumns\"].data.append(predictedActiveColumns)","count":2,"result_id":2089},{"warning":"11:src\/research\/spatial_pooler.py:line-too-long:must match the number of inputs, and must be greater than _stimulusThreshold \"\"\"","count":4,"result_id":2089},{"warning":"11:src\/research\/spatial_pooler.py:line-too-long:@param dutyCycles: An array containing one or more duty cycle values that need","count":2,"result_id":2089},{"warning":"11:src\/research\/spatial_pooler.py:line-too-long:@param columnIndex: The index identifying a column in the permanence, potential","count":6,"result_id":2089},{"warning":"11:src\/research\/spatial_pooler.py:line-too-long:@param dimensions: An array containing a dimensions for the column space. A 2x3","count":6,"result_id":2089},{"warning":"11:src\/data\/stats.py:line-too-long:raise RuntimeError(\"NumberStatsCollector -- value '%s' is not a valid type\" % value)","count":2,"result_id":2089},{"warning":"11:src\/data\/stats.py:line-too-long:def generateStats(filename, statsInfo, maxSamples = None, filters=[], cache=True):","count":2,"result_id":2089},{"warning":"11:src\/data\/stats.py:line-too-long:print \"Generating statistics for file '%s' with filters '%s'\" % (filename, filters)","count":2,"result_id":2089},{"warning":"11:src\/data\/stats.py:line-too-long:raise RuntimeError(\"Unknown stats type '%s' for field '%s'\" % (statsInfo[field], field))","count":2,"result_id":2089},{"warning":"11:src\/data\/dictutils.py:line-too-long:if k in original and isinstance(original[k], dict) and isinstance(v, dict):","count":2,"result_id":2089},{"warning":"11:src\/algorithms\/KNNClassifier.py:too-many-boolean-expressions:if isSparse > 0 and (self._vt is not None or self.distThreshold > 0 \\","count":2,"result_id":2089},{"warning":"11:src\/data\/utils.py:line-too-long:\"\"\"Parses a string containing only 0's and 1's and return a Python list object.","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param pamLength Number of time steps to remain in \"Pay Attention Mode\" after","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param maxSeqLength If not 0, we will never learn more than maxSeqLength inputs","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param maxSegmentsPerCell The maximum number of segments allowed on a cell. This","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param maxSynapsesPerSegment The maximum number of synapses allowed in a segment.","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@retval prevSequenceSignature signature for the sequence immediately preceding","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param predictedState   The columns we predicted on the last time step (should","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param colConfidence    Column confidences we determined on the last time step","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@todo implement this, it is used by the node's getParameter() call, it should return the max # of synapses seen in any one segment.","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:state. predictedCells[c][i] represents the state of the i'th cell in the c'th","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@returns      all the future predictions - a numpy array of type \"float32\" and","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:based on the possibly updated @ref infActiveState['t'], so there is no need to","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param useStartCells  If true, ignore previous predictions and simply turn on","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param bottomUpInput     The bottom-up input, typically from a spatial pooler","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param computeInfOutput  If None, default behavior is to disable the inference","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@returns best estimate of the TP input that would have generated bottomUpOut.","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@param minNumSyns    Any segment with less than minNumSyns synapses remaining","count":4,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:TP's current self.colConfidence. This can be specified if you","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:are trying to check the prediction metrics for an output","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:are on in the current output but not in the or of all the","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:permanence value of synapses is allowed to be below connectedPerm. The number","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:above minThreshold. The routine returns the segment index. If no segments are","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@retval nActiveSegs      total no. of active segments (0 if collectActiveData","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@retval distSegSizes     a dict where d[n] = number of segments with n synapses","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:line-too-long:@retval distPermValues   a dict where d[p] = number of synapses with perm = p\/10","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/research\/TP.py:too-many-nested-blocks:if enableLearn:","count":4,"result_id":2089},{"warning":"11:src\/research\/TP.py:too-many-nested-blocks:for c in xrange(self.numberOfCols):","count":4,"result_id":2089},{"warning":"11:src\/data\/inference_shifter.py:line-too-long:predictedFieldName=modelResult.predictedFieldName)","count":2,"result_id":2089},{"warning":"11:src\/data\/joiner.py:line-too-long:includes relevant weather records for your data. It is subject to the following","count":2,"result_id":2089},{"warning":"11:src\/data\/joiner.py:line-too-long:Each record in the original file must have an address field of type string. This","count":2,"result_id":2089},{"warning":"11:src\/data\/joiner.py:line-too-long:We will return statistics on how many records were missing from those requested.","count":2,"result_id":2089},{"warning":"11:src\/data\/joiner.py:line-too-long:# Check each of the input files and make sure they have address and timestamp","count":2,"result_id":2089},{"warning":"11:src\/data\/joiner.py:line-too-long:raise Exception('Data files must contain headers \"address\" and \"timestamp\"')","count":2,"result_id":2089},{"warning":"11:src\/data\/joiner.py:line-too-long:percentMissing = float(missingRecords) \/ goodRecords # Oh python *shakeshead*","count":2,"result_id":2089},{"warning":"11:src\/data\/filters.py:line-too-long:time of the first record (t0) and signal a reset at the first record on or after","count":2,"result_id":2089},{"warning":"11:src\/data\/filters.py:line-too-long:raise RuntimeError(\"Autoreset requested for the data but there is no date field\")","count":2,"result_id":2089},{"warning":"11:src\/data\/aggregator.py:line-too-long:NOTE: years and months are mutually-exclusive with the other units.  See","count":2,"result_id":2089},{"warning":"11:src\/data\/aggregator.py:line-too-long:If none of the period fields are specified or if all that are specified","count":2,"result_id":2089},{"warning":"11:src\/data\/aggregator.py:line-too-long:2. The aggregation function for all will be to pick the first: lambda x: x[0]","count":2,"result_id":2089},{"warning":"11:src\/data\/aggregator.py:line-too-long:\"\"\"Add the aggregation period to the input time t and return a datetime object","count":2,"result_id":2089},{"warning":"11:src\/data\/aggregator.py:line-too-long:outputFilename = os.path.join(os.path.dirname(inputFullPath), outputFilename)","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:[(cur - prev) for prev, cur in itertools.izip(list(self.valueSet)[:-1],","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:list(self.valueSet)[1:])]","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:# We include subencoders for datetime field if there is a variation in encodings","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:# through the maximal sub-encoder and checking for variation in post-encoding","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:dayOfWeek=(1,1), # width=7, resolution=1day","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:timeOfDay=(1,1.0\/60), # width=1440, resolution=1min","count":2,"result_id":2089},{"warning":"11:src\/data\/stats_v2.py:line-too-long:field names and the corresponding values are the statistics","count":2,"result_id":2089},{"warning":"11:src\/data\/file_record_stream.py:too-many-nested-blocks:if self._stats == None:","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/distributions.py:line-too-long:nextVal = self.amplitude*np.sin(2*pi*(self.period)*self.valueNum*(pi\/180) - \\","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/distributions.py:line-too-long:description = dict(name='SineWave', period=self.period, amplitude=self.amplitude, \\","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:assert all(x in field for x in ['name', 'fieldSpec', 'encoderParams'] for field \\","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:self.addField(spec.pop('name'), spec.pop('fieldSpec'), spec.pop('encoderParams'))","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:fields:       An object of the class field that specifies the characteristics","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:toBeAdded:     Whether the encodings corresponding to the record are added to","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:encoding = np.concatenate([field.encoder.encode(SENTINEL_VALUE_FOR_MISSING_DATA)\\","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:if field.isPredictedField else field.encodings[n] for field in self.fields])","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:raise RuntimeError('At least one of dataType and encoderType must be specified')","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:self.encoderType, numRecords=self.numRecords, numEncodings=self.numEncodings)","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:self.encoder=adaptivescalar.AdaptiveScalarEncoder(name='AdaptiveScalarEncoder',\\","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:w=self.w, n=self.n, minval=self.minval, maxval=self.maxval, periodic=False, forced=True)","count":2,"result_id":2089},{"warning":"11:src\/data\/generators\/data_generator.py:line-too-long:raise RuntimeError('Error in constructing class object. Either encoder type'","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:basicTypes = ['Byte', 'Int16', 'UInt16', 'Int32', 'UInt32', 'Int64', 'UInt64', 'Real32', 'Real64', 'Handle']","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:(\"nupic.regions.KNNAnomalyClassifierRegion\", \"KNNAnomalyClassifierRegion\"),","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:Supported types are: Byte, Int16, UInt16, Int32, UInt32, Int64, UInt64, Real32, Real64","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:and translates the integer values to meaningful strings: that correspond to the C++ enum labels.","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:#  raise exceptions.Exception(\"Internal error -- did not find %s constructor in engine\" % factoryName)","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:raise Exception(\"Internal error: unknown parameter type %s\" % dataTypeName)","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:raise exceptions.Exception(\"getParameter -- parameter name '%s' does not exist in region %s of type %s\" %","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:raise exceptions.Exception(\"setParameter -- parameter name '%s' does not exist in region %s of type %s\" %","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:(engine.Network.getRegions, 'Get the collection of regions in a network'),","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:setattr(Network, obj, property(prop.fget, prop.fset, prop.fdel, docString))","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:Adds the module and class name for the region to the list of classes the network can use","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:engine.Network.registerPyRegion(regionClass.__module__, regionClass.__name__)","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:regions = property(_getRegions, doc='@property:place_holder(Network.getRegions)')","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:minPhase = property(engine.Network.getMinPhase, doc='@property:place_holder(Network.getMinPhase)')","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:maxPhase = property(engine.Network.getMaxPhase, doc='@property:place_holder(Network.getMaxPhase)')","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:minEnabledPhase = property(engine.Network.getMinEnabledPhase, engine.Network.setMinEnabledPhase, doc='@property:place_holder(Network.getMinEnabledPhase)')","count":2,"result_id":2089},{"warning":"11:src\/engine\/__init__.py:line-too-long:maxEnabledPhase = property(engine.Network.getMaxEnabledPhase, engine.Network.setMaxEnabledPhase, doc='@property:place_holder(Network.getMaxEnabledPhase)')","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:def createMask(imageIn, threshold=10, fillHoles=True, backgroundColor=255, blurRadius=0.0,","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:Given an image, create a mask by locating the pixels that are not the backgroundColor","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:@param threshold  How far away from the backgroundColor a pixel must be to be included","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:@param fillHoles  If true, the inside of the mask will be filled in. This is useful if","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:@param blurRadius If set to some fraction > 0.0, then the edges of the mask will be blurred","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:using a blur radius which is this fraction of the image size.","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:@param maskScale  If set to < 1.0, then the effective size of the object (the area where","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:amount. This can be useful when the outside of the object contains","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:some noise that you want to trim out and not include in the mask.","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:@retval the mask as a PIL 'L' image, where 255 is areas that include the object, and 0","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:are areas that are background. If blurRadius is > 0, then it will","count":2,"result_id":2089},{"warning":"11:src\/image\/__init__.py:line-too-long:also contain values between 0 and 255 which act as compositing values.","count":2,"result_id":2089},{"warning":"11:src\/database\/Connection.py:line-too-long:\"\"\" Instance creation traceback string (if g_max_concurrency is enabled) \"\"\"","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:Initialization of an adapive encoder using resolution or radius is not supported;","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:it must be intitialized with n. This n is kept constant while the min and max of the","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:The adaptive encoder may be initialized with a minval and maxval or with `None`","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:for each of these. In the latter case, the min and max are set as the 1st and 99th","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:**Note:** the sliding window may record duplicates of the values in the dataset,","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:resolution=0, name=None, verbosity=0, clipInput=True, forced=False):","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:super(AdaptiveScalarEncoder, self).__init__(w=w, n=n, minval=minval, maxval=maxval,","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:clipInput=True, name=name, verbosity=verbosity, forced=forced)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:# nInternal represents the output area excluding the possible padding on each side","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:self.maxval = input+1   #When the min and max and unspecified and only one record has been encoded","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:#initialBump = abs(self.minval-minOverWindow)*(1-(min(self.recordNum, 200.0)\/200.0))*2      #decrement minval more aggressively in the beginning","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:print \"Input %s=%.2f smaller than minval %.2f. Adjusting minval to %.2f\"\\","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:#initialBump = abs(self.maxval-maxOverWindow)*(1-(min(self.recordNum, 200.0)\/200.0))*2     #decrement maxval more aggressively in the beginning","count":2,"result_id":2089},{"warning":"11:src\/encoders\/adaptivescalar.py:line-too-long:print \"Input %s=%.2f greater than maxval %.2f. Adjusting maxval to %.2f\" \\","count":2,"result_id":2089},{"warning":"11:src\/encoders\/sparse_pass_through_encoder.py:line-too-long:def __init__(self, n, w=None, name=\"sparse_pass_through\", forced=False, verbosity=0):","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:forced (default True) : if True, skip checks for parameters' settings; see encoders\/scalar.py for details","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:def __init__(self, season=0, dayOfWeek=0, weekend=0, holiday=0, timeOfDay=0, customDays=0,","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:self.customDaysEncoder = ScalarEncoder(w=customDays[0], minval = 0, maxval=1,","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:name=customDayEncoderName, forced=forced)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:self.encoders.append((\"customdays\", self.customDaysEncoder, self.customDaysOffset))","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:#  0->1 on the day before the holiday and 1->0 on the day after the holiday.","count":4,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:periodic=True, radius=radius, name=\"time of day\", forced=forced)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:self.encoders.append((\"time of day\", self.timeOfDayEncoder, self.timeOfDayOffset))","count":2,"result_id":2089},{"warning":"11:src\/encoders\/date.py:line-too-long:# input.timetuple() computes the day of year 1 based, so convert to 0 based","count":2,"result_id":2089},{"warning":"11:src\/encoders\/category.py:line-too-long:def __init__(self, w, categoryList, name=\"category\", verbosity=0, forced=False):","count":2,"result_id":2089},{"warning":"11:src\/encoders\/category.py:line-too-long:forced (default False) : if True, skip checks for parameters' settings; see encoders\/scalar.py for details","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:periodic -- If true, then the input value \"wraps around\" such that minval = maxval","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:There are three mutually exclusive parameters that determine the overall size of","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:n      --      The number of bits in the output. Must be greater than or equal to w","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:radius --      Two inputs separated by more than the radius have non-overlapping","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:representations. Two inputs separated by less than the radius will","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:in general overlap in at least some of their bits. You can think","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:resolution --  Two inputs separated by greater than, or equal to the resolution are guaranteed","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:radius -- inputs separated by more than, or equal to this distance will have non-overlapping","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:resolution -- inputs separated by more than, or equal to this distance will have different","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:forced -- if true, skip some safety checks (for compatibility reasons), default false","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:# For non-periodic inputs, padding is the number of bits \"outside\" the range,","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:# on each side. I.e. the representation of minval is centered on some bit, and","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:raise Exception(\"The encoder for %s is invalid. minval %s is greater than \"","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:# There are three different ways of thinking about the representation. Handle","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:# nInternal represents the output area excluding the possible padding on each","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:\"\"\" (helper function)  There are three different ways of thinking about the representation.","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:raise ValueError(\"Only one of n\/radius\/resolution can be specified for a ScalarEncoder\")","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:raise ValueError(\"Only one of radius\/resolution can be specified for a ScalarEncoder\")","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:raise Exception(\"One of n, radius, resolution must be specified for a ScalarEncoder\")","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:raise ValueError(\"Number of bits in the SDR (%d) must be greater than 2, and recommended >= 21 (use forced=True to override)\"","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:output[0:self.n] = 0  #TODO: should all 1s, or random SDR be returned instead?","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:inMin = (left - self.padding) * self.range \/ self.nInternal + self.minval","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalar.py:line-too-long:inMax = (right - self.padding) * self.range \/ self.nInternal + self.minval","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:# value:    A representation of the encoded value in the same format as the input","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:# scalar:   A representation of the encoded value as a number. All encoded values","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:#           (e.g. for categories, this is the internal index used by the encoder)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:each sub-field of the inputData. To get the associated field names for each of","count":4,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:For a simple scalar encoder, the scalar value is simply the input unmodified.","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:and string values, respectively, from the inputs. For datetime encoders, this","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:returns the list of scalars for each of the sub-fields (timeOfDay, dayOfWeek, etc.)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:@param inputData The input data in the format it is received from the data source","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:that would have generated a specific encoded output, use the topDownCompute()","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:@param parentFieldName The name of the encoder which is our parent. This name","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:is prefixed to each of the field names within this encoder to form the","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:To get the associated field names for each of the values, call getScalarNames().","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:@param encoded The encoded output. Typically received from the topDown outputs","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:values = encoder.closenessScores(expValues[scalarIdx:], actValues[scalarIdx:],","count":2,"result_id":2089},{"warning":"11:src\/encoders\/base.py:line-too-long:outarray[start+i+leftpad:end+i+leftpad] = inarray[(start+leftpad):(end+leftpad)] * scale","count":2,"result_id":2089},{"warning":"11:src\/encoders\/delta.py:line-too-long:This is an implementation of a delta encoder. The delta encoder encodes differences between","count":2,"result_id":2089},{"warning":"11:src\/encoders\/delta.py:line-too-long:successive scalar values instead of encoding the actual values. It returns an actual value when","count":2,"result_id":2089},{"warning":"11:src\/encoders\/delta.py:line-too-long:resolution=0, name=None, verbosity=0, clipInput=True, forced=False):","count":2,"result_id":2089},{"warning":"11:src\/encoders\/delta.py:line-too-long:maxval=maxval, clipInput=True, name=name, verbosity=verbosity, forced=forced)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/multi.py:line-too-long:from nupic.encoders.random_distributed_scalar import RandomDistributedScalarEncoder","count":2,"result_id":2089},{"warning":"11:src\/encoders\/multi.py:line-too-long:and to parts seperately taken care of by the ScalarEncoder with the specified parameters.","count":2,"result_id":2089},{"warning":"11:src\/encoders\/multi.py:line-too-long:The three seperate encodings are then merged together to the final vector, in such a way that","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalarspace.py:line-too-long:\"\"\"An encoder that can be used to permute the encodings through different spaces","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalarspace.py:line-too-long:resolution,name,verbosity,clipInput, forced=forced)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/scalarspace.py:line-too-long:ret = DeltaEncoder(w,minval,maxval,periodic,n,radius,resolution,name,verbosity,clipInput, forced=forced)","count":2,"result_id":2089},{"warning":"11:src\/encoders\/sdrcategory.py:line-too-long:If \"none\" then categories will automatically be added as they are encountered.","count":2,"result_id":2089},{"warning":"11:src\/encoders\/sdrcategory.py:line-too-long:forced (default False) : if True, skip checks for parameters' settings; see encoders\/scalar.py for details","count":2,"result_id":2089},{"warning":"11:src\/encoders\/sdrcategory.py:line-too-long:raise ValueError(\"Number of ON bits in SDR (%d) must be much smaller than \"","count":2,"result_id":2089},{"warning":"11:src\/encoders\/sdrcategory.py:line-too-long:raise ValueError(\"Number of bits in the SDR (%d) must be greater than 2, and should be >= 21, pass forced=True to init() to override this check\"","count":2,"result_id":2089},{"warning":"11:src\/encoders\/sdrcategory.py:line-too-long:return EncoderResult(value=category, scalar=categoryIndex, encoding=encoding)","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:Called from the scope of the region's PyRegion.getOutputElementCount() method.","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:# Uncomment this to find out who is generating divide by 0, or other numpy warnings","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:raise Exception(\"Attempt to access parameter '%s' as an array but it is not an array\" % name)","count":4,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:description='Optional name of input log file. If set, every input vector'","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:description='Optional name of output log file. If set, every output vector'","count":4,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:description='Set to 1 to stop in the pdb debugger on the next compute',","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:description='Set to 1 to stop in the Komodo debugger on the next compute',","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:assert not (parameterName in self.__dict__ and parameterName in self.ephemeral)","count":4,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:self.ephemeral._fpLogOutputDense = open(self.ephemeral.logPathOutputDense, 'w')","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestRegion.py:line-too-long:(callerTraceback.function, callerTraceback.lineno, msg,)","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:STATUS_STARTING:    a CJM is in the process of launching this job in the","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:num_failed_workers (numFailedWorkers): The number of failed specialized workers","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:CMPL_REASON_ERROR:    model encountered an error. The completion_msg","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:this model is being optimized. Stroring this separately in the database","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:should be terminated immediately. This gets set to STOP_REASON_STOPPED","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:NOTE: this is primarily for resuming suspended Production and Stream Jobs; DO","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:sweeping the jobs table and when it finds a new job, will proceed to start it","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:allocate_new_workers, untended_dead_workers, num_failed_workers","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:retval:      A (possibly empty) sequence of running job IDs with cancel field","count":2,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:WARNING!!!: The order of the results are NOT necessarily in the same order as","count":6,"result_id":2089},{"warning":"11:src\/database\/ClientJobsDAO.py:line-too-long:#   (<type 'exceptions.UnicodeDecodeError'>, UnicodeDecodeError('utf8', \"Duplicate entry '1000-?.\\x18\\xb1\\xd3\\xe0CO\\x05\\x8b\\xf80\\xd7E5\\xbb' for key 'job_id'\", 25, 26, 'invalid start byte'))","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:typeNames = {int: 'UInt32', float: 'Real32', str: 'Byte', bool: 'bool', tuple: 'tuple'}","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:description='Optional name of output log file. If set, every output vector'","count":4,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:SpatialPooler instance for the enitire level and does *not* support the concept","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:from SpatialPooler. Thus, there are only a few hardcoded arguments in __init__,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:columnCount,   # Number of columns in the SP, a required parameter","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:# print self.__class__.__name__, \"contains base class member '%s' \" \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:self._spatialPoolerInput = numpy.zeros((1,self.inputWidth), dtype=GetNTAReal())","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:# Uncomment this to find out who is generating divide by 0, or other numpy warnings","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:#  ('hotshot.stats') will be sensed and printed out by the vision framework's","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:print \"\\n  Collecting and sorting internal node profiling stats generated by hotshot...\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:# Write the bottom up out to our node outputs only if we are doing inference","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:spatialTopDownOut is the top down output computed only from the SP,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:temporalTopDownOut is the top down output computed from the topDown in","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:SP is representing the inputs independent of the TP.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:input pattern is. Higher values are increasingly rare\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:description='Set to 1 to stop in the pdb debugger on the next compute',","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:description='Set to 1 to stop in the Komodo debugger on the next compute',","count":2,"result_id":2089},{"warning":"11:src\/regions\/SPRegion.py:line-too-long:raise Exception(\"Attempt to access parameter '%s' as an array but it is not an array\" % name)","count":4,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:dict(date=\"02-01-2010 23:12:23\", amount=4.95, country=\"US\", _reset=0, _sequenceId=0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:dataType=\"Real32\", # very inefficient for bits, but that is what we use now","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:description='1 if the node should do top down compute on the next call '","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:raise Exception(\"Unable to initialize RecordSensor -- encoder has not been set\")","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:raise Exception(\"Unable to initialize RecordSensor -- dataSource has not been set\")","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:# =========================================================================","count":8,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:# We get the temporal pooler's topDownOut passed through the spatial pooler","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:output:                     The main dictionary of outputs passed to compute()","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:raise Exception(\"NuPIC requested output element count for 'dataOut' on a \"","count":2,"result_id":2089},{"warning":"11:src\/regions\/RecordSensor.py:line-too-long:\"on a RecordSensor node, but the encoder has not been set\")","count":4,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:KNNClassifierRegion implements the k Nearest Neighbor classification algorithm.","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:By default it will implement vanilla 1-nearest neighbor using the L2 (Euclidean)","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:'index, the likelihood that the input to the node belongs '","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:'index, the probability that the input to the node belongs '","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:description='If True, categoryProbabilitiesOut is the probability of '","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:'percentage of neighbors among the top K that are of each category.',","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:description='If >= 1, we assume the input is organized into columns, '","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:'start cell (first cell) in any column which is bursting.'","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:self._samples = numpy.concatenate((self._samples, numpy.atleast_2d(inputVector)), axis=0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:print \"  Warning: You have chosen to ignore the image data and instead just use the auxiliary data stream.\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:raise RuntimeError, \"KNNClassifierRegion expects numpy.float32 for the auxiliary data vector\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:#inputVector = numpy.concatenate([inputVector, inputs['auxDataIn'][0].wvector(0).array()])","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:assert len(inputs[\"partitionIn\"]) == 1, \"Must have exactly one link to partition input.\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:assert len(partInput) == 1, \"Partition input element count must be exactly 1.\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:samplesList = [[float(y) for y in x] for x in [list(x) for x in samplesArray]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:line-too-long:return self._bestPrototypeIndexCount if self._bestPrototypeIndexCount else 0","count":2,"result_id":2089},{"warning":"11:src\/regions\/KNNClassifierRegion.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/regions\/PyRegion.py:line-too-long:singleNodeOnly -- a boolean (True if this Region supports only a single node)","count":2,"result_id":2089},{"warning":"11:src\/regions\/TestNode.py:line-too-long:raise Exception(\"TestNode found keyword %s but there is no parameter with that name\" % key)","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:typeNames = {int: 'UInt32', float: 'Real32', str: 'Byte', bool: 'bool', tuple: 'tuple'}","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:'py' or 'cpp'. The 'cpp' implementation is optimized for speed in C++.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:description='Optional name of output log file. If set, every output vector'","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:columnCount,   # Number of columns in the SP, a required parameter","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:# print self.__class__.__name__, \"contains base class member '%s' \" \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:# Uncomment this to find out who is generating divide by 0, or other numpy warnings","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:#  ('hotshot.stats') will be sensed and printed out by the vision framework's","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:print \"\\n  Collecting and sorting internal node profiling stats generated by hotshot...\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:tpOutput = self._tfdr.compute(buInputVector, self.learningMode, self.inferenceMode)","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:predictedState = self._tfdr.getPredictedState().reshape(-1).astype('float32')","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:predictedActiveIndices = numpy.intersect1d(activeIndices, predictedIndices)","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:description='Set to 1 to stop in the pdb debugger on the next compute',","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:description='Set to 1 to stop in the Komodo debugger on the next compute',","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:# TODO: as a temporary hack, getParameterArrayCount checks to see if there's a variable, private or","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:# not, with that name. If so, it attempts to return the length of that variable.","count":2,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:raise Exception(\"Attempt to access parameter '%s' as an array but it is not an array\" % name)","count":4,"result_id":2089},{"warning":"11:src\/regions\/TPRegion.py:line-too-long:# TODO: as a temporary hack, getParameterArray checks to see if there's a variable, private or not,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:SVMClassifierNode implements Support Vector Machines (SVMs), which can be used to","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:# If inference mode is being turned on, build the SVM model and turn off learning mode","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:# This node only supports a one-time switch from learning mode to inference mode","count":4,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:# If learning mode is being turned off, build the SVM model and turn on inference mode","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:raise RuntimeError, \"SVMClassifierNode 'mode' parameter cannot be changed\" \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:print \"  Warning: You have chosen to ignore the image data and instead just use the auxiliary data stream.\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:#        raise RuntimeError, \"SVMClassifierNode expects numpy.float32 for the auxiliary data vector\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:#        inputVector = numpy.concatenate([inputVector, inputs['auxDataIn'][0].wvector(0).array()])","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:raise RuntimeError, \"SVMClassifierNode expects numpy.float32 for the auxiliary data vector\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"learningMode\", type=\"bool\", constraints=\"bool\", access=\"gs\", value = True,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"inferenceMode\", type=\"bool\", constraints=\"bool\", access=\"gs\", value = False,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The current value of C, an SVM parameter that","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:and this parameter is changed to the best value afterwards.\"\"\"),","count":4,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The minimum value of C, an SVM parameter that","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The maximum value of C, an SVM parameter that","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The current value of gamma, an SVM parameter that","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The minimum value of Gamma, an SVM parameter that","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:minimizes error rate on the set of training samples.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The maximum value of Gamma, an SVM parameter that","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"kernelType\", type=\"string\", access=\"cgs\", value= \"rbf\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Specifies the type of kernel to use.  Valid choices","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:\",\".join(map(str, xrange(len(_kKernelTypes))))","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"numRecursions\", type=\"uint\", access=\"cgs\", value = 0,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The number of rounds of recursive Latin Hypercube Sampling","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:performed, and instead the values 'minC' and 'minGamma' are used.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"numSamplesPerRecursion\", type=\"uint\", access=\"gs\", value = 1,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The number of samples we will test in each round of","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"contractionFactor\", type=\"float\", access=\"cgs\", value = 0.3,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The fraction of the C and Gamma sampling space that we will","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:sample with each successive round of Latin Hypercube sampling.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"numCrossValidations\", type=\"uint\", access=\"cg\", value = 5,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"autoTuningData\", type=\"bool\", constraints=\"bool\", access=\"gs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Data presented to the classifier while autoTuningData is set to True","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:end of learning (when inferenceMode is first set to True).\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"convEpsilon\", type=\"float\", access=\"cg\", value = 0.01,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:criterion used to halt the search for optimal SVM hyperplanes.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"useSparseSvm\", type=\"bool\", constraints=\"bool\", access=\"gc\", value = False,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"A boolean that controls whether input vectors","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:should be binarized during learning and inference.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"inputThresh\", type=\"float\", access=\"cg\", value = 0.5,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"A floating point value that establishes the threshold","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:If 'useSparseSvm' is False, then this parameter has no effect.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"useProbabilisticSvm\", type=\"bool\", constraints=\"bool\", access=\"cg\", value = True,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"doSphering\", type=\"bool\", constraints=\"bool\", access=\"cg\", value = False,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"A boolean indicating whether or not data should","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"We operate in two modes: 'classification' - the SVM is","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"deterministic\", type=\"bool\", constraints=\"bool\", access=\"cgs\", value = False,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Set true to seed random number generator so that the SVM","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='numSVDSamples', type='PyObject', access='gcs', value=None,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"If not None, carries out SVD transformation after","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='numSVDDims', type='PyObject', access='gc', value=None,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:If set to 'adaptive' the number is chosen automatically.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='fractionOfMax', type='PyObject', access='gc', value=None,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"The smallest singular value which is retained","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='useAuxiliary', type='PyObject', access='gc', value=None,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Whether or not the classifier should use auxiliary","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='justUseAuxiliary', type='PyObject', access='gc', value=None,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Whether or not the classifier should ONLY use the auxiliary","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Whether to discard extra SVM data to save space. Set to False","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='nta_cpp_svm_seed', type='int', access='cgs', value=-1,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='keepSamples', type='bool', access='cgs', value=False),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name='calculateDistances', type='bool', access='cgs', value=False),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Whether to spawn an internal thread that monitors the","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:NodeSpecItem(name=\"numTrainingSamples\", type=\"int\", access=\"g\", value = 0,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:description=\"\"\"Returns the current number of training samples.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:def simulateTrainingSample(self, inputWidth=None, category=None, partitionId=None):","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:for ephemeralMemberName in [x for x in self._getEphemeralMembers() if x in state]:","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:numpy.atleast_2d(inputVector)), axis=0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:self._samples = numpy.concatenate((self._samples, numpy.atleast_2d(inputVector)), axis=0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:if self.numRecursions > 0 and (self.minC < self.maxC or self.minGamma < self.maxGamma):","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:(svmParams, svmAccuracy, svmModel) = self._doRecursion(None, None, paramRange)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:def _doRecursion(self, samples, validationSets, paramRange, recursionIndex=0, bestResults=None):","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:sampleIndices = [(float(x), float(gammaIndices[x])) for x in range(self.numSamplesPerRecursion)]","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:samplePoints = [(minC + intervalC * x[0], minGamma + intervalGamma * x[1]) for x in sampleIndices]","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:# Check if the previous recursion actually produced better results (by chance)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:return self._doRecursion(samples, validationSets, newParamRange, recursionIndex,","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:# @todo Problem - the cross_validate() API doesn't accept C, gamma parameters!","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:#accuracy = self._svm.cross_validate(C, gamma, nFold=self.numCrossValidations)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:self._mean = numpy.mean(self._samples[:,:self._samples.shape[1]-self._auxInputLen], axis=0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:u, self._s, self._vt = numpy.linalg.svd(self._samples[:numSVDSamples,:self._samples.shape[1]-self._auxInputLen])","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:print \"******************************************************************************\"","count":4,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:print \"Warning: The requested number of PCA dimensions is more than the number of pattern dimensions.\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:self._samples = self._samples[:, :self._samples.shape[1]-self._auxInputLen]","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:line-too-long:self._samples = numpy.concatenate([numpy.atleast_2d(self._samples), numpy.atleast_2d(auxSamples)], axis=1)","count":2,"result_id":2089},{"warning":"11:src\/regions\/SVMClassifierNode.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/inward.py:line-too-long:state['posnX'], state['posnY'] = min(neighbors, key=lambda a: a[0]**2+a[1]**2)","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/random1DOF.py:line-too-long:Must be overridden by sub-classes, and must not invoke this base class method.","count":4,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/random1DOF.py:line-too-long:* self._rng.choice(xrange(params['minVelocity'], params['maxVelocity'] + 1))","count":4,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/random1DOF.py:line-too-long:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/rotate.py:line-too-long:sequenceLength = 1 + int((params['maxAngularPosn'] - params['minAngularPosn'])","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/rotate.py:line-too-long:state['catIndex'] = self._getIterCount() \/ (sequenceLength * params['numRepetitions'])","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/rotate.py:line-too-long:seqIndex = self._getIterCount() % (sequenceLength * params['numRepetitions'])","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/HorizontalBlock.py:line-too-long:posnX = ((blockCatIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:Generally, when using this explorer, you will want to issue a reset when, and only","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:when, you visit the next center-point. This makes it compatible with using the \"star\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:training mode of FDRTemporal. This will cause the FDRTemporal to learn that the","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:numCategories * blockShape[0] * blockShape[1] * spreadShape[0] * spreadShape[1]","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/block1DOF.py:line-too-long:posnX = ((blockCatIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/rotate_block.py:line-too-long:posnX = ((blockIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/rotate_block.py:line-too-long:posnY = ((blockIndex \/\/ edgeLen) - params['radialLength']) * params['radialStep']","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/rotate_block.py:line-too-long:angularPosn = params['maxAngularPosn'] - params['minAngularVelocity'] * rotationIndex","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/random.py:line-too-long:Must be overridden by sub-classes, and must not invoke this base class method.","count":4,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/random.py:line-too-long:* self._rng.choice(xrange(params['minVelocity'], params['maxVelocity'] + 1))","count":4,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/random.py:line-too-long:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/block.py:line-too-long:posnX = ((blockCatIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":2,"result_id":2089},{"warning":"11:src\/regions\/PictureSensorExplorers\/block.py:line-too-long:posnY = ((blockCatIndex \/\/ edgeLen) - params['radialLength']) * params['radialStep']","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:# For black and white images, our doBackground pixels are 255 and our figure pixels","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:assert self.noiseThickness != 0, \"ImageSensor parameter noiseThickness cannot be 0\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:idxW = numpy.array([int(self.noiseThickness*i) for i in xrange(noiseArrayW)])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:idxH = numpy.array([int(self.noiseThickness*i) for i in xrange(noiseArrayH)])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:pixels2d[submatIdx] = (pixels2d[submatIdx]^thickNoise) | pixels2d[submatIdx]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:pixels2d[submatIdx] = (pixels2d[submatIdx]^thickNoise) & pixels2d[submatIdx]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:noise = numpy.random.random(len(pixels))  # get array of floats from 0 to 1","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:categoryOut -- The output element count of the 'categoryOut' output (NuPIC 1 only).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:resetOut -- The output element count of the 'resetOut' output (NuPIC 1 only).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:auxDataWidth -- The output element count of the 'auxData' output (NuPIC2 only).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:clearImageList=True, skipExplorerUpdate=False, auxPath=None, userAuxData=None,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:userAuxData=userAuxData, sequenceIndex=sequenceIndex, frameIndex=frameIndex)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:raise RuntimeError(\"Unable to get a list of files due to an OS error.\\nDirectory: \"+top+\"\\nThis may be due to an issue with Snow Leopard.\")","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:an offset to use for the purpose of skipping.  For example, if 'skipInterval'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:print \"ImageSensor: looking for data in NTA_DATA_DIR=%s\" % os.environ[\"NTA_DATA_DIR\"]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:hasRegex = False in [isTextRegex.match(r) is not None for r in categoryNameFilter]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:self.explorer[2].update(numImages=len(self._imageList), sequenceCount=sequenceInfo[-1][0], frameCount=len(self._imageList))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:# Account for holdFor as best we can. This won't be exact because it doesn't take into","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:stopIteration = self.getIterationFromSequence(sequenceIndex, self.getFrameCount(sequenceIndex)-1)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:return self._imageList[iteration]['sequenceIndex'], self._imageList[iteration]['frameIndex']","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:def _loadImage(self, index, returnOriginal=False, setErodeFlag=True, userAuxData=None):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:item['auxData'] = numpy.concatenate([item['auxData'],numpy.fromfile(item['auxPath'][k])])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:assert (response[1] is None) # Only one post-filter can determine raw_output","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:imageToFilter.info['path'] = self._imageList[position['image']]['imagePath']","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:# Normally, the enabledSize is smaller than the sensor size. But, there are some","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#  configurations where the user might want to explore in a larger size, then run","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#  it through a post-filter to get the end sensor size (for example, when using a","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#  fish-eye post filter). If we detect that the enabledSize is greater than the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:self.bboxLogFile = open(os.path.join(self.logDir, 'imagesensor_bbox_log.txt'), 'w')","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:print >>self.bboxLogFile, '%d %d %d %d' % (bbox[0], bbox[1], bbox[2], bbox[3])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:auxData = [numpy.array(imageList['auxData']) for imageList in self._imageList]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Index of the leave-one-out partition associated with the current image.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the current output image(s) with the alpha channel.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:outputImage = deserializeImage(sensor.getParameter('outputImageWithAlpha'))\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the original, unfiltered version of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:originalImage = deserializeImage(sensor.getParameter('originalImage'))\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the current 'location image', which shows the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:locationImage = deserializeImage(sensor.getParameter('locationImage'))\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"List of filters to apply to each image. Each element in the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The position of the sensor from the *previous* compute, as a","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:True if that is not an issue and you wish to use a sweeping explorer.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Whether to overlay the location rectangle on the original image instead","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the current output image(s). If depth > 1,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:outputImage = deserializeImage(sensor.getParameter('outputImage'))\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for writing the intermediate versions of images to disk","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The number of elements in in the auxiliary data vector.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Name of file to which to write category number on each compute.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for writing an image to disk on each iteration which shows","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Dictionary of information for the image which will be used for the next","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Number of iterations necessary to fully explore all loaded images. Only","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Explorer (used to move the sensor through the input space).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"A list with a dictionary of information for each image that has","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:'automaskingTolerance' will produce tighter (smaller) bounding box masks.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The number of active elements in the dataOut output.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Maximum amount of memory that ImageSensor should use for storing images,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Name of the imagesensor log directory, which is created in the session","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:bundle if any logging options are enabled. Default is imagesensor_log.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Value of \"background\" pixels. May be used to pad images during sweeping,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:as well as to find the bounds of an object if no mask is available.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The position of the sensor that will be used for the *next* compute,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"List of Auxiliary Data for every image in the image list\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Whether to invert the pixel values before sending an image to the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"A list with a tuple for each category that the sensor has learned. The","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:categoryInfo = deserializeCategoryInfo(sensor.getParameter('categoryInfo'))\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Dictionary of information for the image used during the previous compute.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for writing the original, unfiltered version of the current","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"'gray' (8-bit grayscale) or 'bw' (1-bit black and white).\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for logging the bounding box information on each iteration.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"** DEPRECATED ** Whether to send a blank output every time the explorer","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"List of filters to apply to each image just before the image","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:description=\"\"\"(alias for numIterations) Number of iterations necessary to fully explore","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:if you wish to get the number of iterations for a particular image.\"\"\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Index of the leave-one-out partition associated with the current image.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"useAux\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"'gray' (8-bit grayscale) or 'bw' (1-bit black and white).\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The number of active elements in the dataOut output.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Value of \"background\" pixels. May be used to pad images during sweeping,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        as well as to find the bounds of an object if no mask is available.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        specified 'background' pixel value.  The bounding box will enclose all","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        'automaskingTolerance' will produce tighter (smaller) bounding box masks.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        bounding box based on image similarity with respect to the background,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"invertOutput\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Whether to invert the pixel values before sending an image to the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        network. If invertOutput is enabled, a white object on a black background","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"List of filters to apply to each image. Each element in the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        list should be either a string (just the filter name) or a list containing","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"List of filters to apply to each image just before the image","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        is sent to the network. Each element in the list should either be a string","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        (just the filter name) or a list containing both the filter name and a","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Explorer (used to move the sensor through the input space).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        Specify as a string (just the explorer name) or a list containing both the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Name of file to which to write category number on each compute.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logText\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for verbose logging to imagesensor_log.txt.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logOutputImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logOriginalImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for writing the original, unfiltered version of the current","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logFilteredImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for writing the intermediate versions of images to disk","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logLocationImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for writing an image to disk on each iteration which shows","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logLocationOnOriginalImage\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Whether to overlay the location rectangle on the original image instead","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        of the filtered image. Does not work if the two images do not have the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        same size, and may be nonsensical even if they do (for example, if a filter","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logBoundingBox\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for logging the bounding box information on each iteration.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Name of the imagesensor log directory, which is created in the session","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        bundle if any logging options are enabled. Default is imagesensor_log.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Maximum amount of memory that ImageSensor should use for storing images,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        in megabytes. ImageSensor will unload images and filter outputs to stay beneath","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Number of iterations necessary to fully explore all loaded images. Only","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        some explorers support this. Use the getNumIterations command if you wish to","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"(alias for numIterations) Number of iterations necessary to fully explore","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        all loaded images. Only some explorers support this. Use the getNumIterations command","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        if you wish to get the number of iterations for a particular image.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"blankWithReset\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"** DEPRECATED ** Whether to send a blank output every time the explorer","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        generates a reset signal (such as when beginning a new sweep). Turning","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The position of the sensor that will be used for the *next* compute,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The position of the sensor from the *previous* compute, as a","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        dictionary. Because \"outputImage\" and \"locationImage\" match the output of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        previous compute (not the upcoming one), they do not correlate with the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"A list with a dictionary of information for each image that has","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Dictionary of information for the image used during the previous compute.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Dictionary of information for the image which will be used for the next","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"A list with a tuple for each category that the sensor has learned. The","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        tuple contains the category name (i.e. 'dog') and a serialized version of","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        categoryInfo = deserializeCategoryInfo(sensor.getParameter('categoryInfo'))\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the current output image(s). If depth > 1,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        multiple serialized images will be returned in a list. To deserialize:","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        outputImage = deserializeImage(sensor.getParameter('outputImage'))\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the current output image(s) with the alpha channel.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        If depth > 1, multiple serialized images will be returned in a list. To deserialize:","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        outputImage = deserializeImage(sensor.getParameter('outputImageWithAlpha'))\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the original, unfiltered version of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        originalImage = deserializeImage(sensor.getParameter('originalImage'))\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the current 'location image', which shows the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        position of the sensor overlaid on the filtered image (optionally, the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        locationImage = deserializeImage(sensor.getParameter('locationImage'))\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"minimalBoundingBox\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#          image background should be set even if it touches one of the sides of","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#          the image. Set to False to avoid chopping edges off certain images, or","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#          True if that is not an issue and you wish to use a sweeping explorer.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The number of elements in in the auxiliary data vector.\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"List of Auxiliary Data for every image in the image list\"\"\"),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Parameter that contains a dict of metadata for the most","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:too-many-arguments:def _init(self, width=1, height=1, depth=1, mode='gray',","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:too-many-nested-blocks:if useCategories:","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensor.py:too-many-nested-blocks:for category in categoryList:","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:orientations = numpy.array(range(orientationCount), dtype=RealNumpyDType) * \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:offsets = means.repeat(self._filterDim, axis=1).repeat(self._filterDim, axis=2)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:squareSums = (filterBank * filterBank).sum(axis=2).sum(axis=1).reshape(filterCount, 1, 1)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:self._filterBank = (filterBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:symmetric gabor filters that are generally selective to lines.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'raw'       Perform no post-processing. Outputs will be in (-1.0, +1.0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'abs'       Output is absolute value of raw response.  Output will","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'positive'  Clip negative raw response values to zero.  Output will lie","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'rectified' Output is square of input.  Output will lie in the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'power'     Positive raw responses are squared; negative raw responses","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:are clipped to zero.  Output will be in (0.0, +1.0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'hardFull'  Apply a hard threshold to the input; if raw response is","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:>= 'threshold', then output is 1.0, else output is -1.0.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'hardHalf'  Apply a hard threshold to the input; if raw response is","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:>= 'threshold', then output is 1.0, else output is 0.0.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'sigmoidFull': Apply a sigmoidal threshold function to the input using","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'threshold' and 'steepness'.  Output lies in (-1.0, +1.0).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'sigmoidHalf': Apply a sigmoidal threshold function to the input using","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'threshold' and 'steepness'.  Output lies in (0.0, +1.0).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'name': a human-meaningful name (primarily used for debugging purposes.)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:In addition, the following key is required if 'mode' is set to 'hardFull',","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'threshold': the threshold to use for either the hard ('hardFull' or 'hardHalf')","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:or soft ('sigmoidFull' or 'sigmoidHalf') thresholding post-processing modes.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:In addition, the following key is required if 'mode' is set to 'sigmoidFull'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'steepness': controls the steepness of the sigmoidal function that performs","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:separate responses, each computed from a single underlying Gabor filter.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:@param suppressLobes -- A boolean flag indicating whether or not the secondary","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:@param convolutionMethod -- Method to use for convolving filters with images.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'2D' is straightforward convolution of 2D filter with image.  Other options","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:are 'FFT' for convolution by multiplication in Fourier space, and '1D' for","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:convolution with two 1D filters formed from a separable 2D filter. '1D'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:print 'Gabor bank generated with %d filter pairs.' % len(self._gaborBankParams)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'counter'  - internal image counter, incremented for each new source image","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'counter' - internal image counter, incremented for each new source image","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:scaleDict[self._gaborBankParams[responseIndex][0]['scale']] += [(responseIndex,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'image-%04d.composite-%02d.png' % (c['counter'], c['scale']))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:exponentialTerm = math.exp(exponentialConstant * (x0*x0 + aspectConstant*y0*y0))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:return [x[1] for x in self._suppressionRules() if x[0][0] == orientation and x[0][1] == phase][0]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:(numPosZones, numNegZones, deltaX, deltaY) = self._findSuppressionRules(orientation, phase)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:lobeFound = self._scanForLobes(filter, numPosZones, numNegZones, deltaX, deltaY,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:@param deltaX, deltaY -- The direction in which to proceed (either vertically,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:print 'Applying filter:  phase=%f  scale=%f  orient=%d' % (filterSpecs['phase'],","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:filterSpecs['scale'],","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:filterSpecs['orient'])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:response = self._postProcess(response, postProcessingMode, threshold, steepness)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:def _postProcess(self, preResponse, postProcessingMode, threshold=0.0, steepness=500.0):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:postResponse = 1.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:postResponse = (2.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)) - 1.0","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:# im.putdata(response.flatten(), scale=maxPixelVal * amplification, offset=0.0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:im = Image.fromarray(((response*maxPixelVal*amplification).clip(min=0, max=255.0)).astype(numpy.uint8))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:Applies a random combination of stretch and shear to the image, controlled by difficulty.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:@param difficulty -- Controls the amount of stretch and shear applied to the image.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:shear = self.difficulty*self.maxShear - self.difficulty*0.3 + self.difficulty*0.3*self.random.random()","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:squeeze = self.minSqueeze - (self.minSqueeze - self.maxSqueeze)*(self.difficulty - self.difficulty*0.3 + self.difficulty*0.3*self.random.random())","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), int((size[0] - squeeze*size[0])\/2), 0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), 0, int((size[1] - squeeze*size[1])\/2))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:retImage.paste(newImage, (0, int((image.size[1] - newImage.size[1])\/2.0)))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:retImage.paste(newImage, (0, int((image.size[0] - newImage.size[0])\/2.0)))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/HistogramShift.py:line-too-long:Shifts the image histogram randomly in any direction, given a difficulty level.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/HistogramShift.py:line-too-long:to shift the image histogram. The direction will be random, and a random offset will be added.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/HistogramShift.py:line-too-long:offset = (offset - halfWindowSize) + halfWindowSize*self.random.random()*((-1)**self.random.randint(1, 2))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:self._acceptOrCull(smoothX, strongZonesX, strongZone, minZoneLen, minStrength)","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:self._acceptOrCull(smoothY, strongZonesY, strongZoneY, minZoneLen, minStrength)","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#strongZonesAll.extend([(left, top, right, bottom) for (top, bottom) in strongZonesY])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:match = re.match(r\"^(?P<mnemonic>[a-z]+)\\.(?P<videoID>[0-9]{4})_sequence(?P<seqID>\\-?[0-9]{1,5})$\", imgPrefix)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:match = re.match(r\"^vid(?P<videoID>[0-9]{4})_seq(?P<seqID>\\-?[0-9]{3,4})$\", imgPrefix)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"ORIG (%3d, %3d, %3d, %3d) [%3dx%3d] ==> (%3d, %3d, %3d, %3d) [%3dx%3d]\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"WARNING: multiple (%d) split boxes...choosing biggest one...\" % len(strongZonesAll)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"WARNING: multiple (%d) split boxes...taking union...\" % len(strongZonesAll)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"%06d: (%3d, %3d, %3d, %3d) [%3dx%3d] ==> (%3d, %3d, %3d, %3d) [%3dx%3d]\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:def _acceptOrCull(self, strength, strongZones, candidateZone, minZoneLen, minStrength):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:This method is based on the convolution of a scaled window with the signal.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:TODO: the window parameter could be the window itself if an array instead of a string","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:raise ValueError, \"Window is on of 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:# The srcBox is the correct aspect ratio, and either taller or wider than the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:croppedImage.putalpha(Image.new(mode='L', size=croppedImage.size, color=255))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:srcBox[3]-srcBox[1]), color=fillValue)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:scaledImage = newImage.resize((targetWidth, targetHeight), self._resizingFilter)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/BoxFixer.py:too-many-locals:def process(self, image):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:# ---------------------------------------------------------------------------","count":8,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:bgImg = self.scaledBGImgs[idx] = self.bgImgs[idx].resize(image.size, Image.ANTIALIAS)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:backgroundColor=self.background, blurRadius=self._blurRadius,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:# Put an \"all-on\" alpha channel because we now want the network to consider the entire","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param numOrientations -- The number of gabor filter orientations to produce.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:The half-circle (180 degrees) of rotational angle will be evenly partitioned.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:Defaults to 4, which produces a gabor bank containing filters oriented","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param phaseMode -- The number of separate phases to compute per orientation.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:Valid values are: 'single' or 'dual'.  In 'single', responses to each such","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:orientation are rectified by absolutizing them; i.e., a 90-degree edge","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responses will be indistinguishable.  In \"dual\" mode, the responses to","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:each orientation are rectified by clipping at zero, and then creating","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:a second output response by inverting the raw response and again clipping","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:90-degree-oriented plane, and a 270-degree edge will produce a response","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param centerSurround -- Controls whether an additional filter corresponding to","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:If phaseMode is \"dual\", then a second \"center surround\" response plane","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:is added as well (the inverted version of the center-surround response.)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param targetType -- The preferred \"target\" of the gabor filters.  A value of","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:'line' specifies that line detectors (peaks in the center and troughs","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:on either side) are to be used.  A value of 'edge' specifies that edge","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param gainConstant -- A multiplicative amplifier that is applied to the gabor","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:normalized on a per image (and per scale) basis.  Accepts the following","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param perPlaneNormalization -- Controls whether normalization (as specified by","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:'normalizationMethod') is applied globally across all response planes","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:(for a given scale), or individually to each response plane.  Default","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:is False.  Note: this parameter is ignored if normalizationMethod is \"fixed\".","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param perPhaseNormalization -- Controls whether normalization (as specified by","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingMethod -- Controls what type of post-processing (if any)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:\"raw\":       No post-processing is performed; final output values are","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:\"sigmoid\":   Passes normalized output values through a sigmoid function","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:parameterized by 'postProcessingSlope' and 'postProcessingCenter'.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:\"threshold\": Passes normalized output values through a piecewise linear","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:thresholding function parameterized by 'postProcessingMin'","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingCenter -- Controls the center point of the sigmoid function","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingMin -- If 'postProcessingMethod' is set to 'threshold', all","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:normalized response values less than 'postProcessingMin' are suppressed to zero.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingMax -- If 'postProcessingMethod' is set to 'threshold', all","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:normalized response values greater than 'postProcessingMax' are clamped to one.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param zeroThresholdOut -- if all outputs of a gabor node are below this threshold,","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:they will all be driven to absolute 0. This is useful in conjunction with","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:using the product mode\/don't care spatial pooler which needs to know when","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param boundaryMode -- Controls how GaborNode deals with boundary effects.  Accepts","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:'constrained' -- Gabor responses are normally only computed for image locations","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:that are far enough from the edge of the input image so that the entire","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:filter mask fits within the input image.  Thus, the spatial dimensions of","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:the output gabor maps will be smaller than the input image layers.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:'sweepOff' -- Gabor responses will be generated at every location within","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:the input image layer.  Thus, the spatial dimensions of the output gabor","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:maps will be identical to the spatial dimensions of the input image.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:For input image locations that are near the edge (i.e., a portion of","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:the gabor filter extends off the edge of the input image), the values","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:of pixels that are off the edge of the image are taken to be as specifed","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param offImagePixelValue -- If 'boundaryMode' is set to 'sweepOff', then this","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:parameter specifies the value of the input pixel to use for \"filling\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param suppressOutsideBox -- If True, then gabor responses outside of the bounding","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:box (provided from the sensor) are suppressed.  Internally, the bounding","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:box is actually expanded by half the filter dimension (respecting the edge","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:of the image, of course) so that responses can be computed for all image","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param forceBoxContraction -- Fine-tunes the behavior of bounding box suppression.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:If False (the default), then the bounding box will only be 'contracted'","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:(by the half-width of the filter) in the dimenion(s) in which it is not","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:the entire span of the image.  If True, then the bounding box will be","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param suppressByAlpha -- A boolean that, if True, instructs GaborNode to use","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:the pixel-accurate alpha mask received on the input 'validAlphaIn' for","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param logPrefix -- If non-None, causes the response planes at each scale, and","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:for each input image, to be written to disk using the specified prefix","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:for the name of the log images.  Default is None (no such logging.)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# The following parameters are for advanced configuration and unsupported at this time","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_aspectRatio -- Controls how \"fat\" (i.e., how oriented) the Gabor","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 filters are.  A value of 1 would produce completely non-oriented","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 (circular) filters; smaller values will produce a more oriented","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 the Gaussian component of the Gabor filter.  Default is 4.5.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_wavelength -- Controls the frequency of the sinusoidal component","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_lobeSuppression -- Controls whether or not the secondary lobes of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 Gabor filters are suppressed.  The suppression is performed based","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 on the radial distance from the oriented edge to which the Gabor","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 filter is tuned.  If True, then the secondary lobes produced","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#                 Gabor equation (digitized into discrete sampling points, of","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_debugLogBuffers -- If enabled, causes internal memory buffers used","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'numOrients' has been deprecated and replaced with 'numOrientations'\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'numOrients' (%s) is inconsistent with 'numOrientations' (%s) and will be ignored\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'filterPhase' has been deprecated and replaced with 'targetType'\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'filterPhase' (%s) is inconsistent with 'targetType' (%s) and will be ignored\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'nta_edgeMode' has been deprecated and replaced with 'edgeMode'\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'nta_edgeMode' (%s) is inconsistent with 'edgeMode' (%s) and will be ignored\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'lateralInhibition' has been deprecated and will not be supported in future releases\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'validityShrinkage' has been deprecated and replaced with 'suppressOutsideBox'\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'validityShrinkage' (%s) is inconsistent with 'suppressOutsideBox' (%s) and will be ignored\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# It may change in the future when ImageSensor supports packed image pyramids","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be an odd integer >= %d; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be an integers >= %d; your value: %s\" % \\","count":4,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be one of %s; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a boolean; your value: %s\" % \\","count":16,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be one of %; your value: %s\" % \\","count":10,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer >= 0.0; your value: %s\" % \\","count":4,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer > 0.0; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer; your value: %s\" % \\","count":6,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:if value != 'colorKey' and (type(value) not in (int, float) or float(value) < 0.0 or float(value) > 255.0):","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer between 0 and 255, or 'colorKey'; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a string; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float > 0.0; your value: %s\" % \\","count":6,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float >= 0 and <= 1; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:if type(value) not in [type(0), type(0.0)] or float(value) < 0.0 or float(value) > 1.0:","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer between 0 and 1; your value: %s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:self._genResponseImages(response, preSuppression=preSuppression, phase=whichDirection)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:if whichScale != 'all' and (type(whichScale) != type(0) or whichScale < 0 or whichScale >= numScales):","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:\"'whichScale' must be 'all' or an integer between 0 and %d.\" % self._numScales","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:if type(whichResponse) != type(0) or whichResponse < 0 or whichResponse >= self._numPlanes:","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:\"'whichResponse' must be 'all' or an integer between 0 and %d.\" % self._numPlanes","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#self._buffers = [numpy.zeros(inputDim, dtype=numpy.int32) for inputDim in inputDims]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:testImage = numpy.ones((self._filterDim, self._filterDim), dtype=numpy.float32) * 255.0","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:maxShiftedResponse = maxRawResponse \/ (255.0 * float(self._integerMathScale))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:lutInputs = numpy.array(range(numLutBins), dtype=numpy.float32) \/ postProcScalar","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:offset = 1.0 \/ (1.0 + numpy.exp(self._postProcessingSlope * self._postProcessingCenter))","count":4,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:comboLut = numpy.concatenate((numpy.fliplr(postProcLUT[numpy.newaxis,:]),","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:postProcLUT[numpy.newaxis,:]),","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:postProcLUT = numpy.concatenate((comboLut, comboLut), axis=1).reshape(4*numLutBins)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#self._buffers = [numpy.zeros(inputDim, dtype=numpy.int32) for inputDim in self._inputDims]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  ('hotshot.stats') will be sensed and printed out by the vision framework's","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise NotImplementedError(\"Multi-scale GaborNodes cannot currently handle alpha channels\")","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#validAlpha = inputs['validAlphaIn'][0].array()[:, numpy.newaxis] * (1.0\/255.0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# See if we can use the cached values from the last bottom up compute. For better performance,","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  we only perform the cache checking when we know we might have top down computes.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:(\"not None\" if (self._topDownCombiner is not None) else \"None\")) +","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# No need to copy to the node outputs, they should be the same as last time.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# IMPORTANT: When using the pipeline scheduler, you MUST write to the output buffer","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  each time because there are 2 output buffers.  But, we know that for feedback","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  networks, the pipleline scheduler cannot and will not be used, so it's OK to","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:buOutput = self.response.reshape(self._inputSplitter.shape[0], self._numPlanes)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:imageSet = self._responseImages[self._getResponseKey(preSuppression=False)]['bottomUp']","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:self._imageCounter,","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:scale, orientCode)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:outputVector = numpy.zeros((outHeight, outWidth, self._numPlanes), dtype=RealNumpyDType)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:self._doGabor(inputVector, bbox, imageBox, outputVector, scaleIndex, offImagePixelValue)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:outputVector = outputVector.reshape(outWidth * outHeight, self._numPlanes).flatten()","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:img.putdata((gain * 255.0 * response[:stopNodeIdx-startNodeIdx, responseIdx]).astype(numpy.uint8))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:img.putdata((gain * 255.0 * response[:stopNodeIdx-startNodeIdx, orientation]).astype(numpy.uint8))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param rfMask -- a 2-dimensional numpy array (of same shape as 'inputPyramid')","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:that contains a value of 0.0 for every element that corresponds","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:to a padded \"dummy\" (sentinel) value within 'inputPyramid', and","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:'inputPyramid') containing the total number of real (non-dummy)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseRectified = numpy.concatenate((responseRaw.clip(min=0.0, max=effectiveInfinity),","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:(-responseRaw).clip(min=0.0, max=effectiveInfinity)),","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseStats += [responseToUse[startOffset:stopOffset].max(axis=0)[numpy.newaxis, :]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseStats += [responseToUse[startOffset:stopOffset].mean(axis=0)[numpy.newaxis, :]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseStats = numpy.array(responseStats).reshape(numLayers, self._numPlanes)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseStats = responseStats[numpy.newaxis, :] * numpy.ones((numLayers, 1))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseStats = responseStats[:, numpy.newaxis] * numpy.ones((1, self._numPlanes))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:gain = self._gainConstant * numpy.ones((numLayers, self._numPlanes), dtype=RealNumpyDType)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:thisResponse = responseRectified[startOffset:stopOffset, :] * gainToUse","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:responseAmplified = numpy.concatenate((responseAmplified, thisResponse), axis=0)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# suppressionFactor = ((validX * validY) >= self._validitySuppressionLow).astype(RealNumpyDType)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:meanResponse += [response[startOffset:stopOffset].mean(axis=0)[numpy.newaxis, :]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:maxResponse += [response[startOffset:stopOffset].max(axis=0)[numpy.newaxis, :]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:stddevResponse += [response[startOffset:stopOffset].std(axis=0)[numpy.newaxis, :]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:meanPower += [power[startOffset:stopOffset].mean(axis=0)[numpy.newaxis, :]]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:stddevResponse = numpy.array(stddevResponse).reshape(numLayers, self._numPlanes)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param tdInput -- a 3D array containing the top-down inputs to each baby node.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:Think of this as N 2D arrays, where N is the number of baby nodes.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:Each baby node's 2D array has R rows, where each row is the top-down","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:output from one of the parents. The width of each row is equal to the","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:has only 2 parents, but R is 5 for example, then the last 3 rows","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:of the 2D array will contain all 0's. The tdNumParents argument","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:can be referenced to find out how many parents the node actually has.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:The tdInput array is structured in this manner to make it easy to","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:sum the contributions from the parents. All the sub-class needs to","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param tdNumParents a vector whose length is equal to the number of baby nodes. Each","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param buInput -- a 2D array containing the bottom-up inputs to each baby node.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:This is the same input that is passed to the _doCompute() method,","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:@param buOutput -- a 2D array containing the results of the bottomUp compute for","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:this node. This is a copy of the return value returned from the","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:tdOutput -- a 2-D numpy array containing the outputs from each baby node. Each","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# NOTE: Making this a float32 makes the copy to the node outputs at the end of","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#     print \"Top-down infer called on a Gabor node.  Use breakpoint to step through\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:assert self._numPlanes == numOrients # Number of filters must match top-down input","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  sparsified it's inputs and only saves one orientation from each complex node.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# But, for the Gabor node which is at the bottom of the hierarchy, it makes more","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  each gabor covers only a few pixels and won't select one object from another.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:if 'tdThreshold' in version: # Use tdInput_avg to threshold bottomUp outputs","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:self._genResponseImages(self.tdInput, preSuppression=False, phase='topDown')","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# Generate the topDown outputs. At this point, tdMaxes contains the max gabor orientation","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  output from each baby node. We will simply \"spread\" this value across all of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  topDown outputs for each baby node as an indication of their input activation level.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# In a perfect world, you would try and reconstruct the input by summing the inverse of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  gabor operation for each output orientation. But, for now, we are only using the top","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:#  down output of the Gabor as an indication of the relative input strength to each gabor","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# Save the maxTopDownOut for each baby node so that it can be returned as a read-only","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# parameter. This provides faster performance for things like the top down image inspector","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:inputLen == self._inWidth * self._inHeight * len(self._inputPyramidTopology):","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:cv.Dilate(self._morphHeader, self._morphHeader, iterations=halfFilterDim)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:int(self._inHeight)), 32, 1)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# Assemble the bounding box by converting 'validPyramid' from float (0,1) to integer (O,N)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:bbox = numpy.round((validPyramid * numpy.array([inWidth, inHeight, inWidth, inHeight],","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# We'll only subtract enough padding if we have a non-trivlal bounding box.","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# In other words, if our validRegionIn is [0, 25, 200, 175] for input image","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# dimensions of [0, 0, 200, 200], then we will assume that two horizontal strips","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# such artificial vertical strips were added.  So we don't need to erode the","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:self._saveImage(buf, \"%s.buffer.out.%02d.%02d.png\" % (outPrefix, scaleIndex, k))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:img.putdata( ((254.9 * imgArray.flatten()).clip(min=0.0, max=255.0)).astype(numpy.uint8) )","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError, \"phase must be either 'bottomUp', 'topDown', or 'combined'\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:scaleSet = [imageSet[orientIdx][scaleIdx] for orientIdx in xrange(self._numPlanes)]","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:gaborBank = numpy.concatenate((gaborBank, centerSurround[numpy.newaxis,:,:]))","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell - 1])","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell + 1])","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:offsets = means.repeat(self._filterDim, axis=1).repeat(self._filterDim, axis=2)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:squareSums = (gaborBank * gaborBank).sum(axis=2).sum(axis=1).reshape(numGaborFilters, 1, 1)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:# Store the Gabor Bank as a transposed set of 'numOrients' 1-D column-vectors","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:self._gaborBank = (gaborBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:perPlaneNormalization=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:perPhaseNormalization=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:postProcessingSlope=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:line-too-long:postProcessingCenter=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"11:src\/regions\/extra\/GaborNode2.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/FillBackground.py:line-too-long:# ---------------------------------------------------------------------------","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/FillBackground.py:line-too-long:backgroundColor=self.background, blurRadius=self._blurRadius,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:def __init__(self, xsize, ysize, c, preserveCenterResolution=False, Debug=False):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:@param preserveCenterResolution -- if True, the resolution of the center of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:data structures for debugging (deltaxmat, deltaymat, scales).","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:self._makeKernel(self._xsize, self._ysize, self._c, Debug=self._debug, Save=False)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# See if we need to re-compute our clipped, flattened kernel, which depends on the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Convert our kernel matrix center to the center of the input image, and mark indicies","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:kxBig = self._ceilFoor(self._kernelx, img.size[1], None, Mirror).astype('int')","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:kyBig = self._ceilFoor(self._kernely, img.size[0], None, Mirror).astype('int')","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# When preserving the resolution at the edges, we make the output image size the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:#  same as the input image size. So, when the input image size is smaller than our","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Convert our kernel to indices into the flattened array of the input image.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Convert all negative indices (sentinels) to reference the last element of the data","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:Center our kernel matrix around the center of the given input image and ensure that","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:the kernel matrix does not try to access pixels outside the input data array.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Mark the indices that go outside the source image with a sentinel, we will use these as","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:raise ValueError(\"Mat shape %s must be >= (xsize=%i,ysize=%i)\" %(str(mat.shape), xsize,ysize))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:useful for debugging (deltaxmat, deltaymat, scales).  Save determines whether","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Are we preserving the center resolution? If so, compute the factor required","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:scale = scaleFactor * k * (numpy.exp(c*hypot\/hypotmax)-1) \/ (hypot\/hypotmax)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Compute the optimim input image size so that the output image fills the self._xsize,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:print \"LogPolar Filter: Optimum input image size for this value of c (%f)\" % (c), \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell - 1])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell + 1])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:offsets = means.repeat(self._filterDim, axis=1).repeat(self._filterDim, axis=2)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:squareSums = (gaborBank * gaborBank).sum(axis=2).sum(axis=1).reshape(numGaborFilters, 1, 1)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:# Store the Gabor Bank as a transposed set of 'numOrients' 1-D column-vectors","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:self._filterBank = (gaborBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/GaborConvolution.py:too-many-arguments:def __init__(self,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:#data = (self._gainConstant * 255.0 * response[:,i]).clip(min=0.0, max=255.0).astype(numpy.uint8)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:data = (255.0 * response[:,i]).clip(min=0.0, max=255.0).astype(numpy.uint8)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:#self._buffers = [numpy.zeros(inputDim, dtype=numpy.int32) for inputDim in inputDims]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:testImage = numpy.ones((self._filterDim, self._filterDim), dtype=numpy.float32) * 255.0","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:maxShiftedResponse = maxRawResponse \/ (255.0 * float(self._integerMathScale))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:lutInputs = numpy.array(range(numLutBins), dtype=numpy.float32) \/ postProcScalar","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:offset = 1.0 \/ (1.0 + numpy.exp(self._postProcessingSlope * self._postProcessingCenter))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:comboLut = numpy.concatenate((numpy.fliplr(postProcLUT[numpy.newaxis,:]),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:postProcLUT[numpy.newaxis,:]),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:postProcLUT = numpy.concatenate((comboLut, comboLut), axis=1).reshape(4*numLutBins)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:libPath = os.path.join(nupicRoot, libSubDir, \"%s.%s\" % (libraryName, extension))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# Assemble the bounding box by converting 'validPyramid' from float (0,1) to integer (O,N)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:bbox = numpy.round((validPyramid * numpy.array([inWidth, inHeight, inWidth, inHeight],","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# We'll only subtract enough padding if we have a non-trivlal bounding box.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# In other words, if our validRegionIn is [0, 25, 200, 175] for input image","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# dimensions of [0, 0, 200, 200], then we will assume that two horizontal strips","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# such artificial vertical strips were added.  So we don't need to erode the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# THINK OF A SAFE WAY TO MAKE SURE C ENUMS ARE SYNCHED WITH PYTHON SYMBOLIC NAMES (UNIT TEST, AUTP PARSING,...)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:# The srcBox is the correct aspect ratio, and either taller or wider than the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:croppedImage.putalpha(Image.new(mode='L', size=croppedImage.size, color=255))","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:scaledImage = croppedImage.resize((int(round(scaleFactor * croppedImage.size[0])),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:int(round(scaleFactor * croppedImage.size[1]))),","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:newImage = Image.new(mode='LA', size=(targetWidth, targetHeight), color=fillValue)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Lines.py:line-too-long:@param difficulty -- Value between 0.0 and 1.0 that controls how many lines to add in image.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/ScaleToFit.py:line-too-long:def __init__(self, width, height, scaleHeightTo=None, scaleWidthTo=None, pad=False):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:Adds brightness using one of three gradient types (horizontal, vertical, and circular) with random intensity controlled by difficulty.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:@param difficulty -- Value between 0.0 and 1.0 that controls the intensity of the gradient applied.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:opacity = self.difficulty - self.difficulty*.2 + self.random.random()*self.difficulty*.2","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:gradientArray[i][j] = int(float(j)\/image.size[0]*255\/opacity)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:gradientArray[i][j] = int(float(i)\/image.size[1]*255\/opacity)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:gradientArray[i][j] = int(math.sqrt((i - image.size[1]\/2)**2 + (j - image.size[0]\/2)**2)\/math.sqrt((image.size[1]\/2)**2 + (image.size[0]\/2)**2)*255\/opacity)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ToCenterSweep.py:line-too-long:This explorer sweeps each image to the left until it reaches the center position.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ToCenterSweep.py:line-too-long:If the stepsize is greater than 1, then each 'x' in the diagrams above will be","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:jumpOffObject:      Whether the sensor can only include a part of the object,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:should dwell on one image before moving on to the next one.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:xOffset = self.random.randint(-(self.spaceShape[1]\/\/2), self.spaceShape[1]\/\/2)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:yOffset = self.random.randint(-(self.spaceShape[0]\/\/2), self.spaceShape[0]\/\/2)","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:The image is first swept horizontally left to right, and then vertically top to","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:bottom. This order of sweeping makes it easier to debug translation effects in the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:If the stepsize is greater than 1, then each 'x' in the diagrams above will be","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:separated by 'stepsize' pixels. The 'radius' must always be a multiple of 'stepsize'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:By default, the inner circle starts at a radius of stepsize. If minradius is set,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:it defines the smallest circle radius. 'minradius' must also be a multiple of 'stepsize'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:If includeCenter is True, the center location will be included. By default it is not.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:SpiralSweep.__init__(self, radius=radius, stepsize=stepsize, minradius=minradius,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:line-too-long:* self._rng.choice(xrange(self._minVelocity, self._maxVelocity + 1))","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:line-too-long:velocityX, velocityY = self._rng.choice([(-1, -1), (-1, 1), (1, -1), (1, 1)])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RandomFlash.py:line-too-long:#catPopulation[catIndex] = len([c for c in categoryIndex if c == catIndex])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/RandomFlash.py:line-too-long:imagesByCat[catIndex] = [k for k, c in enumerate(categoryIndex) if c == catIndex]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:if radius is 2, then the movements include another circle of pixels around the first set:","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:If the stepsize is greater than 1, then each 'x' in the diagrams above will be","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:separated by 'stepsize' pixels. The 'radius' must always be a multiple of 'stepsize'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:By default, the inner circle starts at a radius of stepsize. If minradius is set,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:it defines the smallest circle radius. 'minradius' must also be a multiple of 'stepsize'","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:If includeCenter is True, the center location will be included. By default it is not.","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:line-too-long:self.position['saliencySize'] = (self.currentSaliencySizes[self.pointIndex][0] \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:line-too-long:self.currentSaliencySizes[self.pointIndex][1] \\","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:line-too-long:self.position['saliencySize'] = self.currentSaliencySizes[self.pointIndex]","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/Jiggle.py:line-too-long:This explorer jiggles the image around each possible location within a specified","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/Jiggle.py:line-too-long:if DEBUG >= 2: print \"already performed jiggle\", jiggleIndex, \", skipping\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/Jiggle.py:line-too-long:(jiggleIndex, offset) = nextJiggle(location, jiggleIndex, gJiggleOffsets,","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:stepSize=1, resetEveryPos=False, verbosity=0, *args, **kwargs):","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:*both* the spacing of the center-points within the block and the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:When spreadRadius is used to define the spread shape, then it will","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:raise RuntimeError (\"When spreadShape is used, spreadRadius must be set to None\")","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:raise RuntimeError(\"'spreadShape' should be a 2-item tuple specifying the\"","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:result = len(filteredImages) * self._numCenterOffsets * self._numSpreadOffsets","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:self.position['offset'][1] = self._home[1] - (centerOffset[0] + spreadOffset[0])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:self.position['offset'][0] = self._home[0] - (centerOffset[1] + spreadOffset[1])","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BlockSpread.py:too-many-nested-blocks:if self._spreadShape is not None:","count":4,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:line-too-long:The sensor will take care of dealing with this - nothing special needs to be","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:line-too-long:will sweep until all of the object moves off the sensor. If set to a floating","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:line-too-long:point number between 0 and 1, then it will sweep until that fraction of the","count":2,"result_id":2089},{"warning":"11:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:line-too-long:raise RuntimeError(\"'sweepOffObject' should be a boolean, or floating point\"","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opftaskdriver.py:line-too-long:#      the current phase in the iteration cycle and the requested inference types.","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opftaskdriver.py:line-too-long:corresponds to a single OPFTaskDriver.handleInputRecord() call.","count":6,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opftaskdriver.py:line-too-long:taskControl:  dictionary conforming to opfTaskControlSchema.json that defines","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opftaskdriver.py:line-too-long:\"\"\" Processes the given record according to the current iteration cycle phase","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfenvironment.py:line-too-long:\"\"\" This class defines the interface for OPF prediction logger implementations.","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/previousvaluemodel.py:line-too-long:assert False, \"Previous Value Model only works for next step or multi-step.\"","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/previousvaluemodel.py:line-too-long:results.inferences = { opfutils.InferenceElement.multiStepBestPredictions : \\","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/previousvaluemodel.py:line-too-long:dict((steps, {inputRecord[self._predictedField] : 1}) \\","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/predictionmetricsmanager.py:line-too-long:#      (pprint.pformat(results.rawInput), pprint.pformat(results.inferences))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/model.py:line-too-long:###############################################################################","count":8,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/model.py:line-too-long:pre-existing directory will only be accepted if it contains previously","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/model.py:line-too-long:\" checkpoint -- refusing to delete (not a directory)\") \\","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/model.py:line-too-long:self._serializeExtraData(extraDataDir=self._getModelExtraDataDir(saveModelDir))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfutils.py:line-too-long:TEMPORAL. That is, a temporal model CAN have non-temporal inference elements,","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfutils.py:line-too-long:__slots__ = (\"dataRow\", \"dataDict\", \"dataEncodings\", \"sequenceReset\", \"category\")","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfutils.py:line-too-long:#                      binary representation of the corresponding predicted field","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfutils.py:line-too-long:#              which corresponds to the type of prediction being made. Each value","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfutils.py:line-too-long:\"metrics\", \"predictedFieldIdx\", \"predictedFieldName\", \"classifierInput\")","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfhelpers.py:line-too-long:if not isinstance(mod.descriptionInterface, expdescriptionapi.DescriptionIface):","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionapi.py:line-too-long:\"\"\" Returns the model creation parameters based on the settings in the config","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionapi.py:line-too-long:iterationCycle = [IterationPhaseSpecInferOnly(1000, inferenceArgs=inferenceArgs)]","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionapi.py:line-too-long:-iterationCountInferOnly, inferenceArgs=inferenceArgs),","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionapi.py:line-too-long:IterationPhaseSpecInferOnly(iterationCountInferOnly, inferenceArgs=inferenceArgs)]","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionapi.py:line-too-long:iterationCycle = [IterationPhaseSpecLearnAndInfer(1000, inferenceArgs=inferenceArgs)]","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:self.__outputFieldsMeta.extend(self.__getDictMetaInfo(inferenceElement,","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:self.__outputFieldsMeta.append(FieldMetaInfo(name=inferenceLabel+\".actual\",","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:print \"Prediction field-meta: %r\" % ([tuple(i) for i in self.__outputFieldsMeta],)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:print \"Empty record checkpoint initializer for %r\" % (self.__datasetPath,)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:TODO: Right now we assume list inferences are associated with the input field","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:#print \"DEBUG: _BasicPredictionWriter: writing modelResult: %r\" % (modelResult,)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:# -----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/opfbasicenvironment.py:line-too-long:#  dir = os.path.expanduser('~\/nupic\/trunk\/examples\/opf\/experiments\/opfrunexperiment_test\/base')","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel_classifier_helper.py:line-too-long:self.clamodel._getSPRegion().getSelf().getParameter('numActiveColumnsPerInhArea')","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:# Save the path to the current sub-experiment here during importBaseDescription()","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:# Lazy evaluators (DeferredDictLookup, applyValueGettersToContainer, and friends)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:This solves the problem of referencing the config dictionary's field from within","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:that terminates once the value is fully resolved to a non-value-getter value.","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:Upon return, the value is fully resolved and cached, so subsequent calls will","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:\"class; base class MUST override handleGetValue()\")","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:corresonding to the first key name in dictKeyChain.  This may","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:when we desire to look up a dictionary value from a dictionary","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/expdescriptionhelpers.py:line-too-long:value = self.__referenceDict if self.__referenceDict is not None else topContainer","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:params:           Custom parameters dict for the metrics module's constructor","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:A Metrics module compares a prediction Y to corresponding ground truth X and returns a single","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:measure representing the \"goodness\" of the prediction. It is up to the implementation to","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:metric name is defined by the MetricIface implementation. stats is expected to contain further","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:information relevant to the given metric, for example the number of timesteps represented in","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:the current measurement. all stats are implementation defined, and \"stats\" can be None","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:#FIXME @abstractmethod - this should be marked abstract method and required to be implemented","count":4,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer, result):","count":4,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:self.accumulatedError = self.accumulate(groundTruth, predictions, accumulatedError)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:#  as the optimization metric for swarming, while having another metric without","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:self.accumulatedError, self.history, result)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:computes negative log-likelihood. Likelihood is the predicted probability of","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:the true data from a model. It is more powerful than metrics that only considers","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:the single best prediction (e.g. MSE) as it considers the entire probability","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:# a manually set minimum prediction probability so that the log(LL) doesn't blow up","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer, result = None):","count":12,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:metric, you would specify 'PassThruPredictions' as the 'errorMetric' parameter.","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:#def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer):","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:print \"groundTruth:\\n%s\\nPredictions:\\n%s\\n%s\\n\" % (groundTruth, prediction, self.getMetric())","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:if n >= self.elements or (n >= self.dataLength and not self.dataLength < 0):","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:self.evalError = partial(evalCustomErrorMetric, metricSpec.params[\"customExpr\"])","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:\"prediction\":prediction,\"record\":record})","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:print \"groundTruth:\\n%s\\nPredictions:\\n%s\\n%s\\n\" % (groundTruth, prediction,","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:print \"\\nencoding:%s\\nactual:%s\\nprevEncoding:%s\\nprediction:%s\\nmetric:%s\" % \\","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:print \"WARNING: Computation of this metric is disabled for the remainder of \" \\","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:#  we pass the probabilities in so that it can decide how best to deal with","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:aggErr = subErrorMetric.addInstance(groundTruth, stepPrediction, record, result)","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:\"iteration (%d): %s\" % (self._predictionSteps, self.steps, avgAggErr))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti cannot be constructed from metricSpec string! \"","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:@param window - (opt) window size for moving average, or None when disabled","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti requires 'weights' parameter as a [list of floats]\")","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti requires 'metrics' parameter as a [list of Metrics]\")","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:subResults = [m.addInstance(groundTruth, prediction, record) for m in self.metrics]","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/metrics.py:line-too-long:print \"IN=\",groundTruth,\" pred=\",prediction,\": w=\",self.weights[i],\" metric=\",self.metrics[i],\" value=\",m,\" err=\",err","count":2,"result_id":2089},{"warning":"11:src\/support\/feature_groups.py:line-too-long:Generally new features should be added to the DEVELOPMENT group and then migrated","count":2,"result_id":2089},{"warning":"11:src\/support\/features.py:line-too-long:This allows you to inline new features without branching files into file.py and","count":2,"result_id":2089},{"warning":"11:src\/support\/features.py:line-too-long:Returns a list of all known features (essentially the contents of feature_list.py)","count":2,"result_id":2089},{"warning":"11:src\/support\/decorators.py:line-too-long:_retry = retry(timeoutSec=300, initialRetryDelaySec=0.2, maxRetryDelaySec=10,","count":2,"result_id":2089},{"warning":"11:src\/support\/features_list.py:line-too-long:'description': 'This feature must exist for all environments for Nupic to run',","count":2,"result_id":2089},{"warning":"11:src\/support\/features_list.py:line-too-long:raise Exception('Field \"%s\" is required. Feature: %s' % (field, str(feature)))","count":2,"result_id":2089},{"warning":"11:src\/support\/datafiles.py:line-too-long:\"contain a single number of columns. Found '%s'\" % csplit[0])","count":2,"result_id":2089},{"warning":"11:src\/support\/datafiles.py:line-too-long:def processCategoryFile(f, format, categoryColumn=None, categoryColumns=None, count=1):","count":2,"result_id":2089},{"warning":"11:src\/support\/datafiles.py:line-too-long:count > 1 then 'count' categories (all identical) will","count":2,"result_id":2089},{"warning":"11:src\/support\/datafiles.py:line-too-long:aggregating explorers like EyeMovements where multiple","count":2,"result_id":2089},{"warning":"11:src\/support\/datafiles.py:line-too-long:will result in only one entry (all categories in a chunk","count":2,"result_id":2089},{"warning":"11:src\/support\/unittesthelpers\/testcasebase.py:line-too-long:options, remainingArgs = super(TestOptionParser, self).parse_args(args, values)","count":2,"result_id":2089},{"warning":"11:src\/math\/__init__.py:line-too-long:nupic.math is a package containing modules related to mathematical, probabilistic","count":2,"result_id":2089},{"warning":"11:src\/math\/__init__.py:line-too-long:Because of this, some calling conventions may more closely reflect the underlying","count":2,"result_id":2089},{"warning":"11:src\/math\/__init__.py:line-too-long:\"SparseMatrix\", \"SparseTensor\", \"TensorIndex\", \"Domain\", \"choose\", \"logChoose\"]","count":2,"result_id":2089},{"warning":"11:src\/math\/__init__.py:line-too-long:\"pickByDistribution\", \"ConditionalProbabilityTable2D\", \"MultiIndicator\", \"Indicator\"])","count":2,"result_id":2089},{"warning":"11:src\/math\/stats.py:line-too-long:#Update means 0 and 2, the other should stay at zero! (Change this for general purpose k-means)","count":2,"result_id":2089},{"warning":"11:src\/math\/stats.py:line-too-long:dMeans[0] = numpy.nansum((numpy.array(endDeg)**fuzzParam)*numpy.array(samples))\/numpy.nansum(numpy.array(endDeg)**fuzzParam)","count":2,"result_id":2089},{"warning":"11:src\/math\/stats.py:line-too-long:dMeans[1] = numpy.nansum((numpy.array(midDeg)**fuzzParam)*numpy.array(samples))\/numpy.nansum(numpy.array(midDeg)**fuzzParam)","count":2,"result_id":2089},{"warning":"11:src\/math\/stats.py:line-too-long:dMeans[2] = numpy.nansum((numpy.array(begDeg)**fuzzParam)*numpy.array(samples))\/numpy.nansum(numpy.array(begDeg)**fuzzParam)","count":2,"result_id":2089},{"warning":"11:src\/math\/dist.py:line-too-long:if key in self.keyMap: return numpy.log(self.pmf[self.keyMap[key]] * self.scale)","count":2,"result_id":2089},{"warning":"11:src\/math\/dist.py:line-too-long:return numpy.exp( - self.lambdaParameter + self.logLambda * x - logFactorial(x) )","count":2,"result_id":2089},{"warning":"11:src\/math\/proposal.py:line-too-long:# sample, logForward, logBackward = propose(currentValue, randomNumberGenerator)","count":2,"result_id":2089},{"warning":"11:src\/math\/proposal.py:line-too-long:raise RuntimeError(\"Failed to sample in %d iterations.\" % self.maxIterations)","count":2,"result_id":2089},{"warning":"11:src\/math\/proposal.py:line-too-long:nextOdds = logit(estimateProportion(a + 1 - self.accepted.getEarliest(), b))","count":2,"result_id":2089},{"warning":"11:src\/math\/logarithms.py:line-too-long:(first dimension), then converts the sum back to log-space and returns the result.","count":2,"result_id":2089},{"warning":"11:src\/math\/logarithms.py:line-too-long:out[indicator1] = A[indicator1] + numpy.log1p(numpy.exp(B[indicator1]-A[indicator1]))","count":2,"result_id":2089},{"warning":"11:src\/math\/logarithms.py:line-too-long:out[indicator2]  = B[indicator2] + numpy.log1p(numpy.exp(A[indicator2]-B[indicator2]))","count":2,"result_id":2089},{"warning":"11:src\/math\/logarithms.py:line-too-long:\"\"\" returns log(exp(A) - exp(B)). A and B are numpy arrays. values in A should be","count":2,"result_id":2089},{"warning":"11:src\/math\/logarithms.py:line-too-long:assert indicator1.all(), \"Values in the first array should be greater than the values in the second\"","count":2,"result_id":2089},{"warning":"11:src\/math\/logarithms.py:line-too-long:out[indicator1] = A[indicator1] + numpy.log(1 - numpy.exp(B[indicator1]-A[indicator1]))","count":2,"result_id":2089},{"warning":"11:src\/math\/cross.py:line-too-long:From: http:\/\/book.opensourceproject.org.cn\/lamp\/python\/pythoncook2\/opensource\/0596007973\/pythoncook2-chp-19-sect-9.html","count":4,"result_id":2089},{"warning":"11:src\/math\/mvn.py:line-too-long:return -0.5 * ( n*(self.rank * log2pi + self.logDetSigma()) + numpy.sum(z*z) )","count":2,"result_id":2089},{"warning":"11:src\/math\/mvn.py:line-too-long:mean = self.mean1 + given_from_mean * self.Sigma22i * self.Sigma12.transpose()","count":2,"result_id":2089},{"warning":"11:src\/math\/mvn.py:line-too-long:varcov = self.Sigma11 - (self.Sigma12 * self.Sigma22i * (self.Sigma12.transpose()))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:if self._predictedFieldName is not None and self._classifierInputEncoder is not None:","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:bucketIdx = self._classifierInputEncoder.getBucketIndices(absoluteValue)[0]","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:predictionRow = copy.copy(sensor.getSelf().getOutputValues('temporalTopDownOut'))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:predictionFieldEncodings = sensor.getSelf().getOutputValues('temporalTopDownEncodings')","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:score = sp.getOutputData(\"anomalyScore\")[0] #TODO move from SP to Anomaly ?","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:inputValue=self._input[self._predictedFieldName])","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:compute logic through the CLA Classifier. It fills in the inference dict with","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:# The bucket index should be handled correctly by the underlying delta encoder","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:# Make the delta before any values have been seen 0 so that we do not mess up the","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:bucketLikelihood[self._classifierInputEncoder.getBucketIndices(k)[0]] = (","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:likelihoodsDict[k])","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:# The prediction history is a store of the previous best predicted values.","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:bucketLikelihoodOffset[self._classifierInputEncoder.getBucketIndices(k)[0]] = (","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:offsetDict[k])","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:# Push the current best delta to the history buffer for reconstructing the final delta","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepBucketLikelihoods][steps] = bucketLikelihoodOffset","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepPredictions][steps] = likelihoodsDict","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepBucketLikelihoods][steps] = bucketLikelihood","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:# Normal case, no delta encoder. Just plug in all our multi-step predictions","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:n.addRegion(\"sensor\", \"py.RecordSensor\", json.dumps(dict(verbosity=sensorParams['verbosity'])))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:n.addRegion(\"Classifier\", \"py.%s\" % str(clRegionName), json.dumps(clParams))","count":2,"result_id":2089},{"warning":"11:src\/frameworks\/opf\/clamodel.py:line-too-long:leafName = InferenceType.getLabel(self.getInferenceType()) + \"-network.nta\"","count":2,"result_id":2089},{"warning":"11:nupic\/swarming\/hypersearch\/experimentutils.py:line-too-long:TEMPORAL. That is, a temporal model CAN have non-temporal inference elements,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/experimentutils.py:line-too-long:#              which corresponds to the type of prediction being made. Each value","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:return \"\"\"# ----------------------------------------------------------------------","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:This is the first portion of every sub-experiment params file we generate. Between","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:This is the tail of every params file we generate. Between the head and the tail","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:retval:         list of keys from allReportKeys that match the regular expressions","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:optimizeKey:         Which report item, if any, we will be optimizing for. This can","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:also be a regular expression, but is an error if it matches","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:# Extract the report items that match the regular expressions passed in reportKeys","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:optimizeKey, jobsDAO, modelCheckpointGUID, logLevel=None, predictionCacheMaxRecords=None):","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/hypersearch\/utils.py:line-too-long:predictionCacheMaxRecords=predictionCacheMaxRecords)","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:variable or a scalar variable.  Mainly used for determining the appropriate","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:A list of template file names; these files are assumed to be in","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:encoder = dict(type='ScalarSpaceEncoder', name=fieldName, fieldname=fieldName,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:'__consumption_encoder': PermuteEncoder('consumption', 'AdaptiveScalarEncoder',","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:raise _ExpGeneratorException(\"Illegal character %s in field %r\"  %(c, encoderDict['name']))","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:# If the \"uber\" metric 'MultiStep' was specified, then plug in TemporalMultiStep","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:raise _InvalidCommandArgException(\"Invalid environment type %s\"% environment)","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateV1.tpl'],permutationsPyPath,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateEnsemble.tpl'],permutationsPyPath,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateFileFromTemplates(['permutationsTemplateV2.tpl'],permutationsPyPath,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:for ptrn in options['loggedMetrics']]))","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:metricSpec, metricLabel =_generateMetricSpecString(field=predictedFieldName,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:inferenceElement=InferenceElement.prediction,","count":3,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":trivialErrorMetric,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                            inferenceElement=InferenceElement.encodings,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                                          \"errorMetric\":oneGramErrorMetric,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:#                                          'predictionField':predictedFieldName,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:_generateMetricSpecString(inferenceElement=InferenceElement.classification,","count":4,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":trivialErrorMetric})","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:\"errorMetric\":oneGramErrorMetric})","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:inferenceElement=InferenceElement.classification,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:line-too-long:parser.set_usage(\"%prog [options] --description='{json object with args}'\\n\" + \\","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:too-many-locals:def _generateExperiment(options, outputDirPath, hsVersion,","count":1,"result_id":2088},{"warning":"11:nupic\/swarming\/exp_generator\/ExpGenerator.py:too-many-statements:def _generateExperiment(options, outputDirPath, hsVersion,","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param activationThreshold       (int)   If the number of active connected synapses on a segment is at least this threshold, the segment is said to be active.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param initialPermanence         (float) Initial permanence of a new synapse.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param connectedPermanence       (float) If the permanence value for a synapse is greater than this value, it is said to be connected.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param minThreshold              (int)   If the number of synapses active on a segment is at least this threshold, it is selected as the best matching cell in a bursting column.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param maxNewSynapseCount        (int)   The maximum number of synapses added to a segment during learning.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param permanenceIncrement       (float) Amount by which permanences of synapses are incremented during learning.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param permanenceDecrement       (float) Amount by which permanences of synapses are decremented during learning.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param predictedSegmentDecrement (float) Amount by which active permanences of synapses of previously predicted but inactive segments are decremented.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param seed                      (int)   Seed for the random number generator.","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param predictedActiveColumns          (set)         Indices of predicted => active columns in `t`","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:@param predictedInactiveCells       (set)         Indices of predicted inactive cells","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:isPredictedInactiveCell = connections.cellForSegment(segment) in predictedInactiveCells","count":1,"result_id":2088},{"warning":"11:nupic\/research\/temporal_memory.py:line-too-long:if abs(self.predictedSegmentDecrement - other.predictedSegmentDecrement) > EPSILON:","count":1,"result_id":2088},{"warning":"11:nupic\/research\/spatial_pooler.py:line-too-long:@param dutyCycles: An array containing one or more duty cycle values that need","count":1,"result_id":2088},{"warning":"11:nupic\/research\/spatial_pooler.py:line-too-long:@param columnIndex: The index identifying a column in the permanence, potential","count":3,"result_id":2088},{"warning":"11:nupic\/research\/spatial_pooler.py:line-too-long:@param dimensions: An array containing a dimensions for the column space. A 2x3","count":3,"result_id":2088},{"warning":"11:nupic\/data\/generators\/distributions.py:line-too-long:nextVal = self.amplitude*np.sin(2*pi*(self.period)*self.valueNum*(pi\/180) - \\","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/distributions.py:line-too-long:description = dict(name='SineWave', period=self.period, amplitude=self.amplitude, \\","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:assert all(x in field for x in ['name', 'fieldSpec', 'encoderParams'] for field \\","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:self.addField(spec.pop('name'), spec.pop('fieldSpec'), spec.pop('encoderParams'))","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:fields:       An object of the class field that specifies the characteristics","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:toBeAdded:     Whether the encodings corresponding to the record are added to","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:encoding = np.concatenate([field.encoder.encode(SENTINEL_VALUE_FOR_MISSING_DATA)\\","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:if field.isPredictedField else field.encodings[n] for field in self.fields])","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:raise RuntimeError('At least one of dataType and encoderType must be specified')","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:self.encoderType, numRecords=self.numRecords, numEncodings=self.numEncodings)","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:self.encoder=adaptivescalar.AdaptiveScalarEncoder(name='AdaptiveScalarEncoder',\\","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:w=self.w, n=self.n, minval=self.minval, maxval=self.maxval, periodic=False, forced=True)","count":1,"result_id":2088},{"warning":"11:nupic\/data\/generators\/data_generator.py:line-too-long:raise RuntimeError('Error in constructing class object. Either encoder type'","count":1,"result_id":2088},{"warning":"11:nupic\/engine\/__init__.py:line-too-long:(\"nupic.regions.KNNAnomalyClassifierRegion\", \"KNNAnomalyClassifierRegion\"),","count":1,"result_id":2088},{"warning":"11:nupic\/engine\/__init__.py:line-too-long:Adds the module and class name for the region to the list of classes the network can use","count":1,"result_id":2088},{"warning":"11:nupic\/engine\/__init__.py:line-too-long:engine.Network.registerPyRegion(regionClass.__module__, regionClass.__name__)","count":1,"result_id":2088},{"warning":"11:nupic\/encoders\/scalar.py:line-too-long:raise ValueError(\"Only one of n\/radius\/resolution can be specified for a ScalarEncoder\")","count":1,"result_id":2088},{"warning":"11:nupic\/encoders\/scalar.py:line-too-long:raise ValueError(\"Only one of radius\/resolution can be specified for a ScalarEncoder\")","count":1,"result_id":2088},{"warning":"11:nupic\/encoders\/multi.py:line-too-long:and to parts seperately taken care of by the ScalarEncoder with the specified parameters.","count":1,"result_id":2088},{"warning":"11:nupic\/encoders\/multi.py:line-too-long:The three seperate encodings are then merged together to the final vector, in such a way that","count":1,"result_id":2088},{"warning":"11:nupic\/regions\/SPRegion.py:line-too-long:SpatialPooler instance for the enitire level and does *not* support the concept","count":1,"result_id":2088},{"warning":"11:nupic\/regions\/SPRegion.py:line-too-long:from SpatialPooler. Thus, there are only a few hardcoded arguments in __init__,","count":1,"result_id":2088},{"warning":"11:nupic\/regions\/TPRegion.py:line-too-long:'py' or 'cpp'. The 'cpp' implementation is optimized for speed in C++.\"\"\",","count":1,"result_id":2088},{"warning":"11:nupic\/regions\/TPRegion.py:line-too-long:predictedState = self._tfdr.getPredictedState().reshape(-1).astype('float32')","count":1,"result_id":2088},{"warning":"11:nupic\/regions\/TPRegion.py:line-too-long:predictedActiveIndices = numpy.intersect1d(activeIndices, predictedIndices)","count":1,"result_id":2088},{"warning":"11:nupic\/regions\/extra\/GaborNode2.py:line-too-long:# The following parameters are for advanced configuration and unsupported at this time","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/model.py:line-too-long:pre-existing directory will only be accepted if it contains previously","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/opfutils.py:line-too-long:\"metrics\", \"predictedFieldIdx\", \"predictedFieldName\", \"classifierInput\")","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:#FIXME @abstractmethod - this should be marked abstract method and required to be implemented","count":2,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer, result):","count":2,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:self.accumulatedError, self.history, result)","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:computes negative log-likelihood. Likelihood is the predicted probability of","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:the true data from a model. It is more powerful than metrics that only considers","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:the single best prediction (e.g. MSE) as it considers the entire probability","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:# a manually set minimum prediction probability so that the log(LL) doesn't blow up","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:def accumulate(self, groundTruth, prediction, accumulatedError, historyBuffer, result = None):","count":6,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:aggErr = subErrorMetric.addInstance(groundTruth, stepPrediction, record, result)","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti cannot be constructed from metricSpec string! \"","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:@param window - (opt) window size for moving average, or None when disabled","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti requires 'weights' parameter as a [list of floats]\")","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:raise ValueError(\"MetricMulti requires 'metrics' parameter as a [list of Metrics]\")","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:subResults = [m.addInstance(groundTruth, prediction, record) for m in self.metrics]","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/metrics.py:line-too-long:print \"IN=\",groundTruth,\" pred=\",prediction,\": w=\",self.weights[i],\" metric=\",self.metrics[i],\" value=\",m,\" err=\",err","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:line-too-long:self.clamodel._getSPRegion().getSelf().getParameter('numActiveColumnsPerInhArea')","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:if self._predictedFieldName is not None and self._classifierInputEncoder is not None:","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:bucketIdx = self._classifierInputEncoder.getBucketIndices(absoluteValue)[0]","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:bucketLikelihood[self._classifierInputEncoder.getBucketIndices(k)[0]] = (","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:likelihoodsDict[k])","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:bucketLikelihoodOffset[self._classifierInputEncoder.getBucketIndices(k)[0]] = (","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:offsetDict[k])","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepBucketLikelihoods][steps] = bucketLikelihoodOffset","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepPredictions][steps] = likelihoodsDict","count":1,"result_id":2088},{"warning":"11:nupic\/frameworks\/opf\/clamodel.py:line-too-long:inferences[InferenceElement.multiStepBucketLikelihoods][steps] = bucketLikelihood","count":1,"result_id":2088},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:def createMask(imageIn, threshold=10, fillHoles=True, backgroundColor=255, blurRadius=0.0,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:Given an image, create a mask by locating the pixels that are not the backgroundColor","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:@param threshold  How far away from the backgroundColor a pixel must be to be included","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:@param fillHoles  If true, the inside of the mask will be filled in. This is useful if","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:@param blurRadius If set to some fraction > 0.0, then the edges of the mask will be blurred","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:using a blur radius which is this fraction of the image size.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:@param maskScale  If set to < 1.0, then the effective size of the object (the area where","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:amount. This can be useful when the outside of the object contains","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:some noise that you want to trim out and not include in the mask.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:@retval the mask as a PIL 'L' image, where 255 is areas that include the object, and 0","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:are areas that are background. If blurRadius is > 0, then it will","count":19,"result_id":2069},{"warning":"11:src\/nupic\/image\/__init__.py:line-too-long:also contain values between 0 and 255 which act as compositing values.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:line-too-long:state['posnX'], state['posnY'] = min(neighbors, key=lambda a: a[0]**2+a[1]**2)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:line-too-long:Must be overridden by sub-classes, and must not invoke this base class method.","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:line-too-long:* self._rng.choice(xrange(params['minVelocity'], params['maxVelocity'] + 1))","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:line-too-long:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/rotate.py:line-too-long:sequenceLength = 1 + int((params['maxAngularPosn'] - params['minAngularPosn'])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/rotate.py:line-too-long:state['catIndex'] = self._getIterCount() \/ (sequenceLength * params['numRepetitions'])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/rotate.py:line-too-long:seqIndex = self._getIterCount() % (sequenceLength * params['numRepetitions'])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/HorizontalBlock.py:line-too-long:posnX = ((blockCatIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:Generally, when using this explorer, you will want to issue a reset when, and only","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:when, you visit the next center-point. This makes it compatible with using the \"star\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:training mode of FDRTemporal. This will cause the FDRTemporal to learn that the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:line-too-long:numCategories * blockShape[0] * blockShape[1] * spreadShape[0] * spreadShape[1]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/block1DOF.py:line-too-long:posnX = ((blockCatIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:line-too-long:posnX = ((blockIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:line-too-long:posnY = ((blockIndex \/\/ edgeLen) - params['radialLength']) * params['radialStep']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:line-too-long:angularPosn = params['maxAngularPosn'] - params['minAngularVelocity'] * rotationIndex","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/random.py:line-too-long:Must be overridden by sub-classes, and must not invoke this base class method.","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/random.py:line-too-long:* self._rng.choice(xrange(params['minVelocity'], params['maxVelocity'] + 1))","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/random.py:line-too-long:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/block.py:line-too-long:posnX = ((blockCatIndex % edgeLen) - params['radialLength']) * params['radialStep']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/PictureSensorExplorers\/block.py:line-too-long:posnY = ((blockCatIndex \/\/ edgeLen) - params['radialLength']) * params['radialStep']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:# For black and white images, our doBackground pixels are 255 and our figure pixels","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:assert self.noiseThickness != 0, \"ImageSensor parameter noiseThickness cannot be 0\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:idxW = numpy.array([int(self.noiseThickness*i) for i in xrange(noiseArrayW)])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:idxH = numpy.array([int(self.noiseThickness*i) for i in xrange(noiseArrayH)])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:pixels2d[submatIdx] = (pixels2d[submatIdx]^thickNoise) | pixels2d[submatIdx]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:pixels2d[submatIdx] = (pixels2d[submatIdx]^thickNoise) & pixels2d[submatIdx]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:line-too-long:noise = numpy.random.random(len(pixels))  # get array of floats from 0 to 1","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:categoryOut -- The output element count of the 'categoryOut' output (NuPIC 1 only).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:resetOut -- The output element count of the 'resetOut' output (NuPIC 1 only).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:auxDataWidth -- The output element count of the 'auxData' output (NuPIC2 only).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:clearImageList=True, skipExplorerUpdate=False, auxPath=None, userAuxData=None,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:userAuxData=userAuxData, sequenceIndex=sequenceIndex, frameIndex=frameIndex)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:raise RuntimeError(\"Unable to get a list of files due to an OS error.\\nDirectory: \"+top+\"\\nThis may be due to an issue with Snow Leopard.\")","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:an offset to use for the purpose of skipping.  For example, if 'skipInterval'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:print \"ImageSensor: looking for data in NTA_DATA_DIR=%s\" % os.environ[\"NTA_DATA_DIR\"]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:hasRegex = False in [isTextRegex.match(r) is not None for r in categoryNameFilter]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:self.explorer[2].update(numImages=len(self._imageList), sequenceCount=sequenceInfo[-1][0], frameCount=len(self._imageList))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:# Account for holdFor as best we can. This won't be exact because it doesn't take into","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:stopIteration = self.getIterationFromSequence(sequenceIndex, self.getFrameCount(sequenceIndex)-1)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:return self._imageList[iteration]['sequenceIndex'], self._imageList[iteration]['frameIndex']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:def _loadImage(self, index, returnOriginal=False, setErodeFlag=True, userAuxData=None):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:item['auxData'] = numpy.concatenate([item['auxData'],numpy.fromfile(item['auxPath'][k])])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:assert (response[1] is None) # Only one post-filter can determine raw_output","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:imageToFilter.info['path'] = self._imageList[position['image']]['imagePath']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:# Normally, the enabledSize is smaller than the sensor size. But, there are some","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#  configurations where the user might want to explore in a larger size, then run","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#  it through a post-filter to get the end sensor size (for example, when using a","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#  fish-eye post filter). If we detect that the enabledSize is greater than the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:self.bboxLogFile = open(os.path.join(self.logDir, 'imagesensor_bbox_log.txt'), 'w')","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:print >>self.bboxLogFile, '%d %d %d %d' % (bbox[0], bbox[1], bbox[2], bbox[3])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:auxData = [numpy.array(imageList['auxData']) for imageList in self._imageList]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Index of the leave-one-out partition associated with the current image.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the current output image(s) with the alpha channel.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:outputImage = deserializeImage(sensor.getParameter('outputImageWithAlpha'))\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the original, unfiltered version of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:originalImage = deserializeImage(sensor.getParameter('originalImage'))\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the current 'location image', which shows the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:locationImage = deserializeImage(sensor.getParameter('locationImage'))\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"List of filters to apply to each image. Each element in the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The position of the sensor from the *previous* compute, as a","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:True if that is not an issue and you wish to use a sweeping explorer.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Whether to overlay the location rectangle on the original image instead","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Serialized version of the current output image(s). If depth > 1,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:outputImage = deserializeImage(sensor.getParameter('outputImage'))\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for writing the intermediate versions of images to disk","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The number of elements in in the auxiliary data vector.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Name of file to which to write category number on each compute.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for writing an image to disk on each iteration which shows","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Dictionary of information for the image which will be used for the next","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Number of iterations necessary to fully explore all loaded images. Only","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Explorer (used to move the sensor through the input space).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"A list with a dictionary of information for each image that has","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:'automaskingTolerance' will produce tighter (smaller) bounding box masks.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The number of active elements in the dataOut output.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Maximum amount of memory that ImageSensor should use for storing images,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Name of the imagesensor log directory, which is created in the session","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:bundle if any logging options are enabled. Default is imagesensor_log.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Value of \"background\" pixels. May be used to pad images during sweeping,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:as well as to find the bounds of an object if no mask is available.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"The position of the sensor that will be used for the *next* compute,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"List of Auxiliary Data for every image in the image list\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Whether to invert the pixel values before sending an image to the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"A list with a tuple for each category that the sensor has learned. The","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:categoryInfo = deserializeCategoryInfo(sensor.getParameter('categoryInfo'))\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Dictionary of information for the image used during the previous compute.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for writing the original, unfiltered version of the current","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"'gray' (8-bit grayscale) or 'bw' (1-bit black and white).\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"Toggle for logging the bounding box information on each iteration.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"** DEPRECATED ** Whether to send a blank output every time the explorer","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"List of filters to apply to each image just before the image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:description=\"\"\"(alias for numIterations) Number of iterations necessary to fully explore","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:if you wish to get the number of iterations for a particular image.\"\"\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Index of the leave-one-out partition associated with the current image.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"useAux\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"'gray' (8-bit grayscale) or 'bw' (1-bit black and white).\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The number of active elements in the dataOut output.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Value of \"background\" pixels. May be used to pad images during sweeping,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        as well as to find the bounds of an object if no mask is available.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        specified 'background' pixel value.  The bounding box will enclose all","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        'automaskingTolerance' will produce tighter (smaller) bounding box masks.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        bounding box based on image similarity with respect to the background,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"invertOutput\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Whether to invert the pixel values before sending an image to the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        network. If invertOutput is enabled, a white object on a black background","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"List of filters to apply to each image. Each element in the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        list should be either a string (just the filter name) or a list containing","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"List of filters to apply to each image just before the image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        is sent to the network. Each element in the list should either be a string","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        (just the filter name) or a list containing both the filter name and a","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Explorer (used to move the sensor through the input space).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        Specify as a string (just the explorer name) or a list containing both the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Name of file to which to write category number on each compute.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logText\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for verbose logging to imagesensor_log.txt.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logOutputImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logOriginalImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for writing the original, unfiltered version of the current","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logFilteredImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for writing the intermediate versions of images to disk","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logLocationImages\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for writing an image to disk on each iteration which shows","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logLocationOnOriginalImage\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Whether to overlay the location rectangle on the original image instead","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        of the filtered image. Does not work if the two images do not have the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        same size, and may be nonsensical even if they do (for example, if a filter","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"logBoundingBox\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Toggle for logging the bounding box information on each iteration.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Name of the imagesensor log directory, which is created in the session","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        bundle if any logging options are enabled. Default is imagesensor_log.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Maximum amount of memory that ImageSensor should use for storing images,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        in megabytes. ImageSensor will unload images and filter outputs to stay beneath","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Number of iterations necessary to fully explore all loaded images. Only","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        some explorers support this. Use the getNumIterations command if you wish to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"(alias for numIterations) Number of iterations necessary to fully explore","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        all loaded images. Only some explorers support this. Use the getNumIterations command","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        if you wish to get the number of iterations for a particular image.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"blankWithReset\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"** DEPRECATED ** Whether to send a blank output every time the explorer","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        generates a reset signal (such as when beginning a new sweep). Turning","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The position of the sensor that will be used for the *next* compute,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The position of the sensor from the *previous* compute, as a","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        dictionary. Because \"outputImage\" and \"locationImage\" match the output of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        previous compute (not the upcoming one), they do not correlate with the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"A list with a dictionary of information for each image that has","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Dictionary of information for the image used during the previous compute.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Dictionary of information for the image which will be used for the next","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"A list with a tuple for each category that the sensor has learned. The","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        tuple contains the category name (i.e. 'dog') and a serialized version of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        categoryInfo = deserializeCategoryInfo(sensor.getParameter('categoryInfo'))\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the current output image(s). If depth > 1,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        multiple serialized images will be returned in a list. To deserialize:","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        outputImage = deserializeImage(sensor.getParameter('outputImage'))\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the current output image(s) with the alpha channel.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        If depth > 1, multiple serialized images will be returned in a list. To deserialize:","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        outputImage = deserializeImage(sensor.getParameter('outputImageWithAlpha'))\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the original, unfiltered version of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        originalImage = deserializeImage(sensor.getParameter('originalImage'))\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Serialized version of the current 'location image', which shows the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        position of the sensor overlaid on the filtered image (optionally, the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        locationImage = deserializeImage(sensor.getParameter('locationImage'))\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#      NodeSpecItem(name=\"minimalBoundingBox\", type=\"bool\", constraints=\"bool\", access=\"cgs\",","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#          image background should be set even if it touches one of the sides of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#          the image. Set to False to avoid chopping edges off certain images, or","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#          True if that is not an issue and you wish to use a sweeping explorer.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"The number of elements in in the auxiliary data vector.\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"List of Auxiliary Data for every image in the image list\"\"\"),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:line-too-long:#        description=\"\"\"Parameter that contains a dict of metadata for the most","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:too-many-arguments:def _init(self, width=1, height=1, depth=1, mode='gray',","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:too-many-nested-blocks:if useCategories:","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensor.py:too-many-nested-blocks:for category in categoryList:","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:orientations = numpy.array(range(orientationCount), dtype=RealNumpyDType) * \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:offsets = means.repeat(self._filterDim, axis=1).repeat(self._filterDim, axis=2)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:squareSums = (filterBank * filterBank).sum(axis=2).sum(axis=1).reshape(filterCount, 1, 1)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:line-too-long:self._filterBank = (filterBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:symmetric gabor filters that are generally selective to lines.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'raw'       Perform no post-processing. Outputs will be in (-1.0, +1.0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'abs'       Output is absolute value of raw response.  Output will","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'positive'  Clip negative raw response values to zero.  Output will lie","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'rectified' Output is square of input.  Output will lie in the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'power'     Positive raw responses are squared; negative raw responses","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:are clipped to zero.  Output will be in (0.0, +1.0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'hardFull'  Apply a hard threshold to the input; if raw response is","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:>= 'threshold', then output is 1.0, else output is -1.0.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'hardHalf'  Apply a hard threshold to the input; if raw response is","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:>= 'threshold', then output is 1.0, else output is 0.0.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'sigmoidFull': Apply a sigmoidal threshold function to the input using","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'threshold' and 'steepness'.  Output lies in (-1.0, +1.0).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'sigmoidHalf': Apply a sigmoidal threshold function to the input using","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'threshold' and 'steepness'.  Output lies in (0.0, +1.0).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'name': a human-meaningful name (primarily used for debugging purposes.)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:In addition, the following key is required if 'mode' is set to 'hardFull',","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'threshold': the threshold to use for either the hard ('hardFull' or 'hardHalf')","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:or soft ('sigmoidFull' or 'sigmoidHalf') thresholding post-processing modes.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:In addition, the following key is required if 'mode' is set to 'sigmoidFull'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'steepness': controls the steepness of the sigmoidal function that performs","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:separate responses, each computed from a single underlying Gabor filter.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:@param suppressLobes -- A boolean flag indicating whether or not the secondary","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:@param convolutionMethod -- Method to use for convolving filters with images.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'2D' is straightforward convolution of 2D filter with image.  Other options","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:are 'FFT' for convolution by multiplication in Fourier space, and '1D' for","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:convolution with two 1D filters formed from a separable 2D filter. '1D'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:print 'Gabor bank generated with %d filter pairs.' % len(self._gaborBankParams)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'counter'  - internal image counter, incremented for each new source image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'counter' - internal image counter, incremented for each new source image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:scaleDict[self._gaborBankParams[responseIndex][0]['scale']] += [(responseIndex,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:'image-%04d.composite-%02d.png' % (c['counter'], c['scale']))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:exponentialTerm = math.exp(exponentialConstant * (x0*x0 + aspectConstant*y0*y0))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:return [x[1] for x in self._suppressionRules() if x[0][0] == orientation and x[0][1] == phase][0]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:(numPosZones, numNegZones, deltaX, deltaY) = self._findSuppressionRules(orientation, phase)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:lobeFound = self._scanForLobes(filter, numPosZones, numNegZones, deltaX, deltaY,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:@param deltaX, deltaY -- The direction in which to proceed (either vertically,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:print 'Applying filter:  phase=%f  scale=%f  orient=%d' % (filterSpecs['phase'],","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:filterSpecs['scale'],","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:filterSpecs['orient'])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:response = self._postProcess(response, postProcessingMode, threshold, steepness)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:def _postProcess(self, preResponse, postProcessingMode, threshold=0.0, steepness=500.0):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:postResponse = 1.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:postResponse = (2.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)) - 1.0","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:# im.putdata(response.flatten(), scale=maxPixelVal * amplification, offset=0.0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:line-too-long:im = Image.fromarray(((response*maxPixelVal*amplification).clip(min=0, max=255.0)).astype(numpy.uint8))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:self._acceptOrCull(smoothX, strongZonesX, strongZone, minZoneLen, minStrength)","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:self._acceptOrCull(smoothY, strongZonesY, strongZoneY, minZoneLen, minStrength)","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#strongZonesAll.extend([(left, top, right, bottom) for (top, bottom) in strongZonesY])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:match = re.match(r\"^(?P<mnemonic>[a-z]+)\\.(?P<videoID>[0-9]{4})_sequence(?P<seqID>\\-?[0-9]{1,5})$\", imgPrefix)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:match = re.match(r\"^vid(?P<videoID>[0-9]{4})_seq(?P<seqID>\\-?[0-9]{3,4})$\", imgPrefix)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"ORIG (%3d, %3d, %3d, %3d) [%3dx%3d] ==> (%3d, %3d, %3d, %3d) [%3dx%3d]\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"WARNING: multiple (%d) split boxes...choosing biggest one...\" % len(strongZonesAll)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"WARNING: multiple (%d) split boxes...taking union...\" % len(strongZonesAll)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:#print \"%06d: (%3d, %3d, %3d, %3d) [%3dx%3d] ==> (%3d, %3d, %3d, %3d) [%3dx%3d]\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:def _acceptOrCull(self, strength, strongZones, candidateZone, minZoneLen, minStrength):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:This method is based on the convolution of a scaled window with the signal.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:window: the type of window from 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:numpy.hanning, numpy.hamming, numpy.bartlett, numpy.blackman, numpy.convolve","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:TODO: the window parameter could be the window itself if an array instead of a string","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:raise ValueError, \"Window is on of 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:# The srcBox is the correct aspect ratio, and either taller or wider than the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:croppedImage.putalpha(Image.new(mode='L', size=croppedImage.size, color=255))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:srcBox[3]-srcBox[1]), color=fillValue)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:line-too-long:scaledImage = newImage.resize((targetWidth, targetHeight), self._resizingFilter)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:too-many-arguments:def __init__(self,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:too-many-locals:def process(self, image):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:Applies a random combination of stretch and shear to the image, controlled by difficulty.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:@param difficulty -- Controls the amount of stretch and shear applied to the image.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:shear = self.difficulty*self.maxShear - self.difficulty*0.3 + self.difficulty*0.3*self.random.random()","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:squeeze = self.minSqueeze - (self.minSqueeze - self.maxSqueeze)*(self.difficulty - self.difficulty*0.3 + self.difficulty*0.3*self.random.random())","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), int((size[0] - squeeze*size[0])\/2), 0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), 0, int((size[1] - squeeze*size[1])\/2))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:retImage.paste(newImage, (0, int((image.size[1] - newImage.size[1])\/2.0)))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:line-too-long:retImage.paste(newImage, (0, int((image.size[0] - newImage.size[0])\/2.0)))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:line-too-long:Shifts the image histogram randomly in any direction, given a difficulty level.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:line-too-long:to shift the image histogram. The direction will be random, and a random offset will be added.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:line-too-long:offset = (offset - halfWindowSize) + halfWindowSize*self.random.random()*((-1)**self.random.randint(1, 2))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:# ---------------------------------------------------------------------------","count":76,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:bgImg = self.scaledBGImgs[idx] = self.bgImgs[idx].resize(image.size, Image.ANTIALIAS)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:backgroundColor=self.background, blurRadius=self._blurRadius,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:line-too-long:# Put an \"all-on\" alpha channel because we now want the network to consider the entire","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param numOrientations -- The number of gabor filter orientations to produce.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:The half-circle (180 degrees) of rotational angle will be evenly partitioned.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:Defaults to 4, which produces a gabor bank containing filters oriented","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param phaseMode -- The number of separate phases to compute per orientation.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:Valid values are: 'single' or 'dual'.  In 'single', responses to each such","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:orientation are rectified by absolutizing them; i.e., a 90-degree edge","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responses will be indistinguishable.  In \"dual\" mode, the responses to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:each orientation are rectified by clipping at zero, and then creating","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:a second output response by inverting the raw response and again clipping","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:90-degree-oriented plane, and a 270-degree edge will produce a response","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param centerSurround -- Controls whether an additional filter corresponding to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:If phaseMode is \"dual\", then a second \"center surround\" response plane","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:is added as well (the inverted version of the center-surround response.)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param targetType -- The preferred \"target\" of the gabor filters.  A value of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:'line' specifies that line detectors (peaks in the center and troughs","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:on either side) are to be used.  A value of 'edge' specifies that edge","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param gainConstant -- A multiplicative amplifier that is applied to the gabor","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:normalized on a per image (and per scale) basis.  Accepts the following","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param perPlaneNormalization -- Controls whether normalization (as specified by","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:'normalizationMethod') is applied globally across all response planes","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:(for a given scale), or individually to each response plane.  Default","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:is False.  Note: this parameter is ignored if normalizationMethod is \"fixed\".","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param perPhaseNormalization -- Controls whether normalization (as specified by","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingMethod -- Controls what type of post-processing (if any)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:\"raw\":       No post-processing is performed; final output values are","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:\"sigmoid\":   Passes normalized output values through a sigmoid function","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:parameterized by 'postProcessingSlope' and 'postProcessingCenter'.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:\"threshold\": Passes normalized output values through a piecewise linear","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:thresholding function parameterized by 'postProcessingMin'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingCenter -- Controls the center point of the sigmoid function","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingMin -- If 'postProcessingMethod' is set to 'threshold', all","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:normalized response values less than 'postProcessingMin' are suppressed to zero.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param postProcessingMax -- If 'postProcessingMethod' is set to 'threshold', all","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:normalized response values greater than 'postProcessingMax' are clamped to one.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param zeroThresholdOut -- if all outputs of a gabor node are below this threshold,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:they will all be driven to absolute 0. This is useful in conjunction with","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:using the product mode\/don't care spatial pooler which needs to know when","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param boundaryMode -- Controls how GaborNode deals with boundary effects.  Accepts","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:'constrained' -- Gabor responses are normally only computed for image locations","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:that are far enough from the edge of the input image so that the entire","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:filter mask fits within the input image.  Thus, the spatial dimensions of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:the output gabor maps will be smaller than the input image layers.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:'sweepOff' -- Gabor responses will be generated at every location within","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:the input image layer.  Thus, the spatial dimensions of the output gabor","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:maps will be identical to the spatial dimensions of the input image.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:For input image locations that are near the edge (i.e., a portion of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:the gabor filter extends off the edge of the input image), the values","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:of pixels that are off the edge of the image are taken to be as specifed","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param offImagePixelValue -- If 'boundaryMode' is set to 'sweepOff', then this","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:parameter specifies the value of the input pixel to use for \"filling\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param suppressOutsideBox -- If True, then gabor responses outside of the bounding","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:box (provided from the sensor) are suppressed.  Internally, the bounding","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:box is actually expanded by half the filter dimension (respecting the edge","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:of the image, of course) so that responses can be computed for all image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param forceBoxContraction -- Fine-tunes the behavior of bounding box suppression.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:If False (the default), then the bounding box will only be 'contracted'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:(by the half-width of the filter) in the dimenion(s) in which it is not","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:the entire span of the image.  If True, then the bounding box will be","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param suppressByAlpha -- A boolean that, if True, instructs GaborNode to use","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:the pixel-accurate alpha mask received on the input 'validAlphaIn' for","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param logPrefix -- If non-None, causes the response planes at each scale, and","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:for each input image, to be written to disk using the specified prefix","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:for the name of the log images.  Default is None (no such logging.)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# The following parameters are for advanced configuration and unsupported at this time","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_aspectRatio -- Controls how \"fat\" (i.e., how oriented) the Gabor","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 filters are.  A value of 1 would produce completely non-oriented","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 (circular) filters; smaller values will produce a more oriented","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 the Gaussian component of the Gabor filter.  Default is 4.5.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_wavelength -- Controls the frequency of the sinusoidal component","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_lobeSuppression -- Controls whether or not the secondary lobes of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 Gabor filters are suppressed.  The suppression is performed based","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 on the radial distance from the oriented edge to which the Gabor","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 filter is tuned.  If True, then the secondary lobes produced","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#                 Gabor equation (digitized into discrete sampling points, of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# @param nta_debugLogBuffers -- If enabled, causes internal memory buffers used","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'numOrients' has been deprecated and replaced with 'numOrientations'\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'numOrients' (%s) is inconsistent with 'numOrientations' (%s) and will be ignored\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'filterPhase' has been deprecated and replaced with 'targetType'\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'filterPhase' (%s) is inconsistent with 'targetType' (%s) and will be ignored\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'nta_edgeMode' has been deprecated and replaced with 'edgeMode'\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'nta_edgeMode' (%s) is inconsistent with 'edgeMode' (%s) and will be ignored\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'lateralInhibition' has been deprecated and will not be supported in future releases\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'validityShrinkage' has been deprecated and replaced with 'suppressOutsideBox'\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:print \"WARNING: 'validityShrinkage' (%s) is inconsistent with 'suppressOutsideBox' (%s) and will be ignored\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# It may change in the future when ImageSensor supports packed image pyramids","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be an odd integer >= %d; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be an integers >= %d; your value: %s\" % \\","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be one of %s; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a boolean; your value: %s\" % \\","count":152,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be one of %; your value: %s\" % \\","count":95,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer >= 0.0; your value: %s\" % \\","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer > 0.0; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer; your value: %s\" % \\","count":57,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:if value != 'colorKey' and (type(value) not in (int, float) or float(value) < 0.0 or float(value) > 255.0):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer between 0 and 255, or 'colorKey'; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a string; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float > 0.0; your value: %s\" % \\","count":57,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float >= 0 and <= 1; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:if type(value) not in [type(0), type(0.0)] or float(value) < 0.0 or float(value) > 1.0:","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError(\"Value error: '%s' must be a float or integer between 0 and 1; your value: %s\" % \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:self._genResponseImages(response, preSuppression=preSuppression, phase=whichDirection)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:if whichScale != 'all' and (type(whichScale) != type(0) or whichScale < 0 or whichScale >= numScales):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:\"'whichScale' must be 'all' or an integer between 0 and %d.\" % self._numScales","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:if type(whichResponse) != type(0) or whichResponse < 0 or whichResponse >= self._numPlanes:","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:\"'whichResponse' must be 'all' or an integer between 0 and %d.\" % self._numPlanes","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#self._buffers = [numpy.zeros(inputDim, dtype=numpy.int32) for inputDim in inputDims]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:testImage = numpy.ones((self._filterDim, self._filterDim), dtype=numpy.float32) * 255.0","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:maxShiftedResponse = maxRawResponse \/ (255.0 * float(self._integerMathScale))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:lutInputs = numpy.array(range(numLutBins), dtype=numpy.float32) \/ postProcScalar","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:offset = 1.0 \/ (1.0 + numpy.exp(self._postProcessingSlope * self._postProcessingCenter))","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:comboLut = numpy.concatenate((numpy.fliplr(postProcLUT[numpy.newaxis,:]),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:postProcLUT[numpy.newaxis,:]),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:postProcLUT = numpy.concatenate((comboLut, comboLut), axis=1).reshape(4*numLutBins)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#self._buffers = [numpy.zeros(inputDim, dtype=numpy.int32) for inputDim in self._inputDims]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  ('hotshot.stats') will be sensed and printed out by the vision framework's","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise NotImplementedError(\"Multi-scale GaborNodes cannot currently handle alpha channels\")","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#validAlpha = inputs['validAlphaIn'][0].array()[:, numpy.newaxis] * (1.0\/255.0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# See if we can use the cached values from the last bottom up compute. For better performance,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  we only perform the cache checking when we know we might have top down computes.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:(\"not None\" if (self._topDownCombiner is not None) else \"None\")) +","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# No need to copy to the node outputs, they should be the same as last time.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# IMPORTANT: When using the pipeline scheduler, you MUST write to the output buffer","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  each time because there are 2 output buffers.  But, we know that for feedback","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  networks, the pipleline scheduler cannot and will not be used, so it's OK to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:buOutput = self.response.reshape(self._inputSplitter.shape[0], self._numPlanes)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:imageSet = self._responseImages[self._getResponseKey(preSuppression=False)]['bottomUp']","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:self._imageCounter,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:scale, orientCode)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:outputVector = numpy.zeros((outHeight, outWidth, self._numPlanes), dtype=RealNumpyDType)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:self._doGabor(inputVector, bbox, imageBox, outputVector, scaleIndex, offImagePixelValue)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:outputVector = outputVector.reshape(outWidth * outHeight, self._numPlanes).flatten()","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:img.putdata((gain * 255.0 * response[:stopNodeIdx-startNodeIdx, responseIdx]).astype(numpy.uint8))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:img.putdata((gain * 255.0 * response[:stopNodeIdx-startNodeIdx, orientation]).astype(numpy.uint8))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param rfMask -- a 2-dimensional numpy array (of same shape as 'inputPyramid')","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:that contains a value of 0.0 for every element that corresponds","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:to a padded \"dummy\" (sentinel) value within 'inputPyramid', and","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:'inputPyramid') containing the total number of real (non-dummy)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseRectified = numpy.concatenate((responseRaw.clip(min=0.0, max=effectiveInfinity),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:(-responseRaw).clip(min=0.0, max=effectiveInfinity)),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseStats += [responseToUse[startOffset:stopOffset].max(axis=0)[numpy.newaxis, :]]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseStats += [responseToUse[startOffset:stopOffset].mean(axis=0)[numpy.newaxis, :]]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseStats = numpy.array(responseStats).reshape(numLayers, self._numPlanes)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseStats = responseStats[numpy.newaxis, :] * numpy.ones((numLayers, 1))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseStats = responseStats[:, numpy.newaxis] * numpy.ones((1, self._numPlanes))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:gain = self._gainConstant * numpy.ones((numLayers, self._numPlanes), dtype=RealNumpyDType)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:thisResponse = responseRectified[startOffset:stopOffset, :] * gainToUse","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:responseAmplified = numpy.concatenate((responseAmplified, thisResponse), axis=0)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# suppressionFactor = ((validX * validY) >= self._validitySuppressionLow).astype(RealNumpyDType)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:meanResponse += [response[startOffset:stopOffset].mean(axis=0)[numpy.newaxis, :]]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:maxResponse += [response[startOffset:stopOffset].max(axis=0)[numpy.newaxis, :]]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:stddevResponse += [response[startOffset:stopOffset].std(axis=0)[numpy.newaxis, :]]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:meanPower += [power[startOffset:stopOffset].mean(axis=0)[numpy.newaxis, :]]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:stddevResponse = numpy.array(stddevResponse).reshape(numLayers, self._numPlanes)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param tdInput -- a 3D array containing the top-down inputs to each baby node.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:Think of this as N 2D arrays, where N is the number of baby nodes.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:Each baby node's 2D array has R rows, where each row is the top-down","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:output from one of the parents. The width of each row is equal to the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:has only 2 parents, but R is 5 for example, then the last 3 rows","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:of the 2D array will contain all 0's. The tdNumParents argument","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:can be referenced to find out how many parents the node actually has.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:The tdInput array is structured in this manner to make it easy to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:sum the contributions from the parents. All the sub-class needs to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param tdNumParents a vector whose length is equal to the number of baby nodes. Each","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param buInput -- a 2D array containing the bottom-up inputs to each baby node.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:This is the same input that is passed to the _doCompute() method,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:@param buOutput -- a 2D array containing the results of the bottomUp compute for","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:this node. This is a copy of the return value returned from the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:tdOutput -- a 2-D numpy array containing the outputs from each baby node. Each","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# NOTE: Making this a float32 makes the copy to the node outputs at the end of","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#     print \"Top-down infer called on a Gabor node.  Use breakpoint to step through\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:assert self._numPlanes == numOrients # Number of filters must match top-down input","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  sparsified it's inputs and only saves one orientation from each complex node.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# But, for the Gabor node which is at the bottom of the hierarchy, it makes more","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  each gabor covers only a few pixels and won't select one object from another.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:if 'tdThreshold' in version: # Use tdInput_avg to threshold bottomUp outputs","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:self._genResponseImages(self.tdInput, preSuppression=False, phase='topDown')","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# Generate the topDown outputs. At this point, tdMaxes contains the max gabor orientation","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  output from each baby node. We will simply \"spread\" this value across all of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  topDown outputs for each baby node as an indication of their input activation level.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# In a perfect world, you would try and reconstruct the input by summing the inverse of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  gabor operation for each output orientation. But, for now, we are only using the top","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:#  down output of the Gabor as an indication of the relative input strength to each gabor","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# Save the maxTopDownOut for each baby node so that it can be returned as a read-only","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# parameter. This provides faster performance for things like the top down image inspector","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:inputLen == self._inWidth * self._inHeight * len(self._inputPyramidTopology):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:cv.Dilate(self._morphHeader, self._morphHeader, iterations=halfFilterDim)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:int(self._inHeight)), 32, 1)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# Assemble the bounding box by converting 'validPyramid' from float (0,1) to integer (O,N)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:bbox = numpy.round((validPyramid * numpy.array([inWidth, inHeight, inWidth, inHeight],","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# We'll only subtract enough padding if we have a non-trivlal bounding box.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# In other words, if our validRegionIn is [0, 25, 200, 175] for input image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# dimensions of [0, 0, 200, 200], then we will assume that two horizontal strips","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# such artificial vertical strips were added.  So we don't need to erode the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:self._saveImage(buf, \"%s.buffer.out.%02d.%02d.png\" % (outPrefix, scaleIndex, k))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:img.putdata( ((254.9 * imgArray.flatten()).clip(min=0.0, max=255.0)).astype(numpy.uint8) )","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:raise RuntimeError, \"phase must be either 'bottomUp', 'topDown', or 'combined'\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:scaleSet = [imageSet[orientIdx][scaleIdx] for orientIdx in xrange(self._numPlanes)]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:gaborBank = numpy.concatenate((gaborBank, centerSurround[numpy.newaxis,:,:]))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell - 1])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell + 1])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:offsets = means.repeat(self._filterDim, axis=1).repeat(self._filterDim, axis=2)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:squareSums = (gaborBank * gaborBank).sum(axis=2).sum(axis=1).reshape(numGaborFilters, 1, 1)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:# Store the Gabor Bank as a transposed set of 'numOrients' 1-D column-vectors","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:self._gaborBank = (gaborBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:perPlaneNormalization=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:perPhaseNormalization=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:postProcessingSlope=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:line-too-long:postProcessingCenter=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/extra\/GaborNode2.py:too-many-arguments:def __init__(self,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:def __init__(self, xsize, ysize, c, preserveCenterResolution=False, Debug=False):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:@param preserveCenterResolution -- if True, the resolution of the center of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:data structures for debugging (deltaxmat, deltaymat, scales).","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:self._makeKernel(self._xsize, self._ysize, self._c, Debug=self._debug, Save=False)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# See if we need to re-compute our clipped, flattened kernel, which depends on the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Convert our kernel matrix center to the center of the input image, and mark indicies","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:kxBig = self._ceilFoor(self._kernelx, img.size[1], None, Mirror).astype('int')","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:kyBig = self._ceilFoor(self._kernely, img.size[0], None, Mirror).astype('int')","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# When preserving the resolution at the edges, we make the output image size the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:#  same as the input image size. So, when the input image size is smaller than our","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Convert our kernel to indices into the flattened array of the input image.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Convert all negative indices (sentinels) to reference the last element of the data","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:Center our kernel matrix around the center of the given input image and ensure that","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:the kernel matrix does not try to access pixels outside the input data array.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Mark the indices that go outside the source image with a sentinel, we will use these as","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:raise ValueError(\"Mat shape %s must be >= (xsize=%i,ysize=%i)\" %(str(mat.shape), xsize,ysize))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:useful for debugging (deltaxmat, deltaymat, scales).  Save determines whether","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Are we preserving the center resolution? If so, compute the factor required","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:scale = scaleFactor * k * (numpy.exp(c*hypot\/hypotmax)-1) \/ (hypot\/hypotmax)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:# Compute the optimim input image size so that the output image fills the self._xsize,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:line-too-long:print \"LogPolar Filter: Optimum input image size for this value of c (%f)\" % (c), \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/FillBackground.py:line-too-long:# ---------------------------------------------------------------------------","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/FillBackground.py:line-too-long:backgroundColor=self.background, blurRadius=self._blurRadius,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:#data = (self._gainConstant * 255.0 * response[:,i]).clip(min=0.0, max=255.0).astype(numpy.uint8)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:data = (255.0 * response[:,i]).clip(min=0.0, max=255.0).astype(numpy.uint8)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:#self._buffers = [numpy.zeros(inputDim, dtype=numpy.int32) for inputDim in inputDims]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:testImage = numpy.ones((self._filterDim, self._filterDim), dtype=numpy.float32) * 255.0","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:maxShiftedResponse = maxRawResponse \/ (255.0 * float(self._integerMathScale))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:lutInputs = numpy.array(range(numLutBins), dtype=numpy.float32) \/ postProcScalar","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:offset = 1.0 \/ (1.0 + numpy.exp(self._postProcessingSlope * self._postProcessingCenter))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:comboLut = numpy.concatenate((numpy.fliplr(postProcLUT[numpy.newaxis,:]),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:postProcLUT[numpy.newaxis,:]),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:postProcLUT = numpy.concatenate((comboLut, comboLut), axis=1).reshape(4*numLutBins)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:libPath = os.path.join(nupicRoot, libSubDir, \"%s.%s\" % (libraryName, extension))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# Assemble the bounding box by converting 'validPyramid' from float (0,1) to integer (O,N)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:bbox = numpy.round((validPyramid * numpy.array([inWidth, inHeight, inWidth, inHeight],","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# We'll only subtract enough padding if we have a non-trivlal bounding box.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# In other words, if our validRegionIn is [0, 25, 200, 175] for input image","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# dimensions of [0, 0, 200, 200], then we will assume that two horizontal strips","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# such artificial vertical strips were added.  So we don't need to erode the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:line-too-long:# THINK OF A SAFE WAY TO MAKE SURE C ENUMS ARE SYNCHED WITH PYTHON SYMBOLIC NAMES (UNIT TEST, AUTP PARSING,...)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:line-too-long:@param difficulty -- Value between 0.0 and 1.0 that controls how many lines to add in image.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:# The srcBox is the correct aspect ratio, and either taller or wider than the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:croppedImage.putalpha(Image.new(mode='L', size=croppedImage.size, color=255))","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:scaledImage = croppedImage.resize((int(round(scaleFactor * croppedImage.size[0])),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:int(round(scaleFactor * croppedImage.size[1]))),","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:line-too-long:newImage = Image.new(mode='LA', size=(targetWidth, targetHeight), color=fillValue)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell - 1])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:radialDist[0, 0, halfFilterDim + firstBadCell + 1])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:offsets = means.repeat(self._filterDim, axis=1).repeat(self._filterDim, axis=2)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:squareSums = (gaborBank * gaborBank).sum(axis=2).sum(axis=1).reshape(numGaborFilters, 1, 1)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:# Store the Gabor Bank as a transposed set of 'numOrients' 1-D column-vectors","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:line-too-long:self._filterBank = (gaborBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:too-many-arguments:def __init__(self,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/ScaleToFit.py:line-too-long:def __init__(self, width, height, scaleHeightTo=None, scaleWidthTo=None, pad=False):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:Adds brightness using one of three gradient types (horizontal, vertical, and circular) with random intensity controlled by difficulty.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:@param difficulty -- Value between 0.0 and 1.0 that controls the intensity of the gradient applied.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:opacity = self.difficulty - self.difficulty*.2 + self.random.random()*self.difficulty*.2","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:gradientArray[i][j] = int(float(j)\/image.size[0]*255\/opacity)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:gradientArray[i][j] = int(float(i)\/image.size[1]*255\/opacity)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:line-too-long:gradientArray[i][j] = int(math.sqrt((i - image.size[1]\/2)**2 + (j - image.size[0]\/2)**2)\/math.sqrt((image.size[1]\/2)**2 + (image.size[0]\/2)**2)*255\/opacity)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ToCenterSweep.py:line-too-long:This explorer sweeps each image to the left until it reaches the center position.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ToCenterSweep.py:line-too-long:If the stepsize is greater than 1, then each 'x' in the diagrams above will be","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:jumpOffObject:      Whether the sensor can only include a part of the object,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:should dwell on one image before moving on to the next one.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:xOffset = self.random.randint(-(self.spaceShape[1]\/\/2), self.spaceShape[1]\/\/2)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:line-too-long:yOffset = self.random.randint(-(self.spaceShape[0]\/\/2), self.spaceShape[0]\/\/2)","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:The image is first swept horizontally left to right, and then vertically top to","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:bottom. This order of sweeping makes it easier to debug translation effects in the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:If the stepsize is greater than 1, then each 'x' in the diagrams above will be","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:separated by 'stepsize' pixels. The 'radius' must always be a multiple of 'stepsize'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:By default, the inner circle starts at a radius of stepsize. If minradius is set,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:it defines the smallest circle radius. 'minradius' must also be a multiple of 'stepsize'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:If includeCenter is True, the center location will be included. By default it is not.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:line-too-long:SpiralSweep.__init__(self, radius=radius, stepsize=stepsize, minradius=minradius,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:line-too-long:* self._rng.choice(xrange(self._minVelocity, self._maxVelocity + 1))","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:line-too-long:velocityX, velocityY = self._rng.choice([(-1, -1), (-1, 1), (1, -1), (1, 1)])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:line-too-long:#catPopulation[catIndex] = len([c for c in categoryIndex if c == catIndex])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:line-too-long:imagesByCat[catIndex] = [k for k, c in enumerate(categoryIndex) if c == catIndex]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:if radius is 2, then the movements include another circle of pixels around the first set:","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:If the stepsize is greater than 1, then each 'x' in the diagrams above will be","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:separated by 'stepsize' pixels. The 'radius' must always be a multiple of 'stepsize'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:By default, the inner circle starts at a radius of stepsize. If minradius is set,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:it defines the smallest circle radius. 'minradius' must also be a multiple of 'stepsize'","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:line-too-long:If includeCenter is True, the center location will be included. By default it is not.","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:line-too-long:self.position['saliencySize'] = (self.currentSaliencySizes[self.pointIndex][0] \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:line-too-long:self.currentSaliencySizes[self.pointIndex][1] \\","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:line-too-long:self.position['saliencySize'] = self.currentSaliencySizes[self.pointIndex]","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:stepSize=1, resetEveryPos=False, verbosity=0, *args, **kwargs):","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:*both* the spacing of the center-points within the block and the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:When spreadRadius is used to define the spread shape, then it will","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:raise RuntimeError (\"When spreadShape is used, spreadRadius must be set to None\")","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:raise RuntimeError(\"'spreadShape' should be a 2-item tuple specifying the\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:result = len(filteredImages) * self._numCenterOffsets * self._numSpreadOffsets","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:self.position['offset'][1] = self._home[1] - (centerOffset[0] + spreadOffset[0])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:line-too-long:self.position['offset'][0] = self._home[0] - (centerOffset[1] + spreadOffset[1])","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:too-many-nested-blocks:if self._spreadShape is not None:","count":38,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:line-too-long:This explorer jiggles the image around each possible location within a specified","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:line-too-long:if DEBUG >= 2: print \"already performed jiggle\", jiggleIndex, \", skipping\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:line-too-long:(jiggleIndex, offset) = nextJiggle(location, jiggleIndex, gJiggleOffsets,","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:line-too-long:will sweep until all of the object moves off the sensor. If set to a floating","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:line-too-long:point number between 0 and 1, then it will sweep until that fraction of the","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:line-too-long:raise RuntimeError(\"'sweepOffObject' should be a boolean, or floating point\"","count":19,"result_id":2069},{"warning":"11:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:line-too-long:The sensor will take care of dealing with this - nothing special needs to be","count":19,"result_id":2069},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:basicTypes = ['Byte', 'Int16', 'UInt16', 'Int32', 'UInt32', 'Int64', 'UInt64', 'Real32', 'Real64', 'Handle']","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:(\"nupic.regions.KNNAnomalyClassifierRegion\", \"KNNAnomalyClassifierRegion\"),","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:raise Exception(\"Internal error: unknown parameter type %s\" % dataTypeName)","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:raise exceptions.Exception(\"getParameter -- parameter name '%s' does not exist in region %s of type %s\" %","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:raise exceptions.Exception(\"setParameter -- parameter name '%s' does not exist in region %s of type %s\" %","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:setattr(Network, obj, property(prop.fget, prop.fset, prop.fdel, docString))","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:engine.Network.registerPyRegion(regionClass.__module__, regionClass.__name__)","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:regions = property(_getRegions, doc='@property:place_holder(Network.getRegions)')","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:minPhase = property(engine.Network.getMinPhase, doc='@property:place_holder(Network.getMinPhase)')","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:maxPhase = property(engine.Network.getMaxPhase, doc='@property:place_holder(Network.getMaxPhase)')","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:minEnabledPhase = property(engine.Network.getMinEnabledPhase, engine.Network.setMinEnabledPhase, doc='@property:place_holder(Network.getMinEnabledPhase)')","count":28,"result_id":2060},{"warning":"11:src\/nupic\/engine\/__init__.py:line-too-long:maxEnabledPhase = property(engine.Network.getMaxEnabledPhase, engine.Network.setMaxEnabledPhase, doc='@property:place_holder(Network.getMaxEnabledPhase)')","count":28,"result_id":2060},{"warning":"11:src\/nupic\/encoders\/scalar.py:line-too-long:raise ValueError(\"Number of bits in the SDR (%d) must be greater than 2, and recommended >= 21 (use forced=True to override)\"","count":38,"result_id":2050},{"warning":"11:src\/nupic\/support\/decorators.py:line-too-long:_retry = retry(timeoutSec=300, initialRetryDelaySec=0.2, maxRetryDelaySec=10,","count":39,"result_id":2049},{"warning":"11:src\/nupic\/regions\/TestNode.py:line-too-long:raise Exception(\"TestNode found keyword %s but there is no parameter with that name\" % key)","count":48,"result_id":2040},{"warning":"11:src\/nupic\/regions\/PyRegion.py:line-too-long:singleNodeOnly -- a boolean (True if this Region supports only a single node)","count":66,"result_id":2022},{"warning":"11:src\/nupic\/regions\/TPRegion.py:line-too-long:predictedState = self._tfdr.getPredictedState().reshape(-1).astype('float32')","count":103,"result_id":1985},{"warning":"11:src\/nupic\/data\/aggregator.py:line-too-long:2. The aggregation function for all will be to pick the first: lambda x: x[0]","count":112,"result_id":1976},{"warning":"11:src\/nupic\/research\/fast_temporal_memory.py:line-too-long:@param activeColumns                   (set)         Indices of active columns in `t`","count":146,"result_id":1942},{"warning":"11:src\/nupic\/research\/fast_temporal_memory.py:line-too-long:@param predictedColumns                (set)         Indices of predicted columns in `t`","count":146,"result_id":1942},{"warning":"11:src\/nupic\/research\/fast_temporal_memory.py:line-too-long:@param prevActiveCells                 (set)         Indices of active cells in `t-1`","count":146,"result_id":1942},{"warning":"11:src\/nupic\/research\/fast_temporal_memory.py:line-too-long:@param prevWinnerCells                 (set)         Indices of winner cells in `t-1`","count":146,"result_id":1942},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:dict(date=\"02-01-2010 23:12:23\", amount=4.95, country=\"US\", _reset=0, _sequenceId=0)","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:dataType=\"Real32\", # very inefficient for bits, but that is what we use now","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:description='1 if the node should do top down compute on the next call '","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:raise Exception(\"Unable to initialize RecordSensor -- encoder has not been set\")","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:raise Exception(\"Unable to initialize RecordSensor -- dataSource has not been set\")","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:# We get the temporal pooler's topDownOut passed through the spatial pooler","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:output:                     The main dictionary of outputs passed to compute()","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:raise Exception(\"NuPIC requested output element count for 'dataOut' on a \"","count":183,"result_id":1905},{"warning":"11:src\/nupic\/regions\/RecordSensor.py:line-too-long:\"on a RecordSensor node, but the encoder has not been set\")","count":366,"result_id":1905}],"5":[{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-indentation:allParams['trainRecords'] = DEFAULT_ANOMALY_TRAINRECORDS","count":4,"result_id":4219},{"warning":"5:nupic\/research\/monitor_mixin\/plot.py:bad-continuation:cmap=colorModel.Greys, aspect=\"auto\", interpolation=\"nearest\"):","count":5,"result_id":4186},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:exact=False,               # Specifies exact matching for inferring class","count":25,"result_id":2707},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:sparseThreshold=0.1,       # Anything below this threshold is considered","count":25,"result_id":2707},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:fractionOfMax=None,        # The cut-off fraction in relation to the","count":25,"result_id":2707},{"warning":"5:nupic\/regions\/RecordSensor.py:assert-on-tuple:assert(len(spatialTopDownOut) == len(temporalTopDownOut), \"Error: \"","count":13,"result_id":2159},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:\"Expected predicted field '%s' in input row, but was not found!\"","count":217,"result_id":2150},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:% self._predictedFieldName","count":217,"result_id":2150},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:\"No predicted field was enabled! Did you call enableInference()?\"","count":217,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:constraints='enum: py, cpp'),","count":183,"result_id":2150},{"warning":"5:nupic\/encoders\/random_distributed_scalar.py:bad-continuation:RandomDistributedScalarEncoderProto","count":156,"result_id":2150},{"warning":"5:nupic\/encoders\/category.py:bad-continuation:{\"index\": index, \"category\": category}","count":152,"result_id":2150},{"warning":"5:nupic\/encoders\/category.py:bad-continuation:for index, category in self.indexToCategory.items()","count":152,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:ScalarEncoder: \"scalarEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:AdaptiveScalarEncoder: \"adaptivescalar\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:DateEncoder: \"dateEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:LogEncoder: \"logEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:CategoryEncoder: \"categoryEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:CoordinateEncoder: \"coordinateEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:SDRCategoryEncoder: \"sdrCategoryEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:DeltaEncoder: \"deltaEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:PassThroughEncoder: \"passThroughEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:SparsePassThroughEncoder: \"sparsePassThroughEncoder\",","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:RandomDistributedScalarEncoder: \"randomDistributedScalarEncoder\"","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:encoderProto.name,","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:# Call class.read() where class is determined by _ATTR_CLASS_MAP","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:_ATTR_CLASS_MAP.get(encoderType).read(encoderDetails),","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/multi.py:bad-continuation:encoderProto.offset","count":147,"result_id":2150},{"warning":"5:nupic\/encoders\/delta.py:bad-continuation:AdaptiveScalarEncoder.read(proto.adaptiveScalarEnc)","count":147,"result_id":2150},{"warning":"5:nupic\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:numActiveColumnsPerInhArea = config['spNumActivePerInhArea'],","count":130,"result_id":2150},{"warning":"5:nupic\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:potentialPct = config.get('spCoincInputPoolPct', 1.0),","count":130,"result_id":2150},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:state = self.state,","count":128,"result_id":2150},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:resetFieldName = self.resetFieldName,","count":128,"result_id":2150},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:sequenceIdFieldName = self.sequenceIdFieldName,","count":128,"result_id":2150},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:sequenceInfoType = self._sequenceInfoType,","count":128,"result_id":2150},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:prevSequenceId = getattr(self, \"_prevSequenceId\", None)","count":128,"result_id":2150},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:)","count":128,"result_id":2150},{"warning":"5:nupic\/encoders\/date.py:bad-continuation:(\"day of week\", self.dayOfWeekEncoder, self.dayOfWeekOffset))","count":117,"result_id":2150},{"warning":"5:nupic\/research\/connections.py:bad-continuation:self.synapsesForSegment(segment))","count":114,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:computePredictedActiveCellIndices=dict(","count":72,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:description='1 if active and predicted active indices should be computed',","count":72,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:activeCells=dict(","count":72,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:description=\"The cells that are active\",","count":72,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:predictedActiveCells=dict(","count":72,"result_id":2150},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:description=\"The cells that are active and predicted\",","count":72,"result_id":2150},{"warning":"5:nupic\/research\/temporal_memory.py:bad-continuation:prevMatchingCells,","count":67,"result_id":2150},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numpy.array(self._categoryRecencyList), removalArray).tolist()","count":62,"result_id":2150},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:required=False,","count":38,"result_id":2150},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:numCategories=dict(","count":19,"result_id":2150},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:description=(\"Total number of categories to expect from the \"","count":19,"result_id":2150},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:description='Vector of categories of the input sample',","count":19,"result_id":2150},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:description='Vector of categories of the input sample',","count":18,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_makeUsageErrorStr(","count":32,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"JSON arg parsing failed for --description: %s\\n\" + \\","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"File open failed for --descriptionFromFile: %s\\n\" + \\","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:c, encoder['name']))","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:{'optimize':True}})","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"JSON arg validation failed for option --description: \" + \\","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"JSON arg validation failed for streamDef \" + \\","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_generateMetricSpecString(field=predictedFieldName,","count":48,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_generateMetricSpecString(inferenceElement=InferenceElement.classification,","count":48,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"Predicted field '%s' does not exist in included fields.\" % predictedField","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_makeUsageErrorStr(\"Unexpected command-line args: <%s>\" % \\","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_makeUsageErrorStr((\"The specified command options are \" + \\","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_makeUsageErrorStr(\"Error in validating command options. No option \"","count":16,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, e, type(e))","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelID=modelID,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:jobID=jobID,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:predictedField=predictedField,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:experimentDir=experimentDir,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:reportKeyPatterns=reportKeys,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:optimizeKeyPattern=optimizeKey,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:jobsDAO=jobsDAO,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelCheckpointGUID=modelCheckpointGUID,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:logLevel=logLevel,","count":12,"result_id":2150},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:predictionCacheMaxRecords=predictionCacheMaxRecords)","count":12,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:fields,","count":30,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:FieldMetaSpecial.category)","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:FieldMetaSpecial.reset)","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:FieldMetaSpecial.sequence)","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:FieldMetaSpecial.timestamp)","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:FieldMetaSpecial.learning)","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:inputRow[self._timestampFieldIndex])","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:(recordTS.year * 12 + (recordTS.month-1)) \/","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:self._aggregationPeriod['months'])","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:fields=self.getFields(),","count":6,"result_id":2150},{"warning":"5:nupic\/data\/record_stream.py:bad-continuation:aggregationPeriod=self.getAggregationMonthsAndSeconds())","count":6,"result_id":2150},{"warning":"5:nupic\/support\/lint\/executable.py:bad-continuation:'W9820': ('Non-executable script - script has __main__ block, but the '","count":4,"result_id":2146},{"warning":"5:nupic\/support\/lint\/executable.py:bad-continuation:'W9821': ('Missing shebang or improper shebang (should be \"#!\/usr\/bin\/env '","count":4,"result_id":2146},{"warning":"5:nupic\/support\/lint\/executable.py:bad-continuation:'W9822': ('Script has the executable bit set but there is no __main__ '","count":4,"result_id":2146},{"warning":"5:nupic\/support\/lint\/executable.py:bad-continuation:'W9823': ('File has a shebang line at the top, but has no __main__ block. '","count":4,"result_id":2146},{"warning":"5:nupic\/support\/lint\/executable.py:bad-continuation:}","count":4,"result_id":2146},{"warning":"5:nupic\/support\/object_json.py:bad-continuation:json.loads(s, object_hook=objectDecoderHook, **kwargs))","count":22,"result_id":2128},{"warning":"5:nupic\/support\/object_json.py:bad-continuation:json.load(f, object_hook=objectDecoderHook, **kwargs))","count":22,"result_id":2128},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:description=CLAClassifierRegion.__doc__,","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:# The inputs and outputs are not used in this region because they are","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:inputs=dict(","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:outputs=dict(),","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:parameters=dict(","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:steps=self.stepsList,","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:alpha=self.alpha,","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:verbosity=self.verbosity,","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:implementation=implementation,","count":25,"result_id":2125},{"warning":"5:nupic\/regions\/CLAClassifierRegion.py:bad-continuation:)","count":25,"result_id":2125},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:self._iteration,","count":91,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:self._distribution,","count":91,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:self._probationaryPeriod,","count":91,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:self._claLearningPeriod,","count":91,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:self._reestimationPeriod) )","count":91,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:list(likelihoods[-min(averagingWindow, len(likelihoods)):]),","count":37,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:\"name\": \"normal\",","count":74,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:\"mean\": numpy.mean(sampleData),","count":37,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:\"variance\": numpy.var(sampleData),","count":37,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:\"mean\": 0.5,","count":37,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:\"variance\": 1e6,","count":37,"result_id":2113},{"warning":"5:nupic\/algorithms\/anomaly_likelihood.py:bad-continuation:\"stdev\": 1e3,","count":37,"result_id":2113},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:fget=lambda self: self._inferenceMode,","count":51,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:fset=_setInferenceMode,","count":51,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:doc=\"\"\"Boolean indicating whether or not a node","count":102,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:fget=lambda self: self._learningMode,","count":51,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:fset=_setLearningMode,","count":51,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:fget=lambda self: self._mode,","count":51,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:fset=_setMode,","count":51,"result_id":2099},{"warning":"5:nupic\/regions\/PCANode.py:bad-continuation:doc=\"\"\"We operate in two modes: 'classification' - the SVM is","count":51,"result_id":2099},{"warning":"5:nupic\/data\/generators\/distributions.py:bad-continuation:standardDeviation=self.std, numOfValues=self.valueNum)","count":251,"result_id":2091},{"warning":"5:nupic\/data\/generators\/data_generator.py:bad-continuation:\"some required constructor parameters. Parameters \"","count":251,"result_id":2091},{"warning":"5:nupic\/data\/generators\/data_generator.py:bad-continuation:'or dataType must be specified')","count":251,"result_id":2091},{"warning":"5:nupic\/data\/generators\/data_generator.py:redefined-variable-type:self.encoder=sdrcategory.SDRCategoryEncoder(name='categoryEncoder', \\","count":251,"result_id":2091},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:\"'cpp', and 'tm_py'\" % (temporalImp))","count":242,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not len(weights) > 0 or","count":240,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not isinstance(weights[0], float)):","count":240,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not len(metrics) > 0 or","count":240,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not isinstance(metrics[0], MetricsIface)):","count":240,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:function-redefined:def __init__(self, weights, metrics, window=None):","count":240,"result_id":2091},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:not isinstance(binaryAnomalyThreshold, float) or","count":227,"result_id":2091},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:binaryAnomalyThreshold >= 1.0  or","count":227,"result_id":2091},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:binaryAnomalyThreshold <= 0.0 ):","count":227,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:\"'cpp'\" % (spatialImp))","count":189,"result_id":2091},{"warning":"5:nupic\/research\/connections.py:bad-continuation:other.synapsesForSegment(segment))","count":173,"result_id":2091},{"warning":"5:nupic\/research\/connections.py:bad-continuation:self.synapsesForPresynapticCell(cell))","count":173,"result_id":2091},{"warning":"5:nupic\/research\/connections.py:bad-continuation:other.synapsesForPresynapticCell(cell))","count":173,"result_id":2091},{"warning":"5:nupic\/research\/connections.py:bad-continuation:round(synapseData.permanence, 7)))","count":173,"result_id":2091},{"warning":"5:nupic\/research\/temporal_memory.py:bad-continuation:synapseData.permanence > 0):","count":126,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:exact=False,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:distanceNorm=2.0,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:distanceMethod=\"norm\",","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:distThreshold=0,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:doBinarization=False,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:binarizationThreshold=0.5,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:useSparseMemory=True,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:sparseThreshold=0.1,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:relativeThreshold=False,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numWinners=0,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numSVDSamples=None,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numSVDDims=None,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:fractionOfMax=None,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:verbosity=0,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:maxStoredPatterns=-1,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:replaceDuplicates=False,","count":121,"result_id":2091},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:cellsPerCol=0):","count":121,"result_id":2091},{"warning":"5:nupic\/data\/file_record_stream.py:bad-continuation:serializeTimestamp, serializeTimestampNoMS, escape, unescape, parseSdr,","count":79,"result_id":2091},{"warning":"5:nupic\/data\/file_record_stream.py:bad-continuation:serializeSdr, parseStringList, stripList)","count":79,"result_id":2091},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:\"FileRecordStream\"),","count":78,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"Error creating directory \" + \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"Encountered error: '%s' while reporting \" + \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile = claDescriptionTemplateFile)","count":150,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile):","count":150,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:hsVersion=hsVersion,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:for item in metricSpecArgs.iteritems()])","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:replacementDict):","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"ScalarEncoder\", \"LogEncoder\"]:","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, n=100, w=width, clipInput=True)","count":150,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, n=100+width, w=width)","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, timeOfDay=(width, 1))","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, dayOfWeek=(width, 1))","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, weekend=(width))","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:indent=2*_INDENT_STEP)","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"When computeInterval is specified, then the stream aggregation \"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"computeInterval must be an integer multiple of the stream \"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:descriptionPyPath,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:tokenReplacements)","count":300,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:hsVersion))","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:for ptrn in options['loggedMetrics']]))","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.multiStepBestPredictions,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric='multiStep',","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params={'errorMetric': metricName,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'window':metricWindow,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'steps': predictionSteps},","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:returnLabel=True)","count":300,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.multiStepPredictions,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=\"multiStep\",","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=metricParams,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":trivialErrorMetric,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'steps': steps})","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:)","count":171,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:,\"errorMetric\":\"avg_err\",","count":150,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mode_window\":200,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"steps\": steps})","count":150,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:,\"errorMetric\":\"altMAPE\",","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mean_window\":200,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=metricName,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params={'window':metricWindow},","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":trivialErrorMetric})","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":oneGramErrorMetric})","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mode_window\":200})","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.classification,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=\"custom\",","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=options[\"customErrorMetric\"])","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:field=metric['field'],","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=metric['metric'],","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=metric['params'],","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=\\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Tells ExpGenerator to generate an experiment description.py and \" \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Tells ExpGenerator to open the given filename and use it's \" \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:dest = 'claDescriptionTemplateFile',","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:default = 'claDescriptionTemplate.tpl',","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"The file containing the template description file for \" \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Generate the permutations file for this version of hypersearch.\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\" Possible choices are 'v1' and 'v2' [default: %default].\")","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:parser.get_usage()))","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:parser.get_usage(), hsVersion=options.version,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile = options.claDescriptionTemplateFile)","count":150,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:options.outDir, parser.get_usage(), hsVersion=options.version,","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$EXP_GENERATOR_PROGRAM_PATH'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$INFERENCE_TYPE'] = \"'%s'\" % inferenceType","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_ENABLE'] = \"False\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$TP_ENABLE'] = \"False\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_ENABLE'] = \"True\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$TP_ENABLE'] = \"True\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$CLA_CLASSIFIER_IMPL'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ANOMALY_PARAMS'] = pprint.pformat(","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENCODER_SPECS'] = encoderSpecsStr","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SENSOR_AUTO_RESET'] = sensorAutoResetStr","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$AGGREGATION_INFO'] = aggregationInfoStr","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$DATASET_SPEC'] = datasetSpecStr","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ITERATION_COUNT'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_POOL_PCT'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$HS_MIN_PARTICLES'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_PERM_CONNECTED'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$FIELD_PERMUTATION_LIMIT'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_ENCODER_CHOICES'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICTION_STEPS'] = \"'%s'\" % (predictionStepsStr)","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICT_AHEAD_TIME'] = predictAheadTimeStr","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_SP_CHOICES'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_SP_CHOICES'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TP_CHOICES'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TP_CHOICES'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_INFERENCE_TYPE_CHOICES'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_INFERENCE_TYPE_CHOICES'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_CL_CHOICES'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_CL_CHOICES'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_ALWAYS_INCLUDE_PREDICTED_FIELD'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MIN_FIELD_CONTRIBUTION'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MIN_FIELD_CONTRIBUTION'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_KILL_USELESS_SWARMS'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_KILL_USELESS_SWARMS'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_FIELD_BRANCHING'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_FIELD_BRANCHING'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS_W_TIMESTAMPS'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS_W_TIMESTAMPS'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FIXED_FIELDS'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FIXED_FIELDS'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FAST_SWARM_MODEL_PARAMS'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FAST_SWARM_MODEL_PARAMS'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_MODELS'] = \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_MODELS'] = \"\"","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_AGGREGATION_CHOICES'] = (","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_AGGREGATION_CHOICES'] = aggregationInfoStr","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENVIRONMENT'] = \"'%s'\"%OpfEnvironment.Nupic","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENVIRONMENT'] = \"'%s'\"%OpfEnvironment.Experiment","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:\"\"\"Generate the token substitution for metrics related fields.","count":225,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$LOGGED_METRICS'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$METRICS'] = metricListString","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_OPTIMIZE_SETTING'] \\","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$INFERENCE_ARGS'] = resultInferenceArgs","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICTION_FIELD'] = predictedField","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:redefined-variable-type:resultInferenceArgs = resultInferenceArgs.replace(\"'$REPLACE_ME'\",","count":75,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:['workerCompletionReason'])[0]","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:useConnectionID=False,","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:ignoreUnchanged=True)","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:predictedField, reportKeys, optimizeKey, jobsDAO,","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelCheckpointGUID, logLevel=None, predictionCacheMaxRecords=None):","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, jobsDAO, experimentDir, logger, e)","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, jobsDAO, \"NA\",","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:logger, e)","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:redefined-variable-type:objOut = []","count":71,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:_buildStructuredParams,","count":68,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:discardNoneKeys=False)","count":68,"result_id":2091},{"warning":"5:nupic\/data\/stream_reader.py:bad-continuation:inputFields=recordStoreFields,","count":65,"result_id":2091},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:\"spatialTopDownOut and temporalTopDownOut should be the same size\")","count":65,"result_id":2091},{"warning":"5:nupic\/utils.py:bad-continuation:self.slidingWindow, self.total, newValue, self.windowSize)","count":59,"result_id":2091},{"warning":"5:nupic\/simple_server.py:bad-continuation:# Web UI","count":59,"result_id":2091},{"warning":"5:nupic\/simple_server.py:bad-continuation:\"\/models\", \"ModelHandler\",","count":59,"result_id":2091},{"warning":"5:nupic\/simple_server.py:bad-continuation:r\"\/models\/([-\\w]*)\", \"ModelHandler\",","count":59,"result_id":2091},{"warning":"5:nupic\/simple_server.py:bad-continuation:r\"\/models\/([-\\w]*)\/run\", \"ModelRunner\",","count":59,"result_id":2091},{"warning":"5:nupic\/simple_server.py:bad-continuation:data[\"timestamp\"], \"%m\/%d\/%y %H:%M\")","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:\"nupic.hypersearch.minWorkersPerSwarm\")","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:\"nupic.hypersearch.maxWorkersPerSwarm\")","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:client=client,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:cmdLine=\"$HYPERSEARCH\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:clientInfo=clientInfo,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:clientKey=clientKey,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:alreadyRunning=alreadyRunning,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:params=params,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:minimumWorkers=minimumWorkers,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:maximumWorkers=maximumWorkers,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:jobType=ClientJobsDAO.JOB_TYPE_HS)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:hyperSearchJob=None,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:metricsKeys=None)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:jobID,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:numFinished,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:expModelsStr,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:#stats.numCompletedSuccess,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:(stats.numCompletedEOF+stats.numCompletedStopped),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"EOF\" if stats.numCompletedEOF else \"eof\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedEOF,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"STOPPED\" if stats.numCompletedStopped else \"stopped\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedStopped,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"KILLED\" if stats.numCompletedKilled else \"killed\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedKilled,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"ERROR\" if stats.numCompletedError else \"error\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedError,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"ORPHANED\" if stats.numCompletedError else \"orphaned\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedOrphaned,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"UNKNOWN\" if stats.numCompletedOther else \"unknown\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedOther))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:pprint.pformat(modelMilestones, indent=4))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:permWorkDir=options[\"permWorkDir\"],","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:outputLabel=options[\"outputLabel\"])","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"expected 1 opt key, but got %d (%s) in %s\" % (","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(optimizationMetrics), optimizationMetrics, modelInfo))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:(\"all completed successfully\"","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs) - (","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedKilled + modelStats.numCompletedEOF +","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedStopped))))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numStatusOther)","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedOther)","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:optimizationMetricName, maximizeMetric)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:bestModelIterIndex, bestModel, bestModel.getModelDescription())","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:0:options[\"genTopNDescriptions\"]]","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(self.__modelCache)))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"_NupicModelInfo\",","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.jobId,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.modelId,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.status,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.completionReason,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.updateCounter,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.numRecords))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:['com.numenta.nupic.swarming', self.__class__.__name__]))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:cancel=True,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:workerCompletionMsg = completionMsg),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:self.min, self.max, self.stepSize, self.getPosition(),","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:self._position, self._velocity, self._bestPosition,","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:self._bestResult))","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:globalBestPosition - self.getPosition())","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:(self.fieldName, self.encoderClass, self.name, suffix))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:ClientJobsDAO, InvalidConnectionException)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:cancel=True,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:workerCompletionMsg = \": \".join(str(i) for i in e.args)),","count":59,"result_id":2091},{"warning":"5:nupic\/research\/utils.py:bad-continuation:runtimeElement=network.getElement(fromElementName),","count":59,"result_id":2091},{"warning":"5:nupic\/research\/utils.py:bad-continuation:# TODO: Re-purpose for use with nodes other than PMXClassifierNode.","count":59,"result_id":2091},{"warning":"5:nupic\/research\/utils.py:bad-continuation:expression=\"self._cd._W\"","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_quoteAndEscape(encoder['name']),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:2*_ONE_INDENT,","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoder, indent=2*_INDENT_STEP)))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_quoteAndEscape(encoderChoices[-1]['name']),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoderChoices, indent=2*_INDENT_STEP)))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:encoderKey,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoderDict, indent=2*_INDENT_STEP)))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'days': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'hours': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'microseconds': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'milliseconds': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'minutes': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'months': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'seconds': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'weeks': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'years': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$SUBSTITUTE'\", \"config['aggregationInfo']\")","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:options['anomalyParams'], indent=2*_INDENT_STEP)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"PermuteChoices(%s)\" % (","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(aggChoices, indent=2*_INDENT_STEP)))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$REPLACE_ME'\", \"predictionSteps\")","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$REPLACE_ME'\", \".*\")","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:ClientJobsDAO, InvalidConnectionException)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.enableSwarmTermination')))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:['com.numenta', self.__class__.__module__, self.__class__.__name__]))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'Swarm %s has matured (more than %d generations). Stopping' %","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:(swarmId, self.MAX_GENERATIONS))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId=self.swarmId, maxGenIdx=maxGenIdx, varName=varName)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:resultsPerChoice.values())","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._hsObj._jobID, 'engWorkerState', json.dumps(self._state), None)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._hsObj._jobID, ['engWorkerState'])[0]","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:clippedObj(searchParams))))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:\"Either 'description', 'permutationsPyFilename' or\"","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'--description=%s' % (","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:json.dumps(self._searchParams['description'])),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'--version=v2',","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'--outDir=%s' % (outDir)])","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:\"Either 'description', 'permutationsPyFilename' or \"","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'days': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'hours': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'microseconds': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'milliseconds': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'minutes': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'months': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'seconds': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'weeks': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'years': 0,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmId, generation=genIdx, errScore=errScore)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._jobID,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:fields=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:useConnectionID=False,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:ignoreUnchanged=True)","count":118,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._resultsDB.getParticleInfos(swarmId))","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._resultsDB.getParticleInfos(swarmId, genIdx=None,","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId, genIdx=genIdx, matured=False)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmID, completed=False)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:modelId, dict(engStop=ClientJobsDAO.STOP_REASON_KILLED),","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._getCandidateParticleAndSwarm())","count":59,"result_id":2091},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:\"Input vector dimensions don't match. Expecting %s but got %s\" % (","count":59,"result_id":2091},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:inputVector.size, self._numInputs))","count":59,"result_id":2091},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:self._minPctOverlapDutyCycles * self._overlapDutyCycles.max()","count":59,"result_id":2091},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:self._minPctActiveDutyCycles * self._activeDutyCycles.max()","count":59,"result_id":2091},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:self._synPermMax - self._synPermConnected)*self._random.getReal64()","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.infActiveState[\"t\"], self.infActiveState[\"t-1\"],","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.infPredictedState[\"t\"], self.infPredictedState[\"t-1\"],","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.colConfidence[\"t\"], self.colConfidence[\"t-1\"],","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.cellConfidence[\"t\"], self.cellConfidence[\"t-1\"])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:(synapseData.presynapticCell, synapseData.permanence))","count":59,"result_id":2091},{"warning":"5:nupic\/algorithms\/cla_classifier_diff.py:bad-continuation:self._fastCLAClassifier))","count":59,"result_id":2091},{"warning":"5:nupic\/algorithms\/cla_classifier_diff.py:bad-continuation:'Python CLAClassifier has value %f and C++ FastCLAClassifier has '","count":59,"result_id":2091},{"warning":"5:nupic\/algorithms\/cla_classifier_diff.py:bad-continuation:'Python CLAClassifier has value %s and C++ FastCLAClassifier has '","count":59,"result_id":2091},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:inputValue, anomalyScore, timestamp)","count":118,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:numpy.zeros((self.numberOfCols, self.cellsPerColumn),","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curPredictionScore2'])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['predictionScoreTotal2'] \/ nPredictions)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curFalseNegativeScore'])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['falseNegativeScoreTotal'] \/ nPredictions)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curFalsePositiveScore'])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['falsePositiveScoreTotal'] \/ nPredictions)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['prevSequenceSignature'])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:patternNZs=[bottomUpNZ], output=predictedState,","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:colConfidence=colConfidence)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:confidences2[0])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infActiveState['t'].min(axis=1).sum()),","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curPredictionScore2']),","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curFalsePositiveScore']),","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:1 - self._internalStats['curFalseNegativeScore'])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infActiveState['t'].sum())","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infPredictedState['t'].sum())","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.lrnActiveState['t'].sum())","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.lrnPredictedState['t'].sum())","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:\"Trying to lock-on using startCell state from %d steps ago:\" % (","count":118,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:numPrevPatterns - 1 - startOffset),","count":177,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._prevInfPatterns[startOffset])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infPredictedState['t'][:, :])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infPredictedState['candidate'][:, :])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:s, self.infActiveState['t'], connectedSynapsesOnly=False)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._prevLrnPatterns[startOffset])","count":118,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:\"Locking on using startCell state from %d steps ago:\" % (","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, self.lrnActiveState['t-1'], self.minThreshold)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, i, s, self.lrnActiveState['t-1'], newSynapses = True)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, i, None, self.lrnActiveState['t-1'], newSynapses=True)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, self.lrnActiveState['t'], minThreshold = self.activationThreshold)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, i, s, activeState=self.lrnActiveState['t'],","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:newSynapses=(numActive < self.newSynapseCount))","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:colIdx=c, cellIdx=i, segList=self.cells[c][i],","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:minPermanence=minPermanence, minNumSyns=minNumSyns)","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:candidateCellIdxs[self._random.getUInt32(len(candidateCellIdxs))])","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:colIdx, candidateCellIdx, len(self.cells[colIdx][candidateCellIdx]))","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:perms.argsort()[0:numToFree]]","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:perms.argsort()[0:moreToFree]]","count":59,"result_id":2091},{"warning":"5:nupic\/research\/TP.py:bad-continuation:len(candidates)), candidates","count":59,"result_id":2091},{"warning":"5:nupic\/data\/inference_shifter.py:bad-continuation:self._inferenceBuffer[delay][inferenceElement])","count":59,"result_id":2091},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:\"Internal error -- sequence info type not set in RecordSensor\")","count":59,"result_id":2091},{"warning":"5:nupic\/data\/stream_reader.py:bad-continuation:jsonschema.__name__, \"stream_def.json\"))","count":59,"result_id":2091},{"warning":"5:nupic\/data\/file_record_stream.py:bad-continuation:\"Only bookmark or firstRecord can be specified, not both\")","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/__init__.py:bad-continuation:(engine.Network.getRegions, 'Get the collection of regions in a network'),","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"spVerbosity\": _VERBOSITY,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"spatialImp\": \"cpp\",","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"globalInhibition\": 1,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"columnCount\": 2048,","count":118,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"inputWidth\": 0,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"numActiveColumnsPerInhArea\": 40,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"seed\": 1956,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"potentialPct\": 0.8,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermConnected\": 0.1,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermActiveInc\": 0.0001,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermInactiveDec\": 0.0005,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxBoost\": 1.0,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"verbosity\": _VERBOSITY,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"cellsPerColumn\": 32,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"inputWidth\": 2048,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"seed\": 1960,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"temporalImp\": \"cpp\",","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"newSynapseCount\": 20,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxSynapsesPerSegment\": 32,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxSegmentsPerCell\": 128,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"initialPerm\": 0.21,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"permanenceInc\": 0.1,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"permanenceDec\": 0.1,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"globalDecay\": 0.0,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxAge\": 0,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"minThreshold\": 9,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"activationThreshold\": 12,","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"outputType\": \"normal\",","count":59,"result_id":2091},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"pamLength\": 3,","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:creator = pymysql,","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:host = Configuration.get('nupic.cluster.database.host'),","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:port = int(Configuration.get('nupic.cluster.database.port')),","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:user = Configuration.get('nupic.cluster.database.user'),","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:passwd = Configuration.get('nupic.cluster.database.passwd'),","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:charset = 'utf8',","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:use_unicode = True,","count":59,"result_id":2091},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:setsession = ['SET AUTOCOMMIT = 1'])","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/random_distributed_scalar.py:bad-continuation:(self._maxBuckets\/2) + int(round((x - self._offset) \/ self.resolution))","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/random_distributed_scalar.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(x))","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/date.py:bad-continuation:type(input), str(input)))","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/sparse_pass_through_encoder.py:bad-continuation:n, w, name, forced, verbosity)","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/scalar.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(input))","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/pass_through_encoder.py:bad-continuation:len(inputVal), len(outputVal)))","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/pass_through_encoder.py:bad-continuation:sum(inputVal), self.w))","count":59,"result_id":2091},{"warning":"5:nupic\/encoders\/delta.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(input))","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TestRegion.py:bad-continuation:bottomUpIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TestRegion.py:bad-continuation:topDownIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:description=\"\"\"Which spatial pooler implementation to use. Set to either","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:constraints='enum: py, cpp'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:bottomUpIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:resetIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:topDownIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:'_loaded',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:'_profileObj',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:'_iterations',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:description=KNNClassifierRegion.__doc__,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:inputs=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:outputs=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:parameters=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'prototypes. Possible options are norm, rawOverlap, '","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'pctOverlapOfProto',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'each category based on the distance to the nearest neighbor of '","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'be \"sphered\" (i.e. each dimension should be normalized such'","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'colum ',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:k=k,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:distanceNorm=distanceNorm,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:distanceMethod=distanceMethod,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:distThreshold=distThreshold,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:doBinarization=doBinarization,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:binarizationThreshold=inputThresh,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:useSparseMemory=useSparseMemory,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:sparseThreshold=sparseThreshold,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:relativeThreshold=relativeThreshold,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:numWinners=winnerCount,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:numSVDSamples=SVDSampleCount,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:numSVDDims=SVDDimCount,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:fractionOfMax=fractionOfMax,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:verbosity=clVerbosity,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:replaceDuplicates=replaceDuplicates,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:cellsPerCol=cellsPerCol,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:maxStoredPatterns=maxStoredPatterns","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:description=KNNAnomalyClassifierRegion.__doc__,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:inputs=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:outputs=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:parameters=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:commands=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:#at beginning of model.run","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:(classifier_indexes >= self.getParameter('trainRecords')) &","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:(classifier_indexes < record.ROWID)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": (\"Region that computes anomaly scores from temporal \"","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"singleNodeOnly\": True,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"inputs\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"activeColumns\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The currently active columns.\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"regionLevel\": True,","count":177,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"dataType\": \"Real32\",","count":177,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"count\": 0,","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"required\": True,","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"isDefaultInput\": False,","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"requireSplitterMap\": False,","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"predictedColumns\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The currently predicted columns.\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"outputs\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"rawAnomalyScore\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The raw anomaly score.\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"count\": 1,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"isDefaultOutput\": True,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"parameters\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"commands\": {","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:activeColumns, self.prevPredictedColumns)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._inferenceMode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setInferenceMode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:doc=\"\"\"Boolean indicating whether or not a node","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._learningMode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setLearningMode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._mode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setMode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:doc=\"\"\"We operate in two modes: 'classification' - the SVM is","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._kernelType,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setKernelType,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:# Doc provided with constraints in NodeSpec.","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:description=SVMClassifierNode.__doc__,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:inputs=[","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:outputs=[","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:parameters=[","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_rng',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTuneSamples',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTuneLabels',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTunePartitionIds',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:bottomUpIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:resetIn=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:'_loaded',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:'_profileObj',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:'_iterations',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:0: (quadrantPosn - radialLength, -radialLength),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:1: (radialLength, quadrantPosn - radialLength),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:2: (radialLength - quadrantPosn, radialLength),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:3: (-radialLength, radialLength - quadrantPosn),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:}[quadrantIndex]","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:dataOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:categoryOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:resetOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:bboxOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:alphaOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:partitionOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:auxDataOut=dict(","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'phaseMode':            ('single', 'dual'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'targetType':           ('edge', 'line'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'boundaryMode':         ('constrained', 'sweepOff'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'normalizationMethod':  ('fixed', 'max', 'mean'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'postProcessingMethod': ('raw', 'sigmoid', 'threshold'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'nta_morphologyMethod': ('best', 'opencv', 'nta'),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_gaborComputeProc',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetIn',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetOut',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_imageCounter',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_morphHeader',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_erosion',","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"Top-down conditions were not met for GaborNode:\\n\") +","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  phaseIndex=%s (expected %d)\\n\" % (self.nta_phaseIndex, 1)) +","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  stage='%s' (expected '%s')\\n\" % (self._stage, \"infer\")) +","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  topDownCombiner is %s (expected not None)\\n\" %","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  buInputVector %s cache (expected ==)\\n\" %","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  validRegionIn %s cache (expected ==)\\n\" %","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:\"convert(convert(gray, 'F') * scale + offset, mode)\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:gray=base,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:scale=scale,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:offset=offset,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:mode=base.mode,","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (bright to dark)","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (dark to bright)","count":118,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (bright to dark)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (dark to bright)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SE-NW lines","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(1,   0.8,  1.3),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(2,   1.7,  2.4),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(3,   2.8,  3.5),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(4,   3.6,  4.6),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(5,   4.5,  5.6),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(6,   5.4,  6.8),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(7,   6.3,  7.9),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(8,   7.3,  9.1),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(9,   8.2, 10.3),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(10,  9.2, 11.5),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(11, 10.2, 12.7),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(12, 11.3, 14.1),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(13, 12.3, 15.4),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(14, 13.4, 16.8),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(15, 14.6, 18.2),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(16, 15.8, 19.7),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(17, 17.0, 21.2),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(18, 18.2, 22.8),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Verticals","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,   0), (1, 1, 1, 0)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,  90), (0, 1, 1, 0)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 180), (1, 1, 1, 0)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 270), (1, 0, 1, 0)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SW-NE","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,   0), (1, 1, 1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,  90), (0, 1, 1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 180), (1, 1, 1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 270), (1, 0, 1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Horizontals","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,   0), (1, 1, 0, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,  90), (0, 1, 0, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 180), (1, 1, 0, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 270), (1, 0, 0, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SE-NW","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,   0), (1, 1, -1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,  90), (0, 1, -1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 180), (1, 1, -1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 270), (1, 0, -1, 1)),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'boundaryMode':         ['constrained', 'sweepOff'],","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'normalizationMethod':  ['fixed', 'max', 'mean'],","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'postProcessingMethod': ['raw', 'sigmoid', 'threshold'],","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Darwin\":  \"so\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Linux\":   \"so\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Windows\": \"pyd\",","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}.get(systemID)","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:0: (quadrantPosn - radius, -radius),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:1: (radius, quadrantPosn - radius),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:2: (radius - quadrantPosn, radius),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:3: (-radius, radius - quadrantPosn),","count":59,"result_id":2091},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:}[quadrantIndex]","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:self._fieldNames, self._fieldTypes,","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:itertools.repeat(fieldmeta.FieldMetaSpecial.none)))","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/model.py:bad-continuation:extraDataDir=Model._getModelExtraDataDir(savedModelDir))","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:dataRow=values, dataEncodings=inputFieldEncodings,","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:sequenceReset=int(self._reset))","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:max(probabilities, key=lambda x: x[1])[0]]","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:self._fieldNames, fieldTypes,","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:itertools.repeat(fieldmeta.FieldMetaSpecial.none)))","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:parser,","count":177,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Options: -c, --listCheckpoints, --listTasks, and --load are \"","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Options: -c and --noCheckpoint are \"","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Exactly ONE experiment must be specified, but got %s (%s)\" % (","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:len(experiments), experiments))","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:experimentDir)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:descriptionPyModule)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:(classifier_indexes >= self._autoDetectWaitRecords) &","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:(classifier_indexes < record.ROWID)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:#at beginning of model.run","count":59,"result_id":2091},{"warning":"5:nupic\/support\/feature_groups.py:bad-continuation:'base_feature',","count":59,"result_id":2091},{"warning":"5:nupic\/support\/feature_groups.py:bad-continuation:'third_feature'","count":59,"result_id":2091},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--verbosity', default=0, type='int',","count":59,"result_id":2091},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--seed', default=42, type='int',","count":59,"result_id":2091},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--short', action='store_false', dest='long',","count":59,"result_id":2091},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--long', action='store_true', dest='long',","count":59,"result_id":2091},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--installDir', dest='installDir',","count":59,"result_id":2091},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:]","count":59,"result_id":2091},{"warning":"5:nupic\/math\/__init__.py:bad-continuation:\"GetNTAReal\", \"GetNumpyDataType\",","count":59,"result_id":2091},{"warning":"5:nupic\/math\/__init__.py:bad-continuation:\"SparseMatrix\", \"SparseTensor\", \"TensorIndex\", \"Domain\", \"choose\", \"logChoose\"]","count":59,"result_id":2091},{"warning":"5:nupic\/math\/proposal.py:bad-continuation:self.dist, self.minVal - current, self.maxVal - current, r)","count":59,"result_id":2091},{"warning":"5:nupic\/math\/proposal.py:bad-continuation:self.dist, current - self.maxVal, current - self.minVal, r)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:sensorParams, spEnable, spParams, tpEnable, tpParams, clEnable,","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:clParams, anomalyParams)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:\"activeColumnCount\", len(activeColumns))","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict, minLikelihoodThreshold, maxPredictionsPerStep)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:trainRecords=anomalyParams.get('autoDetectWaitRecords', None),","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:cacheSize=anomalyParams.get('anomalyCacheRecords', None)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:self._classifier_helper.saved_states)","count":59,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:self._classifier_helper.saved_categories)","count":59,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:prediction=\"prediction\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:encodings=\"encodings\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:classification=\"classification\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:anomalyScore=\"anomalyScore\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:anomalyLabel=\"anomalyLabel\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:classConfidences=\"classConfidences\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepPredictions=\"multiStepPredictions\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBestPredictions=\"multiStepBestPredictions\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBucketLikelihoods=\"multiStepBucketLikelihoods\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBucketValues=\"multiStepBucketValues\",","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:)):","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:key),","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-indentation:return (\"ModelResult(\"","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.rawInput,","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.sensorInput,","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.inferences,","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.metrics,","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.predictedFieldIdx,","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.predictedFieldName)","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:InferenceElement)","count":39,"result_id":2091},{"warning":"5:nupic\/swarming\/object_json.py:bad-continuation:json.loads(s, object_hook=objectDecoderHook, **kwargs))","count":37,"result_id":2091},{"warning":"5:nupic\/swarming\/object_json.py:bad-continuation:json.load(f, object_hook=objectDecoderHook, **kwargs))","count":37,"result_id":2091},{"warning":"5:nupic\/swarming\/object_json.py:redefined-variable-type:obj = tuple([restoreKeysPostDecoding(item) for item in obj])","count":37,"result_id":2091},{"warning":"5:nupic\/swarming\/ExtendedLogger.py:bad-indentation:\"\"\"","count":36,"result_id":2091},{"warning":"5:nupic\/swarming\/ExtendedLogger.py:bad-indentation:self._baseLogger.log(self, level, self.getExtendedMsg(msg), *args,","count":36,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/opfutils.py:bad-continuation:self.predictedFieldName,","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/opfutils.py:bad-continuation:self.classifierInput)","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:ClassifierInput,","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict[k])","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:offsetDict[k])","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict)","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:bestActValue)","count":24,"result_id":2091},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:bucketLikelihood)","count":24,"result_id":2091},{"warning":"5:src\/utils.py:bad-continuation:len(existingHistoricalValues)-windowSize:]","count":2,"result_id":2089},{"warning":"5:src\/utils.py:bad-continuation:self.slidingWindow, self.total, newValue, self.windowSize)","count":2,"result_id":2089},{"warning":"5:src\/simple_server.py:bad-continuation:# Web UI","count":2,"result_id":2089},{"warning":"5:src\/simple_server.py:bad-continuation:\"\/models\", \"ModelHandler\",","count":2,"result_id":2089},{"warning":"5:src\/simple_server.py:bad-continuation:r\"\/models\/([-\\w]*)\", \"ModelHandler\",","count":2,"result_id":2089},{"warning":"5:src\/simple_server.py:bad-continuation:r\"\/models\/([-\\w]*)\/run\", \"ModelRunner\",","count":2,"result_id":2089},{"warning":"5:src\/simple_server.py:bad-continuation:data[\"timestamp\"], \"%m\/%d\/%y %H:%M\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/object_json.py:bad-continuation:json.loads(s, object_hook=objectDecoderHook, **kwargs))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/object_json.py:bad-continuation:json.load(f, object_hook=objectDecoderHook, **kwargs))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/object_json.py:redefined-variable-type:obj = tuple([restoreKeysPostDecoding(item) for item in obj])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelTerminator.py:bad-continuation:self.__class__.__module__, self.__class__.__name__]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:\"nupic.hypersearch.minWorkersPerSwarm\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:\"nupic.hypersearch.maxWorkersPerSwarm\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:client=client,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:cmdLine=\"$HYPERSEARCH\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:clientInfo=clientInfo,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:clientKey=clientKey,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:alreadyRunning=alreadyRunning,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:params=params,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:minimumWorkers=minimumWorkers,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:maximumWorkers=maximumWorkers,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/api.py:bad-continuation:jobType=ClientJobsDAO.JOB_TYPE_HS)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/modelchooser.py:bad-continuation:self.__class__.__module__, self.__class__.__name__]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:finalDelay=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:waitTime=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:randomizeWait=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:iterations=1,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:metricFunctions=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:metricValue=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:finalize=True,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:permutationParams={},","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:experimentDirectory=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:makeCheckpoint=False,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:sysExitModelRange=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:delayModelRange=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:exitAfter=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:errModelRange=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:sleepModelRange=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:jobFailErr=False,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('consumption', 'sum'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('timestamp', 'first'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('TEMP', 'mean'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('DEWP', 'mean'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:#('SLP',  'mean'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('MAX',  'mean'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('MIN',  'mean'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:('PRCP', 'sum'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:},","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-indentation:raise RuntimeError(\"Only one of 'delay' or \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/DummyModelRunner.py:bad-continuation:\"dummyModel's jobFailErr was True.\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:\"\"\" Helper class to compute the slope of a best-fit line given a set of (x,y)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:def __init__(self, windowSize = None):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_xy = 0","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_x = 0","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_y = 0","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_x_sq = 0","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._n = 0","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:if windowSize is not None:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._windowSize = windowSize","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._window = deque(maxlen=windowSize)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:def addPoint(self, x, y):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_x += x","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_y += y","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_xy += x*y","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_x_sq += x*x","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._n += 1","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:if self._window is not None:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:if len(self._window) == self._windowSize:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self.removePoint(*self._window.popleft())","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._window.append((x,y))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:def removePoint(self, x, y):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_x -= x","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_y -= y","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_xy -= x*y","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._sum_x_sq -= x*x","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:self._n -=1","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:def getSlope(self):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:if self._n < 2:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:return None","count":6,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:if self._window is not None and \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:den = self._sum_x_sq - self._sum_x**2 \/ float(self._n)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:if den == 0:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:num = self._sum_xy - self._sum_x * self._sum_y \/ float(self._n)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/regression.py:bad-indentation:return num\/den","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ExtendedLogger.py:bad-indentation:\"\"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ExtendedLogger.py:bad-indentation:self._baseLogger.log(self, level, self.getExtendedMsg(msg), *args,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"expDescJsonPath\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"expDescConfig\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"permutationsScriptPath\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"outputLabel\": \"swarm_out\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"outDir\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"permWorkDir\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"action\": \"run\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"searchMethod\": \"v2\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"timeout\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"exports\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"useTerminators\": False,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"maxWorkers\": 2,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"replaceReport\": False,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"maxPermutations\": None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"genTopNDescriptions\": 1}","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:options=runOptions,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:replaceReport=runOptions[\"replaceReport\"],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:hyperSearchJob=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:metricsKeys=None)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:outputLabel, permWorkDir):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:searchMethod = self._options[\"searchMethod\"])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:jobID,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:numFinished,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:expModelsStr,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:#stats.numCompletedSuccess,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:(stats.numCompletedEOF+stats.numCompletedStopped),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"EOF\" if stats.numCompletedEOF else \"eof\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedEOF,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"STOPPED\" if stats.numCompletedStopped else \"stopped\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedStopped,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"KILLED\" if stats.numCompletedKilled else \"killed\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedKilled,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"ERROR\" if stats.numCompletedError else \"error\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedError,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"ORPHANED\" if stats.numCompletedError else \"orphaned\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedOrphaned,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"UNKNOWN\" if stats.numCompletedOther else \"unknown\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedOther))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:indent=4))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:pprint.pformat(modelMilestones, indent=4))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:permWorkDir=options[\"permWorkDir\"],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:outputLabel=options[\"outputLabel\"])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"expected 1 opt key, but got %d (%s) in %s\" % (","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:len(optimizationMetrics), optimizationMetrics, modelInfo))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelInfo.getModelID(),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelInfo.getGeneratedDescriptionFile(),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelInfo.getParamLabels()))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:(\"all completed successfully\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs) - (","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedKilled + modelStats.numCompletedEOF +","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedStopped))))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelStats.numStatusOther)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedOther)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:optimizationMetricName, maximizeMetric)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:bestModelIterIndex, bestModel, bestModel.getModelDescription())","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:options[\"genTopNDescriptions\"])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:0:options[\"genTopNDescriptions\"]]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"description.py\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:start=outDir)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"importBaseDescription('base.py', config)\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"importBaseDescription('%s', config)\" % base_description_relpath)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__class__.__name__, self.__jobInfo.jobId,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.statusAsString(), self.__jobInfo.completionReason,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__jobInfo.startTime, self.__jobInfo.endTime)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"hsVersion\":          hsVersion,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"maxModels\":          maxModels,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:}","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"useTerminators\":     useTerminators,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:len(self.__modelCache)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:\"_NupicModelInfo\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.jobId,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.modelId,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.status,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.completionReason,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.updateCounter,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.numRecords))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutations_runner.py:bad-continuation:len(resultList), resultList)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:['com.numenta.nupic.swarming', self.__class__.__name__]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:str(cmdLineArgs))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:itertools.izip(xrange(numItems), curModelIDCtrList,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParams = None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParamsHash = mResult.engParamsHash,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:results = results,","count":6,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:completed = (mResult.status == cjDAO.STATUS_COMPLETED),","count":6,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:completionReason = mResult.completionReason,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:matured = mResult.engMatured,","count":6,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:numRecords = mResult.numRecords)","count":6,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParamsAndHashs):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParams = json.loads(mParamsAndHash.params),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParamsHash = mParamsAndHash.engParamsHash,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:completionReason = (mResult.completionReason),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:params=options.params, alreadyRunning=True,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:minimumWorkers=1, maximumWorkers=1,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:jobType = cjDAO.JOB_TYPE_HS)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:fields={'workerCompletionReason': ClientJobsDAO.CMPL_REASON_SUCCESS,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:},","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:useConnectionID=False,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:ignoreUnchanged=True)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:cjDAO=cjDAO, jobID=options.jobID, logLevel=options.logLevel)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:jsonModelParams, modelParamsHash, particleHash)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:['engParticleHash'])[0]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParams['particleState']['id'],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParams['particleState']['genIdx'])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:mParamsAndHash.engParamsHash.encode('hex'),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:particleHash.encode('hex'), particleInst)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelParams = modelParams,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:dict(engWorkerConnId=self._workerID))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:attempt)).digest()","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:dict(engParamsHash=paramsHash,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:mParamsAndHash.params, modelParamsHash)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelIDToRun, modelParamsHash.encode('hex'), modelParams)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:modelIDToRun, numModelsTotal)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=\"jobID of the job within the dbTable [default: %default].\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=(\"Tell worker to re-run this model ID. When specified, jobID \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:\"must also be specified [default: %default].\"))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=(\"workerID of the scheduler's SlotAgent (GenericWorker) that \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:\"hosts this SpecializedWorker [default: %default].\"))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=\"Create and execute a new hypersearch request using this JSON \" \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=\"clear out the models table before starting [default: %default].\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=\"Reset the job status before starting  [default: %default].\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:help=\"override default log level. Pass in an integer value that \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:\"represents the desired logging level (10=logging.DEBUG, \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:['workerCompletionReason'])[0]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:cancel=True,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:bad-continuation:workerCompletionMsg = completionMsg),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchWorker.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:self.min, self.max, self.stepSize, self.getPosition(),","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:self._position, self._velocity, self._bestPosition,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:self._bestResult))","count":4,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:globalBestPosition - self.getPosition())","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:self.choices[self._positionIdx])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:(self.fieldName, self.encoderClass, self.name, suffix))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:inertia=inertia, cogRate=cogRate, socRate=socRate)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:maxValue=5.1, targetValue=5.0)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:maxValue=5.1, targetValue=2.2)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:maxValue=5.1, targetValue=3.5)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:maxValue=20, targetValue=19)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:bad-continuation:maxValue=20, targetValue=1)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:redefined-variable-type:overallSum = 1.0","count":2,"result_id":2089},{"warning":"5:src\/swarming\/permutationhelpers.py:redefined-variable-type:counts = dict()","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:prediction=\"prediction\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:encodings=\"encodings\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:classification=\"classification\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:anomalyScore=\"anomalyScore\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:anomalyLabel=\"anomalyLabel\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:classConfidences=\"classConfidences\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepPredictions=\"multiStepPredictions\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBestPredictions=\"multiStepBestPredictions\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBucketLikelihoods=\"multiStepBucketLikelihoods\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBucketValues=\"multiStepBucketValues\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:)):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:key),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-indentation:return (\"ModelResult(\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.rawInput,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.sensorInput,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.inferences,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.metrics,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.predictedFieldIdx,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.predictedFieldName)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:self.__class__.__module__, self.__class__.__name__]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:self._getMetricLabels())","count":4,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:\"than one metric: %s\" % (self._optimizeKeyPattern, matchingKeys))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:metricValue=optimizeDict.values()[0],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:numRecords=(self._currentRecordIndex + 1))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-indentation:jobResults = {}","count":4,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:fieldName='results',","count":4,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:curValue=jobResultsStr,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:newValue=newResults)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:newValue=json.dumps(jobResults))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-indentation:self.__flushPredictionCache()","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:period=100,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:cb=self._updateModelDBResults)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:period=2,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:cb=self.__updateJobResultsPeriodic)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:self._MATURITY_NUM_POINTS,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/ModelRunner.py:bad-continuation:self._metricRegression._window)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:ClientJobsDAO, InvalidConnectionException)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:['workerCompletionReason'])[0]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:cancel=True,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:workerCompletionMsg = \": \".join(str(i) for i in e.args)),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:useConnectionID=False,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:ignoreUnchanged=True)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:predictedField, reportKeys, optimizeKey, jobsDAO,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:modelCheckpointGUID, logLevel=None, predictionCacheMaxRecords=None):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, jobsDAO, experimentDir, logger, e)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, jobsDAO, \"NA\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:bad-continuation:logger, e)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/hypersearch\/utils.py:redefined-variable-type:objOut = []","count":2,"result_id":2089},{"warning":"5:src\/research\/TP_shim.py:bad-continuation:learn=enableLearn)","count":4,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:activity), dtype=numpy.uint32)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:coinc[:] = 0","count":4,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:coinc[random.sample(indexList, activity)] = 1","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:vectors.append(coinc.copy())","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:activity=patternActivity)","count":4,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:similarity.append(patterns.rightVecProd(patterns.getRow(i)))","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:nSeq=nSequences)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:coinc[i*activity:(i+1)*activity] = 1","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:coincMatrix.addRow(coinc)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:hubs=[2,6],  seqLength=[5,6,7],","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:nSimpleSequences=50,  nHubSequences=50):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:nSeq=nSimpleSequences) + \\","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:nL1SimpleSequences=50,  nL1HubSequences=50,","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:l1Pooling=4, perfectStability=False, spHysteresisFactor=1.0,","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:patternLen=500, patternActivity=50):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:nSeq=nL1SimpleSequences) + \\","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:seqLength=l1SeqLength, nSeq=nL1HubSequences)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:poolingTimeBelow=l1Pooling, outputWidth=patternLen,","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:activity=patternActivity, perfectStability=perfectStability,","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:spHysteresisFactor=spHysteresisFactor)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:\"\"\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(len(SP1._masterConnectedM)!=len(SP2._masterConnectedM)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Connected synapse matrices are different sizes\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:return False","count":18,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(len(SP1._masterPotentialM)!=len(SP2._masterPotentialM)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Potential synapse matrices are different sizes\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(len(SP1._masterPermanenceM)!=len(SP2._masterPermanenceM)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Permanence matrices are different sizes\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:for i in range(0,len(SP1._masterConnectedM)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:connected1 = SP1._masterConnectedM[i]","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:connected2 = SP2._masterConnectedM[i]","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(connected1!=connected2):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Connected Matrices for cell %d different\"  % (i)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:permanences1 = SP1._masterPermanenceM[i];","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:permanences2 = SP2._masterPermanenceM[i];","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(permanences1!=permanences2):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Permanence Matrices for cell %d different\" % (i)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:potential1 = SP1._masterPotentialM[i];","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:potential2 = SP2._masterPotentialM[i];","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(potential1!=potential2):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Potential Matrices for cell %d different\" % (i)","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(not numpy.array_equal(SP1._firingBoostFactors,SP2._firingBoostFactors)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Firing boost factors are different between spatial poolers\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(not numpy.array_equal(SP1._dutyCycleAfterInh,SP2._dutyCycleAfterInh)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Duty cycles after inhibition are different between spatial poolers\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:if(not numpy.array_equal(SP1._dutyCycleBeforeInh,SP2._dutyCycleBeforeInh)):","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print \"Duty cycles before inhibition are different between spatial poolers\"","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:print(\"Spatial Poolers are equivalent\")","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-indentation:return True","count":2,"result_id":2089},{"warning":"5:src\/research\/fdrutilities.py:bad-continuation:interpolation='nearest')","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:InferenceElement)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"Error creating directory \" + \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"Encountered error: '%s' while reporting \" + \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile = claDescriptionTemplateFile)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile):","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:hsVersion=hsVersion,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:for item in metricSpecArgs.iteritems()])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:replacementDict):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_quoteAndEscape(encoder['name']),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:2*_ONE_INDENT,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoder, indent=2*_INDENT_STEP)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_quoteAndEscape(encoderChoices[-1]['name']),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoderChoices, indent=2*_INDENT_STEP)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"ScalarEncoder\", \"LogEncoder\"]:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, n=100, w=width, clipInput=True)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, n=100+width, w=width)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, timeOfDay=(width, 1))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, dayOfWeek=(width, 1))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, weekend=(width))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:encoderKey,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoderDict, indent=2*_INDENT_STEP)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:indent=2*_INDENT_STEP)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'days': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'hours': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'microseconds': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'milliseconds': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'minutes': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'months': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'seconds': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'weeks': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'years': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$SUBSTITUTE'\", \"config['aggregationInfo']\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"When computeInterval is specified, then the stream aggregation \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:options['anomalyParams'], indent=2*_INDENT_STEP)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"computeInterval must be an integer multiple of the stream \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"PermuteChoices(%s)\" % (","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(aggChoices, indent=2*_INDENT_STEP)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:descriptionPyPath,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:tokenReplacements)","count":8,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:hsVersion))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:for ptrn in options['loggedMetrics']]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.multiStepBestPredictions,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric='multiStep',","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params={'errorMetric': metricName,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'window':metricWindow,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'steps': predictionSteps},","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:returnLabel=True)","count":8,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.multiStepPredictions,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=\"multiStep\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=metricParams,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":trivialErrorMetric,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'steps': steps})","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:,\"errorMetric\":\"avg_err\",","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mode_window\":200,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"steps\": steps})","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:,\"errorMetric\":\"altMAPE\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mean_window\":200,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=metricName,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params={'window':metricWindow},","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":trivialErrorMetric})","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":oneGramErrorMetric})","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mode_window\":200})","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.classification,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=\"custom\",","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=options[\"customErrorMetric\"])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$REPLACE_ME'\", \"predictionSteps\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$REPLACE_ME'\", \".*\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:field=metric['field'],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=metric['metric'],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=metric['params'],","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=\\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Tells ExpGenerator to generate an experiment description.py and \" \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Tells ExpGenerator to open the given filename and use it's \" \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:dest = 'claDescriptionTemplateFile',","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:default = 'claDescriptionTemplate.tpl',","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"The file containing the template description file for \" \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Generate the permutations file for this version of hypersearch.\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\" Possible choices are 'v1' and 'v2' [default: %default].\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:parser.get_usage()))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:parser.get_usage(), hsVersion=options.version,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile = options.claDescriptionTemplateFile)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:options.outDir, parser.get_usage(), hsVersion=options.version,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$EXP_GENERATOR_PROGRAM_PATH'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$INFERENCE_TYPE'] = \"'%s'\" % inferenceType","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_ENABLE'] = \"False\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$TP_ENABLE'] = \"False\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_ENABLE'] = \"True\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$TP_ENABLE'] = \"True\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$CLA_CLASSIFIER_IMPL'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ANOMALY_PARAMS'] = pprint.pformat(","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENCODER_SPECS'] = encoderSpecsStr","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SENSOR_AUTO_RESET'] = sensorAutoResetStr","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$AGGREGATION_INFO'] = aggregationInfoStr","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$DATASET_SPEC'] = datasetSpecStr","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ITERATION_COUNT'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_POOL_PCT'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$HS_MIN_PARTICLES'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_PERM_CONNECTED'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$FIELD_PERMUTATION_LIMIT'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_ENCODER_CHOICES'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICTION_STEPS'] = \"'%s'\" % (predictionStepsStr)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICT_AHEAD_TIME'] = predictAheadTimeStr","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_SP_CHOICES'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_SP_CHOICES'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TP_CHOICES'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TP_CHOICES'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_INFERENCE_TYPE_CHOICES'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_INFERENCE_TYPE_CHOICES'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_CL_CHOICES'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_CL_CHOICES'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_ALWAYS_INCLUDE_PREDICTED_FIELD'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MIN_FIELD_CONTRIBUTION'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MIN_FIELD_CONTRIBUTION'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_KILL_USELESS_SWARMS'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_KILL_USELESS_SWARMS'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_FIELD_BRANCHING'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_FIELD_BRANCHING'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS_W_TIMESTAMPS'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS_W_TIMESTAMPS'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FIXED_FIELDS'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FIXED_FIELDS'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FAST_SWARM_MODEL_PARAMS'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FAST_SWARM_MODEL_PARAMS'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_MODELS'] = \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_MODELS'] = \"\"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_AGGREGATION_CHOICES'] = (","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_AGGREGATION_CHOICES'] = aggregationInfoStr","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENVIRONMENT'] = \"'%s'\"%OpfEnvironment.Nupic","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENVIRONMENT'] = \"'%s'\"%OpfEnvironment.Experiment","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:\"\"\"Generate the token substitution for metrics related fields.","count":6,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$LOGGED_METRICS'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$METRICS'] = metricListString","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_OPTIMIZE_SETTING'] \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$INFERENCE_ARGS'] = resultInferenceArgs","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICTION_FIELD'] = predictedField","count":2,"result_id":2089},{"warning":"5:src\/swarming\/exp_generator\/ExpGenerator.py:redefined-variable-type:resultInferenceArgs = resultInferenceArgs.replace(\"'$REPLACE_ME'\",","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:runtimeElement=network.getElement(fromElementName),","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:# TODO: Re-purpose for use with nodes other than PMXClassifierNode.","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:expression=\"self._cd._W\"","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:coincidenceHandle)","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:moduleName,","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:funcName,","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:learningKeys=None,","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:):","count":4,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:learning,","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:**keywords","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:if j in learning)","count":4,"result_id":2089},{"warning":"5:src\/research\/utils.py:bad-continuation:zip(titles, s.splitlines(), maxes))","count":2,"result_id":2089},{"warning":"5:src\/research\/utils.py:using-constant-test:if 0:","count":2,"result_id":2089},{"warning":"5:src\/research\/connections.py:bad-continuation:other.synapsesForSegment(segment))","count":2,"result_id":2089},{"warning":"5:src\/research\/connections.py:bad-continuation:self.synapsesForPresynapticCell(cell))","count":2,"result_id":2089},{"warning":"5:src\/research\/connections.py:bad-continuation:other.synapsesForPresynapticCell(cell))","count":2,"result_id":2089},{"warning":"5:src\/research\/connections.py:bad-continuation:round(synapseData.permanence, 7)))","count":2,"result_id":2089},{"warning":"5:src\/research\/temporal_memory.py:bad-continuation:synapseData.permanence > 0):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:ClientJobsDAO, InvalidConnectionException)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"nupic.hypersearch.swarmMaturityWindow\"))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"nupic.hypersearch.swarmMaxGenerations\"))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.enableSwarmTermination')))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:['com.numenta', self.__class__.__module__, self.__class__.__name__]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'Swarm %s has matured (more than %d generations). Stopping' %","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:(swarmId, self.MAX_GENERATIONS))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"%g on model %s\" % (len(self._allResults), self._bestResult,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:genIdx=None, matured=True)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=self.swarmId, maxGenIdx=maxGenIdx, varName=varName)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:resultsPerChoice.values())","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self.genIdx, pprint.pformat(self.permuteVars, indent=4))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:indent=4))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:['engWorkerState'])[0]","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-indentation:if field =='_classifierInput':","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-indentation:continue","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-indentation:encoderName = self.getEncoderKeyFromName(field)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-indentation:assert encoderName in self._hsObj._encoderNames, \"The field '%s' \" \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-indentation:encoderSet.append(encoderName)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'status': 'active',","count":8,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'bestModelId': None,","count":10,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'bestErrScore': None,","count":10,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'sprintIdx': 0,","count":8,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:}","count":8,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._hsObj._jobID, 'engWorkerState', json.dumps(self._state), None)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._hsObj._jobID, ['engWorkerState'])[0]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'engWorkerState', str(newStateJSON), str(self._priorStateJSON))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:matured=False)[0] for swarmId in activeSwarmIds]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:bestModelId)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'sprintIdx': sprintIdx}","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self.__class__.__module__, self.__class__.__name__]))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:clippedObj(searchParams))))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:bool(int(Configuration.get(","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.speculative.particles.default'))))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.speculative.particles.sleepSecondsMax'))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.max.field.branching'))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.min.field.contribution'))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"Either 'description', 'permutationsPyFilename' or\"","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:dict())","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:maxTimeout=0, eofOnTimeout=True)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'--description=%s' % (","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:json.dumps(self._searchParams['description'])),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'--version=v2',","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'--outDir=%s' % (outDir)])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"Either 'description', 'permutationsPyFilename' or \"","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'description.py')).read()","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.maxUniqueModelAttempts'))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.modelOrphanIntervalSecs'))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.maxPctErrModels'))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'days': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'hours': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'microseconds': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'milliseconds': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'minutes': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'months': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'seconds': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'weeks': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'years': 0,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.minParticlesPerSwarm')","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:'tryAll3FieldCombinationsWTimestamps', False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:' params AND in the permutations file.')","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:InferenceType.TemporalAnomaly]:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:InferenceType.NontemporalClassification):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._modelOrphanIntervalSecs)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:attempt)).digest()","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:dict(engParamsHash=paramsHash,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:completionReason=ClientJobsDAO.CMPL_REASON_ORPHAN,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:completionMsg=\"Orphaned\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=exhaustedSwarmId, matured=False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmId, matured=False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmId, generation=genIdx, errScore=errScore)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._swarmTerminator.swarmScores[swarm])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmId, completed=False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:str(modelIds)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:dict(engStop=ClientJobsDAO.STOP_REASON_KILLED),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:ignoreUnchanged = True)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\" \\n%s\" % (pprint.pformat(self._hsState._state, indent=4)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:['workerCompletionReason', 'workerCompletionMsg'])","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:dict(workerCompletionMsg=\"Job was cancelled\"),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:useConnectionID=False, ignoreUnchanged=True)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"workerCompletionReason to %s. WorkerCompletionMsg: %s\" %","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:(workerCmpReason, workerCmpMsg))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:priorActiveSwarms))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:['workerCompletionReason'])[0]","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._jobID,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:fields=dict(","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:cancel=True,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:workerCompletionMsg = cmpMsg),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:useConnectionID=False,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:ignoreUnchanged=True)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:dict(workerCompletionMsg=cmpMsg),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\" sprints to complete\")","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"before evolving any more particles\" % (sprintIdx))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmId,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:minNumParticles=self._minParticlesPerSwarm)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"%s (sprintIdx=%s) to replace an orphaned model\" % (","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._resultsDB.getParticleInfos(swarmId))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\" %s, %g\" % (0, str(bestPriorModel), errScore))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"model in previous sprint: \\n%s\" % (str(particle)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._resultsDB.getParticleInfos(swarmId, genIdx=None,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId, genIdx=genIdx, matured=False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"to complete a generation before evolving any more particles\" \\","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:dict(engStop=ClientJobsDAO.STOP_REASON_STOPPED),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:fieldName='results',","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:curValue=jobResultsStr,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:newValue=json.dumps(jobResults))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:pctFieldContributions)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmID, completed=False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:modelId, dict(engStop=ClientJobsDAO.STOP_REASON_KILLED),","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:self._getCandidateParticleAndSwarm())","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:\"failed attempts in a row\" % (numAttempts))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:_buildStructuredParams,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:discardNoneKeys=False)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:structuredParams=structuredParams,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:particleState = candidateParticle.getState()","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:exhaustedSwarmId=candidateSwarm)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:% (pprint.pformat(modelParams, indent=4)))","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:completed, completionReason, matured, numRecords):","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:modelParams=modelParams,modelParamsHash=modelParamsHash,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:metricResult=metricResult, completed=completed,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:completionReason=completionReason, matured=matured,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:numRecords=numRecords)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:modelID=modelID,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:jobID=jobID,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:baseDescription=self._baseDescription,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:params=structuredParams,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:predictedField=self._predictedField,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:reportKeys=self._reportKeys,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:optimizeKey=self._optimizeKey,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:jobsDAO=jobsDAO,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:modelCheckpointGUID=modelCheckpointGUID,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:logLevel=logLevel,","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:predictionCacheMaxRecords=self._predictionCacheMaxRecords)","count":4,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:params=dummyParams,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:completionReason = cmpReason,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:completionMsg = cmpMsg,","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:bad-continuation:cpuTime = time.clock() - cpuTimeStart)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:cell-var-from-loop:if flatKey in useEncoders:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:cell-var-from-loop:return value.getDict(flatKey, position)","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:cell-var-from-loop:elif flatKey in position:","count":2,"result_id":2089},{"warning":"5:src\/swarming\/HypersearchV2.py:cell-var-from-loop:return position[flatKey]","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:numberOfCols = numberOfCols,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:cellsPerColumn = cellsPerColumn,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:initialPerm = initialPerm,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:connectedPerm = connectedPerm,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:minThreshold = minThreshold,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:newSynapseCount = newSynapseCount,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:permanenceInc = permanenceInc,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:permanenceDec = permanenceDec,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:permanenceMax = permanenceMax, # never exceed this value","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:globalDecay = globalDecay,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:activationThreshold = activationThreshold,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:doPooling = doPooling,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:segUpdateValidDuration = segUpdateValidDuration,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:burnIn = burnIn,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:collectStats = collectStats,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:seed = seed,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:verbosity = verbosity,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:pamLength = pamLength,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:maxInfBacktrack = maxInfBacktrack,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:maxLrnBacktrack = maxLrnBacktrack,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:maxAge = maxAge,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:maxSeqLength = maxSeqLength,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:maxSegmentsPerCell = maxSegmentsPerCell,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:maxSynapsesPerSegment = maxSynapsesPerSegment,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:outputType = outputType,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.cellsPerColumn,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.activationThreshold,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.minThreshold,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.newSynapseCount,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.segUpdateValidDuration,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.initialPerm,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.connectedPerm,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.permanenceMax,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.permanenceDec,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.permanenceInc,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.globalDecay,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.doPooling,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.seed,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.allocateStatesInCPP,","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.checkSynapseConsistency)","count":4,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.infActiveState[\"t\"], self.infActiveState[\"t-1\"],","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.infPredictedState[\"t\"], self.infPredictedState[\"t-1\"],","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.colConfidence[\"t\"], self.colConfidence[\"t-1\"],","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.cellConfidence[\"t\"], self.cellConfidence[\"t-1\"])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:self.cells4.getNLrnIterations(), False, True)),","count":2,"result_id":2089},{"warning":"5:src\/research\/TP10X2.py:bad-continuation:seg.getTotalActivations()),","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:self._mmData[\"predictedActiveCellsForSequence\"].values()):","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:(synapseData.presynapticCell, synapseData.permanence))","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:self._mmData[\"predictedActiveCellsForSequence\"].iteritems()):","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:\"predicted => active cells (correct)\")","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:\"predicted => inactive cells (extra)\")","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:\"predicted => active columns (correct)\")","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:\"predicted => inactive columns (extra)\")","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:\"unpredicted => active columns (bursting)\")","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:for trace in self.mmGetDefaultTraces()[:-3]] +","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:for trace in self.mmGetDefaultTraces()[-3:-1]] +","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/trace.py:bad-continuation:datum.min, datum.max, datum.sum, datum.mean, datum.standardDeviation)","count":2,"result_id":2089},{"warning":"5:src\/research\/monitor_mixin\/monitor_mixin_base.py:bad-continuation:[trace.prettyPrintDatum(trace.data[i]) for trace in traces])","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:xrange(self._numColumns)])","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:\"value of stimulusThreshold that is too large relative \" +","count":4,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:\"to the input size.\")","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:\"Input vector dimensions don't match. Expecting %s but got %s\" % (","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:inputVector.size, self._numInputs))","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._minPctOverlapDutyCycles * self._overlapDutyCycles.max()","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._minPctActiveDutyCycles * self._activeDutyCycles.max()","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._getNeighborsND(i, self._columnDimensions,","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._inhibitionRadius))","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._overlapDutyCycles,","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:overlapArray,","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:period","count":4,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:)","count":6,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._activeDutyCycles,","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:activeArray,","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:[self._avgConnectedSpanForColumnND(i)","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:for i in xrange(self._numColumns)]","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:< self._minOverlapDutyCycles)[0]","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:\"to the input size. [len(mask) < self._stimulusThreshold]\")","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._synPermMax - self._synPermConnected)*self._random.getReal64()","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._minActiveDutyCycles[mask] * self._activeDutyCycles[mask]","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:).astype(realDType) + self._maxBoost","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._minActiveDutyCycles] = 1.0","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:** self._columnDimensions.size)","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:self._inhibitionRadius)","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:itertools.product(rowRange, colRange)]","count":2,"result_id":2089},{"warning":"5:src\/research\/spatial_pooler.py:bad-continuation:itertools.product(*rangeND)]","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/cla_classifier_diff.py:bad-continuation:self._fastCLAClassifier))","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/cla_classifier_diff.py:bad-continuation:'Python CLAClassifier has value %f and C++ FastCLAClassifier has '","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/cla_classifier_diff.py:bad-continuation:'Python CLAClassifier has value %s and C++ FastCLAClassifier has '","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/anomaly.py:bad-continuation:not isinstance(binaryAnomalyThreshold, float) or","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/anomaly.py:bad-continuation:binaryAnomalyThreshold >= 1.0  or","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/anomaly.py:bad-continuation:binaryAnomalyThreshold <= 0.0 ):","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/anomaly.py:bad-continuation:inputValue=None, timestamp=None):","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/anomaly.py:bad-continuation:\"requires 'inputValue' as parameter to compute() method. \")","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/anomaly.py:bad-continuation:inputValue, anomalyScore, timestamp)","count":4,"result_id":2089},{"warning":"5:src\/data\/dictutils.py:bad-continuation:resultDict['differentValues']) and different) or not different)","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:exact=False,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:distanceNorm=2.0,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:distanceMethod=\"norm\",","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:distThreshold=0,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:doBinarization=False,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:binarizationThreshold=0.5,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:useSparseMemory=True,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:sparseThreshold=0.1,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:relativeThreshold=False,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:numWinners=0,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:numSVDSamples=None,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:numSVDDims=None,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:fractionOfMax=None,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:verbosity=0,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:maxStoredPatterns=-1,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:replaceDuplicates=False,","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:cellsPerCol=0):","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:denseInput = numpy.zeros(isSparse)","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:denseInput[inputPattern] = 1.0","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:inputPattern = denseInput","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:isSparse = 0","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:self.cellsPerCol).min(axis=1).nonzero()[0]","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:self.computeSVD()","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:self.numSVDDims = self.getAdaptiveSVDDims(self._s, self.fractionOfMax)","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-indentation:self.numSVDDims = self.getAdaptiveSVDDims(self._s)","count":2,"result_id":2089},{"warning":"5:src\/algorithms\/KNNClassifier.py:bad-continuation:\"Verison\")","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:\"maxSynapsesPerSegment >= newSynapseCount. (Currently %s >= %s)\" % (","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:maxSynapsesPerSegment, newSynapseCount))","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:numpy.zeros((self.numberOfCols, self.cellsPerColumn),","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['curPredictionScore2'])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['predictionScoreTotal2'] \/ nPredictions)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['curFalseNegativeScore'])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['falseNegativeScoreTotal'] \/ nPredictions)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['curFalsePositiveScore'])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['falsePositiveScoreTotal'] \/ nPredictions)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['prevSequenceSignature'])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:patternNZs=[bottomUpNZ], output=predictedState,","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:colConfidence=colConfidence)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:confidences2[0])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.infActiveState['t'].min(axis=1).sum()),","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['curPredictionScore2']),","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._internalStats['curFalsePositiveScore']),","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:1 - self._internalStats['curFalseNegativeScore'])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.infActiveState['t'].sum())","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.infPredictedState['t'].sum())","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.lrnActiveState['t'].sum())","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.lrnPredictedState['t'].sum())","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:]","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:\"Trying to lock-on using startCell state from %d steps ago:\" % (","count":4,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:numPrevPatterns - 1 - startOffset),","count":6,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._prevInfPatterns[startOffset])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:useStartCells = (offset == startOffset))","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.infPredictedState['t'][:, :])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.infPredictedState['candidate'][:, :])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:s, self.infActiveState['t'], connectedSynapsesOnly=False)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self._prevLrnPatterns[startOffset])","count":4,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:\"Locking on using startCell state from %d steps ago:\" % (","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:c, self.lrnActiveState['t-1'], self.minThreshold)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:c, i, s, self.lrnActiveState['t-1'], newSynapses = True)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:minNumSyns = 0)","count":4,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:c, i, None, self.lrnActiveState['t-1'], newSynapses=True)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:c, self.lrnActiveState['t'], minThreshold = self.activationThreshold)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:c, i, s, activeState=self.lrnActiveState['t'],","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:newSynapses=(numActive < self.newSynapseCount))","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.lrnActiveState['t-1'])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:self.lrnActiveState['t-1'], newSynapses=True)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:colIdx=c, cellIdx=i, segList=self.cells[c][i],","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:minPermanence=minPermanence, minNumSyns=minNumSyns)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:bestActivityInCol)","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:candidateCellIdxs[self._random.getUInt32(len(candidateCellIdxs))])","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:colIdx, candidateCellIdx, len(self.cells[colIdx][candidateCellIdx]))","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:segUpdate.segment))","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:perms.argsort()[0:numToFree]]","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:perms.argsort()[0:moreToFree]]","count":2,"result_id":2089},{"warning":"5:src\/research\/TP.py:bad-continuation:len(candidates)), candidates","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:jsonschema.__name__, \"stream_def.json\"))","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:streamTimeFieldName,","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:streamSequenceFieldName)","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:\"is not present in the underlying stream which has the following \"","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:aggregationInfo=streamDef.get('aggregation', None),","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:inputFields=recordStoreFields,","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:timeFieldName=streamDef.get('timeField', None),","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:sequenceIdFieldName=streamDef.get('sequenceIdField', None),","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:resetFieldName=streamDef.get('resetField', None))","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:streamDef.get('aggregation'))","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:self._recordStore.getNextRecordIdx()-1, preAggValues)","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:'%r. Bookmark: %r',","count":2,"result_id":2089},{"warning":"5:src\/data\/stream_reader.py:bad-continuation:self._recordCount-1, fieldValues, self._aggBookmark)","count":2,"result_id":2089},{"warning":"5:src\/data\/inference_shifter.py:bad-continuation:self._inferenceBuffer[delay][inferenceElement])","count":2,"result_id":2089},{"warning":"5:src\/data\/functionsource.py:bad-continuation:\"Internal error -- sequence info type not set in RecordSensor\")","count":2,"result_id":2089},{"warning":"5:src\/data\/aggregator.py:bad-continuation:hours=aggDef['hours'],","count":2,"result_id":2089},{"warning":"5:src\/data\/aggregator.py:bad-continuation:minutes=aggDef['minutes'],","count":2,"result_id":2089},{"warning":"5:src\/data\/aggregator.py:bad-continuation:seconds=aggDef['seconds'],","count":2,"result_id":2089},{"warning":"5:src\/data\/aggregator.py:bad-continuation:milliseconds=aggDef['milliseconds'],","count":2,"result_id":2089},{"warning":"5:src\/data\/aggregator.py:bad-continuation:microseconds=aggDef['microseconds'],","count":2,"result_id":2089},{"warning":"5:src\/data\/aggregator.py:bad-continuation:weeks=aggDef['weeks'])","count":2,"result_id":2089},{"warning":"5:src\/data\/stats_v2.py:bad-continuation:)","count":2,"result_id":2089},{"warning":"5:src\/data\/stats_v2.py:bad-continuation:}","count":2,"result_id":2089},{"warning":"5:src\/data\/file_record_stream.py:bad-continuation:serializeTimestamp, serializeTimestampNoMS, escape, unescape, parseSdr,","count":2,"result_id":2089},{"warning":"5:src\/data\/file_record_stream.py:bad-continuation:serializeSdr, parseStringList, stripList)","count":2,"result_id":2089},{"warning":"5:src\/data\/file_record_stream.py:bad-continuation:\"Only bookmark or firstRecord can be specified, not both\")","count":2,"result_id":2089},{"warning":"5:src\/data\/file_record_stream.py:bad-continuation:realpath, bookMarkDict)","count":2,"result_id":2089},{"warning":"5:src\/data\/sorter.py:bad-continuation:('f1', 'int', ''),","count":2,"result_id":2089},{"warning":"5:src\/data\/sorter.py:bad-continuation:('f2', 'int', ''),","count":2,"result_id":2089},{"warning":"5:src\/data\/sorter.py:bad-continuation:('f3', 'int', ''),","count":2,"result_id":2089},{"warning":"5:src\/data\/sorter.py:bad-continuation:('payload', 'string', '')","count":2,"result_id":2089},{"warning":"5:src\/data\/generators\/distributions.py:bad-continuation:standardDeviation=self.std, numOfValues=self.valueNum)","count":2,"result_id":2089},{"warning":"5:src\/data\/generators\/data_generator.py:bad-continuation:\"some required constructor parameters. Parameters \"","count":2,"result_id":2089},{"warning":"5:src\/data\/generators\/data_generator.py:bad-continuation:'or dataType must be specified')","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"spVerbosity\": _VERBOSITY,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"spatialImp\": \"cpp\",","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"globalInhibition\": 1,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"columnCount\": 2048,","count":4,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"inputWidth\": 0,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"numActiveColumnsPerInhArea\": 40,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"seed\": 1956,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"potentialPct\": 0.8,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermConnected\": 0.1,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermActiveInc\": 0.0001,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermInactiveDec\": 0.0005,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"maxBoost\": 1.0,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"verbosity\": _VERBOSITY,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"cellsPerColumn\": 32,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"inputWidth\": 2048,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"seed\": 1960,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"temporalImp\": \"cpp\",","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"newSynapseCount\": 20,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"maxSynapsesPerSegment\": 32,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"maxSegmentsPerCell\": 128,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"initialPerm\": 0.21,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"permanenceInc\": 0.1,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"permanenceDec\": 0.1,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"globalDecay\": 0.0,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"maxAge\": 0,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"minThreshold\": 9,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"activationThreshold\": 12,","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"outputType\": \"normal\",","count":2,"result_id":2089},{"warning":"5:src\/engine\/common_networks\/__init__.py:bad-continuation:\"pamLength\": 3,","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:(paramName, self.name, self.type))","count":4,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:doc='@property:place_holder(Region.getType)')","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:doc='@property:place_holder(Region.getSpec)')","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:(engine.Network.getRegions, 'Get the collection of regions in a network'),","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:name,","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:nodeType,","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:dimensions,","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:bundlePath,","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:bad-continuation:label)","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:pointless-statement:self.__class__.__doc__ == collection.__class__.__doc__","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:pointless-statement:self.__class__.__doc__ == item.__class__.__doc__","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:pointless-statement:self.__class__.__doc__ == spec.__class__.__doc__","count":2,"result_id":2089},{"warning":"5:src\/engine\/__init__.py:pointless-statement:self.__class__.__doc__ == region.__class__.__doc__","count":2,"result_id":2089},{"warning":"5:src\/image\/__init__.py:bad-continuation:cropStart[0] + width, cropStart[1] + height))","count":2,"result_id":2089},{"warning":"5:src\/image\/__init__.py:bad-continuation:maskScale=1.0):","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:self._clsNumOutstanding, g_max_concurrency, self,","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:len(self._clsOutstandingInstances), self._clsOutstandingInstances,)","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:creator = pymysql,","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:host = Configuration.get('nupic.cluster.database.host'),","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:port = int(Configuration.get('nupic.cluster.database.port')),","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:user = Configuration.get('nupic.cluster.database.user'),","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:passwd = Configuration.get('nupic.cluster.database.passwd'),","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:charset = 'utf8',","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:use_unicode = True,","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:bad-continuation:setsession = ['SET AUTOCOMMIT = 1'])","count":2,"result_id":2089},{"warning":"5:src\/database\/Connection.py:redefined-variable-type:policy = PooledConnectionPolicy()","count":2,"result_id":2089},{"warning":"5:src\/encoders\/random_distributed_scalar.py:bad-continuation:(self._maxBuckets\/2) + int(round((x - self._offset) \/ self.resolution))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/random_distributed_scalar.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(x))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/adaptivescalar.py:bad-continuation:resolution=0, name=None, verbosity=0, clipInput=True, forced=False):","count":2,"result_id":2089},{"warning":"5:src\/encoders\/adaptivescalar.py:bad-continuation:clipInput=True, name=name, verbosity=verbosity, forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/adaptivescalar.py:bad-indentation:return","count":2,"result_id":2089},{"warning":"5:src\/encoders\/adaptivescalar.py:bad-indentation:output[0:self.n] = 0","count":2,"result_id":2089},{"warning":"5:src\/encoders\/adaptivescalar.py:bad-continuation:encoding=numpy.zeros(self.n))]","count":4,"result_id":2089},{"warning":"5:src\/encoders\/sparse_pass_through_encoder.py:bad-continuation:n, w, name, forced, verbosity)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/date.py:bad-continuation:name = '', forced=True):","count":2,"result_id":2089},{"warning":"5:src\/encoders\/date.py:bad-continuation:periodic=False, radius=1,","count":2,"result_id":2089},{"warning":"5:src\/encoders\/date.py:bad-continuation:name=customDayEncoderName, forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/date.py:bad-continuation:periodic=True, radius=radius, name=\"time of day\", forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/date.py:bad-continuation:type(input), str(input)))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/date.py:redefined-variable-type:radius = 1","count":2,"result_id":2089},{"warning":"5:src\/encoders\/category.py:bad-continuation:radius=1, periodic=False, forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/category.py:bad-continuation:encoding=bucketInfo.encoding)]","count":2,"result_id":2089},{"warning":"5:src\/encoders\/scalar.py:bad-continuation:\"or equal to maxval %s. minval must be strictly less \"","count":2,"result_id":2089},{"warning":"5:src\/encoders\/scalar.py:bad-continuation:% self.w)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/scalar.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(input))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/base.py:bad-continuation:parentFieldName=parentName)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/base.py:anomalous-backslash-in-string:\"\"\"An encoder converts a value to a sparse distributed representation.","count":8,"result_id":2089},{"warning":"5:src\/encoders\/delta.py:bad-continuation:resolution=0, name=None, verbosity=0, clipInput=True, forced=False):","count":2,"result_id":2089},{"warning":"5:src\/encoders\/delta.py:bad-continuation:maxval=maxval, clipInput=True, name=name, verbosity=verbosity, forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/delta.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(input))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/delta.py:bad-continuation:encoding=numpy.zeros(self.n))]","count":2,"result_id":2089},{"warning":"5:src\/encoders\/delta.py:bad-continuation:scalar=ret[0].scalar+self._prevAbsolute,","count":2,"result_id":2089},{"warning":"5:src\/encoders\/delta.py:bad-continuation:encoding=ret[0].encoding)]","count":2,"result_id":2089},{"warning":"5:src\/encoders\/multi.py:bad-indentation:encoder.encodeIntoArray(self._getInputValue(obj, name), output[offset:])","count":2,"result_id":2089},{"warning":"5:src\/encoders\/multi.py:bad-continuation:\"some required constructor parameters. Parameters \"","count":2,"result_id":2089},{"warning":"5:src\/encoders\/scalarspace.py:bad-continuation:resolution=0, name=None, verbosity=0, clipInput=False,","count":2,"result_id":2089},{"warning":"5:src\/encoders\/scalarspace.py:bad-continuation:space=\"absolute\", forced=False):","count":2,"result_id":2089},{"warning":"5:src\/encoders\/scalarspace.py:bad-continuation:resolution,name,verbosity,clipInput, forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/pass_through_encoder.py:bad-continuation:len(inputVal), len(outputVal)))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/pass_through_encoder.py:bad-continuation:sum(inputVal), self.w))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/geospatial_coordinate.py:bad-continuation:(coordinate, radius), output)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/sdrcategory.py:bad-continuation:\"the output width (%d)\" % (self.w, self.n))","count":2,"result_id":2089},{"warning":"5:src\/encoders\/sdrcategory.py:bad-continuation:% self.w)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/sdrcategory.py:bad-indentation:return numpy.array([0])","count":2,"result_id":2089},{"warning":"5:src\/encoders\/logenc.py:bad-continuation:forced=forced)","count":2,"result_id":2089},{"warning":"5:src\/encoders\/logenc.py:bad-continuation:encoding = scaledResult.encoding)]","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:'int': int,","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:'uint': int,","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:'bool': bool,","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:'str': str,","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:'float': float,","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:'Handle': object,","count":2,"result_id":2089},{"warning":"5:src\/regions\/Spec.py:bad-continuation:}","count":2,"result_id":2089},{"warning":"5:src\/regions\/TestRegion.py:bad-continuation:bottomUpIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/TestRegion.py:bad-continuation:topDownIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/TestRegion.py:bad-continuation:\"Set identity policy instance BERORE running the network. \" + \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/TestRegion.py:bad-continuation:\"Returns identity policy instance that was associated with \" + \\","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:(self.__getDBNameForVersion(i),))","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# unique jobID","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# name of client (UI, StrmMgr, etc.)","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Arbitrary data defined by the client","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Foreign key as defined by the client.","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# command line to use to launch each worker process","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# JSON encoded params for the job, for use by the worker processes","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# unique hash of the job, provided by the client. Used for detecting","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# One of the STATUS_XXX enumerated value strings","count":4,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# One of the CMPL_REASON_XXX enumerated value strings.","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Why this job completed, according to job-tracker","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# One of the CMPL_REASON_XXX enumerated value strings. This is","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Why this job completed, according to workers. If","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# set by UI, polled by engine","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# When job started","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# When job ended","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# JSON dict with general information about the results of the job,","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# String used to specify the type of job that this is. Current","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# min number of desired workers at a time. If 0, no workers will be","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# max number of desired workers at a time. If 0, then use as many","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# job scheduling priority; 0 is the default priority (","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Should the scheduling algorithm allocate new workers to this job?","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# If a specialized worker fails or is killed by the scheduler, we","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# The number of failed specialized workers for this job. If the","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Error message of the most recent specialized failed worker","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Has the job been garbage collected, this includes removing","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# The contents of the generated description.py file from hypersearch","count":4,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# The contents of the generated permutations.py file from","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# time stamp of last update, used for detecting stalled jobs","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# ID of the CJM starting up this job","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# JSON encoded state of the hypersearch in progress, for private","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# String used for status messages sent from the engine for","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# JSon encoded object with information about global model milestone","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# globally unique model ID","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# jobID","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# JSON encoded params for the model","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# One of the CMPL_REASON_XXX enumerated value strings","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Why this job completed","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# JSON encoded structure containing metrics produced by the model","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:#Value of the particular metric we are optimizing in hypersearch","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# incremented by engine every time the results is updated","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# number of records processed so far","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# When this model started being evaluated","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# When this model completed","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# How much actual CPU time was spent on this model, in seconds. This","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Checkpoint identifier for this model (after it has been saved)","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# MD5 hash of the params","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# MD5 hash of the particle info for PSO algorithm","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# time stamp of last update, used for detecting stalled workers","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Hadoop Task Tracker ID","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Hadoop Map Task ID","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Hadoop Map task attempt ID","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# database client connection ID of the worker that is running this","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# A JSON encoded list of metric values for the model at each","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# One of the STOP_REASON_XXX enumerated value strings. Set either by","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:# Set by the model maturity-checker when it decides that this model","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:self, conn, client, cmdLine, jobHash, clientInfo, clientKey, params,","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:minimumWorkers, maximumWorkers, jobType, priority, alreadyRunning):","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:jobID, status))","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:self.modelsTableName)","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:fields=dbFieldStr, models=self.modelsTableName)","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:fields, modelID, self._connectionID, numAffectedRows, query,","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:sqlParams,))","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:help=\"Print the name of the database that will be used to stdout \"","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:bad-continuation:\" [default: %default]\")","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:redefined-variable-type:assignments = ', '.join(assignments)","count":2,"result_id":2089},{"warning":"5:src\/database\/ClientJobsDAO.py:redefined-variable-type:sqlParams = [jobID, paramsHash, particleHash]","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:\"'cpp'\" % (spatialImp))","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:description=\"\"\"Which spatial pooler implementation to use. Set to either","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:dataType='Byte',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:count=0,","count":6,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:constraints='enum: py, cpp'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:for name in self._spatialArgNames)","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:bottomUpIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:description=\"\"\"The input vector.\"\"\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:dataType='Real32',","count":6,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:required=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:regionLevel=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:isDefaultInput=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:requireSplitterMap=False),","count":6,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:resetIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:description=\"\"\"A boolean flag that indicates whether","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:count=1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:required=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:regionLevel=True,","count":4,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:isDefaultInput=False,","count":4,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:topDownIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:description=\"\"\"The top-down input signal, generated from","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:required = False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:dtype=GetNTAReal())","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:]","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:'_loaded',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:'_profileObj',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SPRegion.py:bad-continuation:'_iterations',","count":2,"result_id":2089},{"warning":"5:src\/regions\/RecordSensor.py:bad-continuation:\"FileRecordStream\"),","count":2,"result_id":2089},{"warning":"5:src\/regions\/RecordSensor.py:bad-continuation:'to compute into topDownOut (default 0).',","count":2,"result_id":2089},{"warning":"5:src\/regions\/RecordSensor.py:bad-continuation:\"spatialTopDownOut and temporalTopDownOut should be the same size\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:description=KNNAnomalyClassifierRegion.__doc__,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:inputs=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:outputs=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:parameters=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:commands=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"Returns a list of label dicts with properties ROWID and labels.\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"Takes parameters start, end and labelName. Adds the label \"","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"Takes additional parameters start, end, labelFilter.  Start and \"","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"must be a number.\" % (type(value)))","count":4,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"value must be valid record within output stream. Current minimum \"","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"classificationMaxDist must be a number.\" % (type(value)))","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:activeSPColumns)","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:spSize )","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\" 'sp_tpe', current value is %s\" % (self.classificationVectorType))","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:#at beginning of model.run","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:not r.setByUser and r.ROWID in prototype_idx])","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:self._knnclassifier.getParameter('categoryRecencyList'))","count":4,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:(classifier_indexes >= self.getParameter('trainRecords')) &","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:(classifier_indexes < record.ROWID)","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:debugInfo={","count":4,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"Model has no saved records.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"'removeLabels'. Model has no saved records.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"'removeLabels'.\", debugInfo={","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"version: %s\" % (KNNAnomalyClassifierRegion.__VERSION__))","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:b[i].__getstate__()))","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:\"setByUser\"]","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:setByUser=False):","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:description=KNNClassifierRegion.__doc__,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:inputs=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:outputs=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:description='A vector representing, for each category '","count":4,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:dataType='Real32',","count":6,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:count=0,","count":6,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:regionLevel=True,","count":6,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:isDefaultOutput=True),","count":4,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:description='A vector that lists, in descending order of '","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:isDefaultOutput=False),","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:parameters=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:#accessMode='Create'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'prototypes. Possible options are norm, rawOverlap, '","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'pctOverlapOfProto',","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'each category based on the distance to the nearest neighbor of '","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'stored. All elements are stored if 0.',","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'be \"sphered\" (i.e. each dimension should be normalized such'","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'that many samples have been seen.',","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'colum ',","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:),","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:k=k,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:distanceNorm=distanceNorm,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:distanceMethod=distanceMethod,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:distThreshold=distThreshold,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:doBinarization=doBinarization,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:binarizationThreshold=inputThresh,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:useSparseMemory=useSparseMemory,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:sparseThreshold=sparseThreshold,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:relativeThreshold=relativeThreshold,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:numWinners=winnerCount,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:numSVDSamples=SVDSampleCount,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:numSVDDims=SVDDimCount,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:fractionOfMax=fractionOfMax,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:verbosity=clVerbosity,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:replaceDuplicates=replaceDuplicates,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:cellsPerCol=cellsPerCol,","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:maxStoredPatterns=maxStoredPatterns","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'_categoryDistances']","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:self._protoScores.dtype)","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'classifier',","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'py.KNNClassifierRegion',","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'{ maxCategoryCount: 48, SVDSampleCount: 400, ' +","count":2,"result_id":2089},{"warning":"5:src\/regions\/KNNClassifierRegion.py:bad-continuation:'  SVDDimCount: 20, distanceNorm: 0.6 }')","count":2,"result_id":2089},{"warning":"5:src\/regions\/PyRegion.py:pointless-statement:decorated.__doc__ == f.__doc__","count":2,"result_id":2089},{"warning":"5:src\/regions\/CLAClassifierRegion.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"description\": (\"Region that computes anomaly scores from temporal \"","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"singleNodeOnly\": True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"inputs\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"activeColumns\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The currently active columns.\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"regionLevel\": True,","count":6,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"dataType\": \"Real32\",","count":6,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"count\": 0,","count":4,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"required\": True,","count":4,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"isDefaultInput\": False,","count":4,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"requireSplitterMap\": False,","count":4,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"predictedColumns\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The currently predicted columns.\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"outputs\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"rawAnomalyScore\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The raw anomaly score.\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"count\": 1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"isDefaultOutput\": True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"parameters\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:\"commands\": {","count":2,"result_id":2089},{"warning":"5:src\/regions\/AnomalyRegion.py:bad-continuation:activeColumns, self.prevPredictedColumns)","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:\"'cpp', and 'tm_py'\" % (temporalImp))","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:for name in self._temporalArgNames)","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:numberOfCols=self.columnCount,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:cellsPerColumn=self.cellsPerColumn,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:**autoArgs)","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:self.cellsPerColumn).max(axis=1)","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:bottomUpIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:description=\"\"\"The input signal, conceptually organized as an","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:dataType='Real32',","count":4,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:count=0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:required=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:regionLevel=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:isDefaultInput=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:requireSplitterMap=False),","count":4,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:resetIn=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:description=\"\"\"Effectively a boolean flag that indicates whether","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:count=1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:required=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:regionLevel=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:isDefaultInput=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:'_loaded',","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:'_profileObj',","count":2,"result_id":2089},{"warning":"5:src\/regions\/TPRegion.py:bad-continuation:'_iterations',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:categoriesOut=2,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:# SVM parameter ranges","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:minC=0.0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:maxC=0.0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:minGamma=0.0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:maxGamma=0.0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:kernelType='rbf',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:# Latin Hypercube sampling (LHS)","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:numSamplesPerRecursion=1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:numRecursions=0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:contractionFactor=0.3,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:numCrossValidations=5,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:# Implementation","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:convEpsilon=0.01,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:useSparseSvm=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:inputThresh=0.500,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:useProbabilisticSvm=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:doSphering=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:deterministic=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:nta_cpp_svm_seed=-1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:# PCA","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:numSVDSamples=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:numSVDDims=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fractionOfMax=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:useAuxiliary=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:justUseAuxiliary=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:discardProblem=True,  # Set to False to keep data for PCA visualizer","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:# KNN-type stuff","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:keepSamples=False,  # Keep the original inputs around","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:calculateDistances=False,  # Calculate and store distances to orig. inputs","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:nta_monitorMemory=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._inferenceMode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setInferenceMode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:doc=\"\"\"Boolean indicating whether or not a node","count":4,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._learningMode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setLearningMode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._mode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setMode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:doc=\"\"\"We operate in two modes: 'classification' - the SVM is","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._kernelType,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setKernelType,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:# Doc provided with constraints in NodeSpec.","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:description=SVMClassifierNode.__doc__,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:inputs=[","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:NodeSpecItem(name=\"auxDataIn\", type=RealTypeName,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:outputs=[","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:description=\"A vector representing, for each category\" \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:parameters=[","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:constraints=\"enum: %s,%s\" % (","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:\",\".join(_kKernelTypes),","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:\",\".join(map(str, xrange(len(_kKernelTypes))))","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:description=\"\"\"Set true to seed random number generator so that the SVM","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:'_rng',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTuneSamples',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTuneLabels',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTunePartitionIds',","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:]","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:(bestSamplePoint, bestAccuracy, svmModel))","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:if self._numSVDDims:","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:numDims = self._numSVDDims","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:else:","count":4,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:numDims = self._inputWidth","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:if self._mode == 'feedback' or self._kernelType == 'linear':","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:kernelType = 0","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:elif self._kernelType == 'rbf':","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:kernelType = 1","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:if self.useSparseSvm:","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:svm = svm_01(kernelType,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:n_dims=numDims,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:threshold=self.inputThresh,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:probability=self.useProbabilisticSvm,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:seed=self.cpp_svm_seed)","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:svm = svm_dense(kernelType,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:for k, label in enumerate(self._labels):","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:sample = self._samples[k]","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:if label != -1:","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-indentation:svm.add_sample(self._catIdMap.index(label), sample)","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:gamma=valueGamma,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:C=valueC,","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:bad-continuation:eps=self.convEpsilon)","count":2,"result_id":2089},{"warning":"5:src\/regions\/SVMClassifierNode.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:0: (quadrantPosn - radialLength, -radialLength),","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:1: (radialLength, quadrantPosn - radialLength),","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:2: (radialLength - quadrantPosn, radialLength),","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:3: (-radialLength, radialLength - quadrantPosn),","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:}[quadrantIndex]","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/random1DOF.py:bad-continuation:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/blockSpread.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/regions\/PictureSensorExplorers\/random.py:bad-continuation:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:blankWithReset=False, background=255, invertOutput=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:filters=[], postFilters=[], explorer=\"Flash\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:categoryOutputFile=\"\", logText=False, logOutputImages=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:logOriginalImages=False, logFilteredImages=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:logLocationImages=False, logLocationOnOriginalImage=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:logBoundingBox=False, logDir=\"imagesensor_log\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:automaskingTolerance=0, automaskingPadding=0, memoryLimit=100,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:minimalBoundingBox=False, dataOut=None, categoryOut=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:partitionOut=None, resetOut=None, bboxOut=None, alphaOut=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:useAux=False, auxDataOut=None, auxDataWidth=None, **keywds):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:clearImageList=True, skipExplorerUpdate=False, auxPath=None, userAuxData=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:sequenceIndex=None, frameIndex=None):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:categoryName=categoryName, auxPath=auxPath, manualAux = manualAux,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:userAuxData=userAuxData, sequenceIndex=sequenceIndex, frameIndex=frameIndex)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:clearImageList=True):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:first=None, last=None, subsample=1, clearImageList=True,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:strictMaskLocations=True, categoryNameFilter=None, pattern=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:skipInterval=None, skipOffset=None, useCategories=True, auxPath=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:auxType=None):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:or skipOffset >= skipInterval):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:[r.match(c) is not None for r in matchers]]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:if os.path.splitext(f)[1].lower() in extensions]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-indentation:currentAuxPath =  []","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-indentation:for k in range(0, len(auxPath)):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-indentation:currentAuxPath.append(\"\".join([auxPath[k],imageName[1]+auxType[k]]))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-indentation:currentAuxPath = None","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:categoryName=images[i][2], clearImageList=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:skipExplorerUpdate=True, auxPath=currentAuxPath,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:sequenceIndex=sequenceInfo[i][0], frameIndex=sequenceInfo[i][1])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:reset=None, sequenceIndex=None, frameIndex=None):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:'reset': reset}","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:protocol=pickle.HIGHEST_PROTOCOL)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:categoryName=None, erode=None, userAuxData=None, auxPath=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:manualAux=False, sequenceIndex=None, frameIndex=None):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:ImageChops.constant(item['image'], self.background))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:ImageChops.constant(item['image'],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:self.automaskingTolerance))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"did not return the correct number of outputs. The number of images \" +","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"that it returned does not match the return value of the filter's \" +","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"getOutputCount() method.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:filterIndex, image.mode)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:self.filters[filterIndex][0], '%09d' % imageIndex)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"did not return the correct number of outputs\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:self.postFilters[filterIndex][0])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:filterIndex)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:for i, image in enumerate(newImages)]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\" send out simultaneously, which does not match ImageSensor's\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:if name != 'self']","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\" filtered image does not match the size of the original\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"images (multiple simultaneous responses). \"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"index %d of %d, \" % (i, len(self.filters)-1) +","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:\"creates %d simultaneous responses.\" % outputCount[1])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:numFilterOutputs=self._getNumFilterOutputs(self.filters))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:+ \"list\/tuple of two ints from getOutputCount()\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:% moduleName, {}, {}, className)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:numFilters=len(self.filters),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:numFilterOutputs=self._getNumFilterOutputs(self.filters),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:enabledWidth=self.enabledWidth, enabledHeight=self.enabledHeight,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:blankWithReset=self.blankWithReset)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:for image in outputImages]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:croppedArrays[0].shape != (self.height, self.width))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:for i in xrange(self.depth)]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:'blankWithReset', 'enabledWidth', 'enabledHeight', 'invertOutput',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:'background', 'automaskingTolerance', 'automaskingPadding',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:'memoryLimit', 'minimalBoundingBox', '_cubeOutputs', '_auxDataWidth']:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:'resetExplorer': resetExplorer, 'resetFilters': resetFilters,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:'resetPostFilters': resetPostFilters})","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:dataOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:categoryOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:resetOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:bboxOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:alphaOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:partitionOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:auxDataOut=dict(","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:bad-continuation:for name, sImage in sCategoryInfo]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:anomalous-backslash-in-string:pathContents = [x for x in sorted(os.listdir(path)) if re.match('\\d', x)]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:anomalous-backslash-in-string:index = int(re.match('(\\d*)', pathContents[-1]).groups()[0]) + 1","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:redefined-variable-type:images = [image]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensor.py:redefined-variable-type:argStr = '{'","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:bad-continuation:numpy.ones((1, self._filterDim, self._filterDim),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:bad-continuation:dtype=RealNumpyDType)))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:debugMode=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:debugOutputDir='gabor.d',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:suppressLobes=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:wipeOutsideMask=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:convolutionMethod='1D'):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'small':   3,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'medium':  6,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'large':  12,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:}","count":6,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'vert':   0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'swne':  45,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'horz':  90,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'nwse': 135,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'line-bright':           0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'edge-bright-to-dark':  90,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'line-dark':           180,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'edge-dark-to-bright': 270,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:[","count":72,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:},","count":72,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# [","count":24,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:],","count":48,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (bright to dark)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (dark to bright)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (bright to dark)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (dark to bright)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SE-NW lines","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:self._gaborBankParams[responseIndex][0]['orient'])]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:for i in range(maskDim):","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:x[j,i] = float(i-halfWidth)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:y[j,i] = float(j-halfWidth)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:x0 = x[j,i] * cosTheta + y[j,i] * sinTheta","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:y0 = y[j,i] * cosTheta - x[j,i] * sinTheta","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:sinusoidalTerm = math.cos((sinusoidalConstant * x0) + phase)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:exponentialTerm = math.exp(exponentialConstant * (x0*x0 + aspectConstant*y0*y0))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:g[j,i] = exponentialTerm * sinusoidalTerm","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(1,   0.8,  1.3),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(2,   1.7,  2.4),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(3,   2.8,  3.5),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(4,   3.6,  4.6),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(5,   4.5,  5.6),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(6,   5.4,  6.8),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(7,   6.3,  7.9),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(8,   7.3,  9.1),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(9,   8.2, 10.3),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(10,  9.2, 11.5),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(11, 10.2, 12.7),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(12, 11.3, 14.1),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(13, 12.3, 15.4),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(14, 13.4, 16.8),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(15, 14.6, 18.2),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(16, 15.8, 19.7),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(17, 17.0, 21.2),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(18, 18.2, 22.8),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:]","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Verticals","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,   0), (1, 1, 1, 0)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,  90), (0, 1, 1, 0)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 180), (1, 1, 1, 0)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 270), (1, 0, 1, 0)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SW-NE","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,   0), (1, 1, 1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,  90), (0, 1, 1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 180), (1, 1, 1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 270), (1, 0, 1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Horizontals","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,   0), (1, 1, 0, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,  90), (0, 1, 0, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 180), (1, 1, 0, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 270), (1, 0, 0, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SE-NW","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,   0), (1, 1, -1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,  90), (0, 1, -1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 180), (1, 1, -1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 270), (1, 0, -1, 1)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:sideLen, self._rad2deg(phase))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:sideLen, phase):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:filter.shape[0], filter.shape[0], filter, filter)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:phase=filterSpecs['phase'], orientation=filterSpecs['orient'],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:rotation=self._rotation)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:+ self._convolutionMethod)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:\"\"\"performs post-processing on the raw Gabor responses.","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:if postProcessingMode == 'raw':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = preResponse","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'abs':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = abs(preResponse)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'positive':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = preResponse.clip(min=0.0, max=1.0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'rectified':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = preResponse * preResponse","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'power':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:intResponse = preResponse.clip(min=0.0, max=1.0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = intResponse * intResponse","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'polynomial':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:gain = 1.0 \/ ((1.0 - threshold) ** steepness)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:intResponse = (preResponse - threshold).clip(min=0.0, max=1.0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = gain * (intResponse ** steepness)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'hardFull':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = (preResponse > threshold).astype(dtype) * 2.0 - 1.0","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'hardHalf':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = (preResponse > threshold).astype(dtype)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'sigmoidHalf':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = 1.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'sigmoidFull':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = (2.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)) - 1.0","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:return postResponse","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:image[j:j+filterDim,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:i:i+filterDim].flatten())","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:filterX.shape[0], filterY.shape[0], filterX, filterY)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:shear = self.difficulty*self.maxShear - self.difficulty*0.3 + self.difficulty*0.3*self.random.random()","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1, shear, -shear*size[1], 0, 1, 0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:size[0] += int(shear*size[0])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = image.transform(tuple(size), Image.AFFINE, matrix)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox = list(newImage.split()[1].getbbox())","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[1] = 0","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[3] = size[1]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = newImage.crop(bbox)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1, 0, 0, shear, 1, -shear*size[0])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:size[1] += int(shear*size[1])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[0] = 0","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[2] = size[0]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:squeeze = self.minSqueeze - (self.minSqueeze - self.maxSqueeze)*(self.difficulty - self.difficulty*0.3 + self.difficulty*0.3*self.random.random())","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1\/squeeze, 0, 0, 0, 1, 0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), int((size[0] - squeeze*size[0])\/2), 0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1, 0, 0, 0, 1\/squeeze, 0)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), 0, int((size[1] - squeeze*size[1])\/2))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = newImage.resize(image.size)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:retImage = Image.new('LA', image.size)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:retImage.paste(newImage, (0, int((image.size[1] - newImage.size[1])\/2.0)))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = retImage","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:retImage.paste(newImage, (0, int((image.size[0] - newImage.size[0])\/2.0)))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/HistogramShift.py:bad-indentation:raise RuntimeError(\"difficulty must be between 0.0 and 1.0\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:#--------------------------------------------------","count":6,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:windowX=9,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Height (in pixels) of smooth window for vertical","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:windowY=9,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Smooth window type; must be one of: 'flat', 'hanning',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:windowType='hanning',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:heightThresh=0.1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum peak SMotion strength for a secondary lobe","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:secondaryHeightThresh=0.5,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum absolute horizontal length (in pixels) that a","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsZoneLenX=5,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum relative horizontal length (expressed as a","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelZoneLenX=0.15,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum horizontal \"gap\" width (in terms of absolute","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsWeakLenX=5,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum horizontal \"gap\" width (as percentage of the","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelWeakLenX=0.10,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# The number of pixels to expand our accepted zones","count":8,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePreExpansionX=16, #8, #0, #8,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePostExpansionX=4, #0, #4,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:widthThresh=0.1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:secondaryWidthThresh=0.20,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum absolute vertical length (in pixels) that a","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsZoneLenY=5,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum relative vertical length (expressed as a","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelZoneLenY=0.15,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum vertical \"gap\" width (in terms of absolute","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsWeakLenY=5,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum vertical \"gap\" width (as percentage of the","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelWeakLenY=0.30,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePreExpansionY=16, #8, #0, #8,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePostExpansionY=4, #0, #4,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:#---------------------------------","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:splitPolicy='biggest',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:debugMode=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:window=self._windowType)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:imgDir, imgName = os.path.split(imagePath)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:imgPrefix = os.path.split(imgDir)[1]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:match = re.match(r\"^(?P<mnemonic>[a-z]+)\\.(?P<videoID>[0-9]{4})_sequence(?P<seqID>\\-?[0-9]{1,5})$\", imgPrefix)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if not match:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:match = re.match(r\"^vid(?P<videoID>[0-9]{4})_seq(?P<seqID>\\-?[0-9]{3,4})$\", imgPrefix)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert match","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:d = match.groupdict()","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:videoID = int(d['videoID'])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:seqID = int(d['seqID'])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:key = (videoID, seqID)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:\"\"\"smooth the data using a window with requested size.","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if x.ndim != 1:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:raise ValueError, \"smooth only accepts 1 dimension arrays.\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if x.size < window_len:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:window_len = x.size","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if window_len<3:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:return x","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if not window in ['flat', 'hanning', 'hamming', 'bartlett', 'blackman']:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:raise ValueError, \"Window is on of 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:s=numpy.r_[2*x[0]-x[window_len:1:-1],x,2*x[-1]-x[-1:-window_len:-1]]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if window == 'flat': #moving average","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:w=ones(window_len,'d')","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:else:","count":12,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:w=eval('numpy.'+window+'(window_len)')","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:y=numpy.convolve(w\/w.sum(),s,mode='same')","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:return y[window_len-1:-window_len+1]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:def process(self, image):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:\"\"\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:BaseFilter.process(self, image)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert image.mode == \"LA\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if 'tracking' in image.info:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:bbox = image.info['tracking']","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:bbox = image.split()[1].getbbox()","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if bbox is None:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:bbox = (0, 0, image.size[0], image.size[1])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:print 'WARNING: empty alpha channel'","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:width  = bbox[2] - bbox[0]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:height = bbox[3] - bbox[1]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImages = []","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:for scaleIdx, scale in enumerate(self._scales):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:targetDims = (self._targetDims[0] * scale,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorX = float(targetDims[0]) \/ float(width)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorY = float(targetDims[1]) \/ float(height)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._preservationMode is None:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:pass","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:elif self._preservationMode == \"aspect\":","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactor = min(scaleFactorX, scaleFactorY)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorX = scaleFactor","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorY = scaleFactor","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert self._preservationMode == \"size\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorX = scale","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorY = scale","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:targetWidth  = int(round(targetDims[0])) + 2*self._padding","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:targetHeight = int(round(targetDims[1])) + 2*self._padding","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcWidth  = float(targetWidth)  \/ scaleFactorX","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcHeight = float(targetHeight) \/ scaleFactorY","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._fillFromImageWherePossible:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:origCenterX = float(bbox[0] + bbox[2]) * 0.5","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:origCenterY = float(bbox[1] + bbox[3]) * 0.5","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:halfWidth  = srcWidth  * 0.5","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:halfHeight = srcHeight * 0.5","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcBox = (int(round(origCenterX - halfWidth)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBox = (max(srcBox[0], 0),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipOffset = (clipBox[0] - srcBox[0],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:paddedBBox = (int(bbox[0] - self._padding\/scaleFactorX),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBox = (max(paddedBBox[0], 0),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcBox = (0, 0, srcWidth, srcHeight)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBoxWidth = clipBox[2] - clipBox[0]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBoxHeight = clipBox[3] - clipBox[1]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipOffset = (int((srcWidth - clipBoxWidth)\/2),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:croppedImage = image.crop(clipBox)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:croppedImage.load()","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:croppedImage.putalpha(Image.new(mode='L', size=croppedImage.size, color=255))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._fillValue is None:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:[gray, alpha] = image.split()","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:hist = numpy.array(gray.histogram(alpha), dtype='float')","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:mean = (hist * self._histWeights).sum() \/ hist.sum()","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if mean < 127.5:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:fillValue = 255","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:fillValue = 0","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:fillValue = self._fillValue","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImage = Image.new(mode='LA', size=(srcBox[2]-srcBox[0],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:srcBox[3]-srcBox[1]), color=fillValue)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImage.paste(croppedImage, clipOffset)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaledImage = newImage.resize((targetWidth, targetHeight), self._resizingFilter)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert scaledImage.mode == 'LA'","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImages += [scaledImage]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._dumpDebugImages:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:self._handleDebug(scaledImage, scaleIdx)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:return [newImages]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:using-constant-test:if False:","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/BoxFixer.py:function-redefined:def process(self, image):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:bad-continuation:self.bgPath, 'backgound', 'background images', True)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:\"between 0 and 1, inclusive.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:\"convert(convert(gray, 'F') * scale + offset, mode)\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:gray=base,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:scale=scale,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:offset=offset,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:mode=base.mode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'phaseMode':            ('single', 'dual'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'targetType':           ('edge', 'line'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'boundaryMode':         ('constrained', 'sweepOff'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'normalizationMethod':  ('fixed', 'max', 'mean'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'postProcessingMethod': ('raw', 'sigmoid', 'threshold'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'nta_morphologyMethod': ('best', 'opencv', 'nta'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:}","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:):","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:filterDim,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:boundaryMode,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:**keywds):","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:phaseMode=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:centerSurround=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:\"'%s' was explicitly specified as 'opencv' \" \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:preSuppression=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:whichScale='all',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:whichPhase=0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:whichDirection='bottomUp'):","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"nd\",          ctypes.c_int),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"dimensions\",  ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"strides\",     ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"data\",        ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:]","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.cast(array.ctypes.shape, ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.cast(array.ctypes.strides, ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:array.ctypes.data))","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:postProcLUT[numpy.newaxis,:]),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:axis=1)","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=numpy.int32) \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._alignToFour(outWidth)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'_gaborComputeProc',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetIn',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetOut',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'_imageCounter',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'_morphHeader',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:'_erosion',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:cachedBUInput = self._cachedBUInput \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:validCachedBUInput = numpy.array_equal(buInputVector, cachedBUInput)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:cachedValidRegionIn = self._cachedValidRegionIn \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:validCachedValidRegionIn = ((validRegionIn is None) or","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:numpy.array_equal(validRegionIn, cachedValidRegionIn))","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:topDownConditionsMet = (self.nta_phaseIndex == 1) and \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:if not topDownConditionsMet:","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:message = (","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"Top-down conditions were not met for GaborNode:\\n\") +","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  phaseIndex=%s (expected %d)\\n\" % (self.nta_phaseIndex, 1)) +","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  stage='%s' (expected '%s')\\n\" % (self._stage, \"infer\")) +","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  topDownCombiner is %s (expected not None)\\n\" %","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"not None\" if (self._topDownCombiner is not None) else \"None\")) +","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  buInputVector %s cache (expected ==)\\n\" %","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"==\" if validCachedBUInput else \"!=\")) +","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  validRegionIn %s cache (expected ==)\\n\" %","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(\"==\" if validCachedValidRegionIn else \"!=\"))","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:import warnings","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:warnings.warn(message, stacklevel=2)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:return","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:buOutput = self.response.reshape(self._inputSplitter.shape[0], self._numPlanes)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-indentation:PyRegion._topDownCompute(self, inputs, outputs, buOutput,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:buInputVector)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:orientation='all', phase=0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:scaleIndex=0,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:cachedResponse=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:gain=1.0):","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._inHeight,","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._inWidth,","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._inHeight],","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=RealNumpyDType)","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._inputDims[scaleIndex][0]],","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=numpy.int32)","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:(-responseRaw).clip(min=0.0, max=effectiveInfinity)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._inputDims[scaleIndex][0])","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:bbox,","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:imageBox,","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:outputVector,","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:scaleIndex,","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:offImagePixelValue,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:validAlpha)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=validPyramid.dtype))).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:offImagePixelValue=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:validAlpha=None):","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._gaborBank),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(inputVector),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(validAlpha),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(bbox),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(imageBox),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(outputVector),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._gainConstant),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('boundaryMode'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(offImagePixelValue),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('phaseMode'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('normalizationMethod'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('perPlaneNormalization'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('perPhaseNormalization'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('postProcessingMethod'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingSlope),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingCenter),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingMin),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingMax),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._bufferSetIn[scaleIndex]),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._bufferSetOut[scaleIndex]),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._postProcLUT),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcLutScalar),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:whichOrient]).clip(min=0.0, max=255.0).astype(numpy.uint8))","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:numpy.ones((1, self._filterDim, self._filterDim),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=RealNumpyDType)))","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:singleNodeOnly=False)","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:description=\"\"\"","count":56,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=9),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: single, dual\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue='single'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=0),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: line,edge\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue='edge'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: fixed, mean, max\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:),","count":10,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: raw, sigmoid, threshold\"),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:constraints='enum: constrained, sweepOff',","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue='constrained'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=0.3),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=4.5),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=5.6),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=1),","count":2,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:bad-continuation:description=\"\"\"Width of the maximum resolution.\"\"\"),","count":4,"result_id":2089},{"warning":"5:src\/regions\/extra\/GaborNode2.py:using-constant-test:if False:","count":6,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Resize.py:bad-continuation:((size[0] - newImage.size[0])\/2,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Resize.py:bad-continuation:cropStart[0] + size[0], cropStart[1] + size[1]))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Occlusion.py:bad-continuation:self.random.randint(sizeRange[0], sizeRange[1]))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'boundaryMode':         ['constrained', 'sweepOff'],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'normalizationMethod':  ['fixed', 'max', 'mean'],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'postProcessingMethod': ['raw', 'sigmoid', 'threshold'],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:height,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:width,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:height],","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:dtype=numpy.float32)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"nd\",          ctypes.c_int),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"dimensions\",  ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"strides\",     ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"data\",        ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.cast(array.ctypes.shape, ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.cast(array.ctypes.strides, ctypes.c_void_p),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:array.ctypes.data))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:postProcLUT[numpy.newaxis,:]),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:axis=1)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:dtype=numpy.int32)","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Darwin\":  \"so\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Linux\":   \"so\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Windows\": \"pyd\",","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}.get(systemID)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:dtype=validPyramid.dtype))).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(self._filterBank),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(inputVector),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(validAlpha),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(bbox),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(imageBox),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(outputVector),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._gainConstant),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('boundaryMode'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(offImagePixelValue),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('phaseMode'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('normalizationMethod'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('perPlaneNormalization'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('perPhaseNormalization'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('postProcessingMethod'),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingSlope),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingCenter),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingMin),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingMax),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(inBuffer),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(outBuffer),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(self._postProcLUT),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcLutScalar),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Convolution.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Lines.py:bad-continuation:random.randint(sizeRange[0], sizeRange[1]))","count":4,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/ScaleToFit.py:bad-continuation:self.background)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/ScaleToFit.py:bad-continuation:((self.width - image.size[0])\/2, (self.height - image.size[1])\/2))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/PadToFit.py:bad-continuation:self.background)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:bad-continuation:for s in self.scales]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientImage = Image.new(\"L\", image.size)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray = numpy.array(gradientImage.split()[0].getdata())","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray.resize(image.size[1], image.size[0])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:opacity = self.difficulty - self.difficulty*.2 + self.random.random()*self.difficulty*.2","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:for i in xrange(image.size[1]):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:for j in xrange(image.size[0]):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:if type == 'horizontal':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray[i][j] = int(float(j)\/image.size[0]*255\/opacity)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:elif type == 'vertical':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray[i][j] = int(float(i)\/image.size[1]*255\/opacity)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:elif type == 'circular':","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray[i][j] = int(math.sqrt((i - image.size[1]\/2)**2 + (j - image.size[0]\/2)**2)\/math.sqrt((image.size[1]\/2)**2 + (image.size[0]\/2)**2)*255\/opacity)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientImage.putdata([uint(p) for p in gradientArray.flatten()])","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:self.gradientImages[(image.size, type)] = gradientImage","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorFilters\/MultipleScales.py:bad-continuation:for s in self.scales]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ImageSweep.py:bad-continuation:os.path.split(self.getImageInfo(prevImage)['imagePath'])[0]):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ToCenterSweep.py:bad-continuation:*args, **kwargs)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomJump.py:bad-continuation:\" when using 'numVisitsPerImage'\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomJump.py:bad-continuation:\"(height, width) of the overall space to explore.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:bad-continuation:\"when 'replacement' is False.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/CrossSweep.py:bad-continuation:*args, **kwargs)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:'leftdown', 'leftup', 'rightdown', 'rightup']","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:'leftup', 'upleft', 'leftdown', 'downleft',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:'rightup', 'upright', 'rightdown', 'downright'):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:self.numFilterOutputs[i] - 1)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:numRepetitions=1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:sweepOffMode=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:maxOffset=None,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:minVelocity=1,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:maxVelocity=3,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:seed=42,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:*args, **kwargs):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:equalizeCategories=False,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:*args, **kwargs):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:self.position['filters']) not in self.history:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:\"'replacement' is False.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:0: (quadrantPosn - radius, -radius),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:1: (radius, quadrantPosn - radius),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:2: (radius - quadrantPosn, radius),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:3: (-radius, radius - quadrantPosn),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:}[quadrantIndex]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/InwardSweep.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:bad-continuation:self.currentSaliencySizes[self.pointIndex][1] \\","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/OnionBlock.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/Jiggle.py:bad-indentation:if DEBUG >= 2: print \"already performed jiggle\", jiggleIndex, \", skipping\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/Jiggle.py:bad-indentation:jiggleIndex += 1","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/Jiggle.py:bad-indentation:continue","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/Jiggle.py:bad-continuation:gJigglesPerformed)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/BlockSpread.py:bad-continuation:stepSize=1, resetEveryPos=False, verbosity=0, *args, **kwargs):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/BlockSpread.py:bad-continuation:\"(height, width) of the overall space to explore.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/BlockSpread.py:bad-continuation:\"(height, width) of the of the area round each center point to\"","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:bad-continuation:min(x2, mask.size[0]), min(y2, mask.size[1]))).getextrema()","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:bad-continuation:for i in xrange(self.numFilters)]","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:shiftBetweenSweeps=1, sweepOffObject=False, order=None, *args, **kwargs):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:\" number between 0 and 1\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:\"'image' and 'sweep'\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:\"valid order after changing filters.\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:redefined-variable-type:bbox = [int(round(bbox[0] + width*self.sweepOffObject)),","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'leftdown', 'leftup', 'rightdown', 'rightup'))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:wraparound=False, sweepOffObject=None, forceAlignment=False, **kwds):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ str(keywds.keys()))","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'wraparound': wraparound, 'sweepOffObject': sweepOffObject,","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'forceAlignment': forceAlignment}","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'rightup': 'leftdown', 'right': 'left', 'rightdown': 'leftup',","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'down': 'up', 'leftdown': 'rightup'}","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:\"(regular expression) against imagePath %s \" % filename","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"(image index: %d)\" % i)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"on separator '%s' \" % separator","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"returned %d elements \" % len(indices)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"instead of %d \" % (len(self.pattern) - 1)","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"(as specified by the 'pattern' argument to MultiSweep)\")","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:os.path.split(self.getImageInfo(prevImage)['imagePath'])[0]):","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'have not been assigned a probability')","count":2,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:anomalous-backslash-in-string:\"\"\"","count":14,"result_id":2089},{"warning":"5:src\/regions\/ImageSensorExplorers\/MultiSweep.py:anomalous-backslash-in-string:self.parsedDimensions = re.findall(\"\\(\\?P<([^>]+)>\", pattern)","count":4,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:opfutils.InferenceElement.multiStepPredictions : \\","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:}","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:self._fieldNames, self._fieldTypes,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:itertools.repeat(fieldmeta.FieldMetaSpecial.none)))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:type=FieldMetaType.float,","count":4,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:special=FieldMetaSpecial.none)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:metricSpecs=onlineMetrics,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:fieldInfo=modelFieldMetaInfo,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:inferenceType=InferenceType.TemporalNextStep)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:special=FieldMetaSpecial.none),)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/predictionmetricsmanager.py:bad-continuation:oneStepInfs, threeStepInfs):","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/model.py:bad-continuation:self, saveModelDir)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/model.py:bad-continuation:extraDataDir=Model._getModelExtraDataDir(savedModelDir))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/two_gram_model.py:bad-continuation:dataRow=values, dataEncodings=inputFieldEncodings,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/two_gram_model.py:bad-continuation:sequenceReset=int(self._reset))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/two_gram_model.py:bad-continuation:max(probabilities, key=lambda x: x[1])[0]]","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/two_gram_model.py:bad-continuation:self._fieldNames, fieldTypes,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/two_gram_model.py:bad-continuation:itertools.repeat(fieldmeta.FieldMetaSpecial.none)))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:parser,","count":6,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Options: -c, --listCheckpoints, --listTasks, and --load are \"","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Options: -c and --noCheckpoint are \"","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Exactly ONE experiment must be specified, but got %s (%s)\" % (","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:len(experiments), experiments))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:experimentDir)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:descriptionPyModule)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:savedModelDir=_getModelCheckpointDir(experimentDir, checkpointName))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:self.__taskLabel,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:self.__numIterationsSoFar,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/experiment_runner.py:bad-continuation:self.__requestedIterationCount))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:prediction=\"prediction\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:encodings=\"encodings\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:classification=\"classification\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:anomalyScore=\"anomalyScore\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:anomalyLabel=\"anomalyLabel\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:classConfidences=\"classConfidences\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:multiStepPredictions=\"multiStepPredictions\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:multiStepBestPredictions=\"multiStepBestPredictions\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:multiStepBucketLikelihoods=\"multiStepBucketLikelihoods\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:multiStepBucketValues=\"multiStepBucketValues\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:)):","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:key),","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:(\"predictionRow\",","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-indentation:return (\"ModelResult(\"","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.rawInput,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.sensorInput,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.inferences,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.metrics,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.predictedFieldIdx,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.predictedFieldName,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfutils.py:bad-continuation:self.classifierInput)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:-iterationCountInferOnly, inferenceArgs=inferenceArgs),","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:if config['tpNewSynapseCount'] is not None","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:else config['spNumActivePerInhArea'],","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:if config['tpPermanenceDec'] is None","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:else config['tpPermanenceDec'],","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:else config['tpMinSegmentMatchSynapseThreshold'],","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:else config['tpSegmentActivationThreshold'],","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:inferenceType  = config['inferenceType'],","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:predictedField = config.get('predictedField', None),","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:sensorParams   = sensorParams,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:spEnable       = config.get('spEnable', True),","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:spParams       = spParams,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:tpEnable       = config['tpEnable'],","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:tpParams       = tpParams,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:clParams       = clParams,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:trainSPNetOnlyIfRequested = config.get(","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/expdescriptionapi.py:bad-continuation:'claTrainSPNetOnlyIfRequested', False),","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-indentation:self.__outputFieldsMeta.extend(self.__getDictMetaInfo(inferenceElement,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:type=FieldMetaType.string, special = ''))","count":4,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:opfutils.InferenceType.getLabel(self.__inferenceType) +","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:\".predictionLog.csv\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:fields=self.__outputFieldsMeta)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:tuple(self.__dataset.getFieldNames()), tuple(header))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:experimentDir=self.__experimentDir,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:label=self.__label,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:inferenceType=self.__inferenceType,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:fields=self.__inputFieldsMeta,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:metricNames=self.__loggedMetricNames,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/opfbasicenvironment.py:bad-continuation:checkpointSource=self.__checkpointCache)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"setByUser\"]","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:setByUser=False):","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:debugInfo={","count":4,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"Model has no saved records.\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"'removeLabels'. Model has no saved records.\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"'removeLabels'.\", debugInfo={","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:(classifier_indexes >= self._autoDetectWaitRecords) &","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:(classifier_indexes < record.ROWID)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:spSize )","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\" 'sp_tpe', current value is %s\" % (self._vectorType))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:#at beginning of model.run","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"must be a number.\" % (type(waitRecords)))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"must be valid record within output stream. Current minimum ROWID in \"","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:\"must be a number.\" % (type(threshold)))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-continuation:prediction, self.getMetric())","count":4,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-continuation:\"prediction\":prediction,\"record\":record})","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-indentation:print (\"MetricMultiStepProbability %s: aggErr for stepSize %d: %s\" %","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-continuation:not len(weights) > 0 or","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-continuation:not isinstance(weights[0], float)):","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-continuation:not len(metrics) > 0 or","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:bad-continuation:not isinstance(metrics[0], MetricsIface)):","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:redefined-variable-type:pred = 0","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:using-constant-test:if False:","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/metrics.py:function-redefined:def __init__(self, weights, metrics, window=None):","count":2,"result_id":2089},{"warning":"5:src\/support\/feature_groups.py:bad-continuation:'base_feature',","count":2,"result_id":2089},{"warning":"5:src\/support\/feature_groups.py:bad-continuation:'second_feature',","count":2,"result_id":2089},{"warning":"5:src\/support\/feature_groups.py:bad-continuation:'third_feature'","count":2,"result_id":2089},{"warning":"5:src\/support\/feature_groups.py:pointless-statement:None","count":2,"result_id":2089},{"warning":"5:src\/support\/decorators.py:redefined-variable-type:enabled = logger.isEnabledFor(entryExitLogLevel)","count":2,"result_id":2089},{"warning":"5:src\/support\/__init__.py:bad-continuation:\"::{450d8fba-ad25-11d0-98a8-0800361b1103}\")[1]","count":2,"result_id":2089},{"warning":"5:src\/support\/__init__.py:bad-continuation:\"nupic.support.enableLoggingErrorDebugging() was \"","count":2,"result_id":2089},{"warning":"5:src\/support\/__init__.py:bad-continuation:traceback.format_stack(),)","count":2,"result_id":2089},{"warning":"5:src\/support\/__init__.py:bad-continuation:\"inter-operated with other aggregation dicts that contain \"","count":2,"result_id":2089},{"warning":"5:src\/support\/enum.py:bad-indentation:return False","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'description': 'This feature must exist for all environments for Nupic to run',","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'dateAdded': '20110916',","count":10,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'author': 'idanforth'},","count":12,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'description': 'This is a secondary feature to use as an example',","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'description': 'This is another feature that would be cool to have',","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'description': 'Example feature added in default devconf-example.py',","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'description': 'Example feature removed in default devconf-example.py',","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'description': 'A new button to delete a project from the \"Projects\" view',","count":2,"result_id":2089},{"warning":"5:src\/support\/features_list.py:bad-continuation:'dateAdded': '20110919',","count":2,"result_id":2089},{"warning":"5:src\/support\/configuration_custom.py:bad-continuation:\"from %s, while editing properties %s.\",","count":2,"result_id":2089},{"warning":"5:src\/support\/configuration_custom.py:bad-continuation:e.errno, configFilePath, properties)","count":2,"result_id":2089},{"warning":"5:src\/support\/configuration_custom.py:bad-continuation:\"properties %s in %s.\", properties, configFilePath)","count":2,"result_id":2089},{"warning":"5:src\/support\/datafiles.py:bad-continuation:\"numbers of columns.\")","count":2,"result_id":2089},{"warning":"5:src\/support\/datafiles.py:bad-continuation:rewind=(format==2 or format==3))","count":2,"result_id":2089},{"warning":"5:src\/support\/pymysqlhelpers.py:bad-continuation:_RETRIABLE_SERVER_ERROR_CODES)","count":2,"result_id":2089},{"warning":"5:src\/support\/lockattributes.py:bad-continuation:(hasattr(self, '_canAddAttributes') and self._canAddAttributes > 0) or","count":2,"result_id":2089},{"warning":"5:src\/support\/lockattributes.py:bad-continuation:hasattr(self, name)):","count":2,"result_id":2089},{"warning":"5:src\/support\/configuration_base.py:bad-continuation:filePath)","count":2,"result_id":2089},{"warning":"5:src\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--verbosity', default=0, type='int',","count":2,"result_id":2089},{"warning":"5:src\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--seed', default=42, type='int',","count":2,"result_id":2089},{"warning":"5:src\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--short', action='store_false', dest='long',","count":2,"result_id":2089},{"warning":"5:src\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--long', action='store_true', dest='long',","count":2,"result_id":2089},{"warning":"5:src\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--installDir', dest='installDir',","count":2,"result_id":2089},{"warning":"5:src\/support\/unittesthelpers\/testcasebase.py:bad-continuation:]","count":2,"result_id":2089},{"warning":"5:src\/math\/__init__.py:bad-continuation:\"GetNTAReal\", \"GetNumpyDataType\",","count":2,"result_id":2089},{"warning":"5:src\/math\/__init__.py:bad-continuation:\"SparseMatrix\", \"SparseTensor\", \"TensorIndex\", \"Domain\", \"choose\", \"logChoose\"]","count":2,"result_id":2089},{"warning":"5:src\/math\/__init__.py:bad-continuation:\"pickByDistribution\", \"ConditionalProbabilityTable2D\", \"MultiIndicator\", \"Indicator\"])","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:if fixCenter is not None:","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:dMeans = [min(samples)+0.01 , fixCenter ,max(samples)-0.01]","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:else:","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:dMeans = [min(samples)+0.01 , mean(samples) ,max(samples)-0.01]","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:begDeg = map(None,numpy.zeros(len(samples)))","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:midDeg = map(None,numpy.zeros(len(samples)))","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:endDeg = map(None,numpy.zeros(len(samples)))","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:for j in range(iter):","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:for k in range(len(samples)):","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:pBeg = (1.0\/(samples[k] - dMeans[2])**2)**(1.0\/(fuzzParam-1))","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:pMid = (1.0\/(samples[k] - dMeans[1])**2)**(1.0\/(fuzzParam-1))","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:pEnd = (1.0\/(samples[k] - dMeans[0])**2)**(1.0\/(fuzzParam-1))","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:nmlz = pBeg + pMid + pEnd","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:begDeg[k] = pBeg\/nmlz; midDeg[k] = pMid\/nmlz; endDeg[k] = pEnd\/nmlz","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:dMeans[0] = numpy.nansum((numpy.array(endDeg)**fuzzParam)*numpy.array(samples))\/numpy.nansum(numpy.array(endDeg)**fuzzParam)","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:if fixCenter is None:","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:dMeans[1] = numpy.nansum((numpy.array(midDeg)**fuzzParam)*numpy.array(samples))\/numpy.nansum(numpy.array(midDeg)**fuzzParam)","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:dMeans[2] = numpy.nansum((numpy.array(begDeg)**fuzzParam)*numpy.array(samples))\/numpy.nansum(numpy.array(begDeg)**fuzzParam)","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:bad-indentation:return dMeans","count":2,"result_id":2089},{"warning":"5:src\/math\/stats.py:redefined-variable-type:total = float(total)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:\"\"\"compute Receiver operating characteristic (ROC)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:y_true = np.ravel(y_true)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:classes = np.unique(y_true)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:if classes.shape[0] != 2:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:raise ValueError(\"ROC is defined for binary classification only\")","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:y_score = np.ravel(y_score)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:n_pos = float(np.sum(y_true == classes[1]))  # nb of true positive","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:n_neg = float(np.sum(y_true == classes[0]))  # nb of true negative","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:thresholds = np.unique(y_score)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:neg_value, pos_value = classes[0], classes[1]","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:tpr = np.empty(thresholds.size, dtype=np.float)  # True positive rate","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:fpr = np.empty(thresholds.size, dtype=np.float)  # False positive rate","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:current_pos_count = current_neg_count = sum_pos = sum_neg = idx = 0","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:signal = np.c_[y_score, y_true]","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:sorted_signal = signal[signal[:, 0].argsort(), :][::-1]","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:last_score = sorted_signal[0][0]","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:for score, value in sorted_signal:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:if score == last_score:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:if value == pos_value:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:current_pos_count += 1","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:else:","count":6,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:current_neg_count += 1","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:tpr[idx] = (sum_pos + current_pos_count) \/ n_pos","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:fpr[idx] = (sum_neg + current_neg_count) \/ n_neg","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:sum_pos += current_pos_count","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:sum_neg += current_neg_count","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:current_pos_count = 1 if value == pos_value else 0","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:current_neg_count = 1 if value == neg_value else 0","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:idx += 1","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:last_score = score","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:tpr[-1] = (sum_pos + current_pos_count) \/ n_pos","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:fpr[-1] = (sum_neg + current_neg_count) \/ n_neg","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:if fpr.shape[0] == 2:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:fpr = np.array([0.0, fpr[0], fpr[1]])","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:tpr = np.array([0.0, tpr[0], tpr[1]])","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:elif fpr.shape[0] == 1:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:fpr = np.array([0.0, fpr[0], 1.0])","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:tpr = np.array([0.0, tpr[0], 1.0])","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:return fpr, tpr, thresholds","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:\"\"\"Compute Area Under the Curve (AUC) using the trapezoidal rule","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:if x.shape[0] != y.shape[0]:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:raise ValueError('x and y should have the same shape'","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:if x.shape[0] < 2:","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:raise ValueError('At least 2 points are needed to compute'","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:order = np.argsort(x)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:x = x[order]","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:y = y[order]","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:h = np.diff(x)","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:area = np.sum(h * (y[1:] + y[:-1])) \/ 2.0","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:bad-indentation:return area","count":2,"result_id":2089},{"warning":"5:src\/math\/roc_utils.py:useless-else-on-loop:else:","count":2,"result_id":2089},{"warning":"5:src\/math\/dist.py:bad-continuation:numpy.sum(x * numpy.log(self.dist.pmf)))","count":2,"result_id":2089},{"warning":"5:src\/math\/dist.py:bad-continuation:- self.beta * x - self.lgammaAlpha)","count":2,"result_id":2089},{"warning":"5:src\/math\/proposal.py:bad-continuation:\"with (min, start, max)\")","count":2,"result_id":2089},{"warning":"5:src\/math\/proposal.py:bad-continuation:(logBackward + numpy.log(1.0 - kernelBackward)))","count":2,"result_id":2089},{"warning":"5:src\/math\/proposal.py:bad-continuation:self.dist, self.minVal - current, self.maxVal - current, r)","count":2,"result_id":2089},{"warning":"5:src\/math\/proposal.py:bad-continuation:self.dist, current - self.maxVal, current - self.minVal, r)","count":2,"result_id":2089},{"warning":"5:src\/math\/mvn.py:bad-continuation:C11, C12, C22)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:InferenceElement,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:SensorInput,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:ClassifierInput,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:initLogger)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:\"be an active anomalyDetector model.\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:self.net, self.statsCollectors)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:sensorParams,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:inferenceType=InferenceType.TemporalNextStep,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:predictedField=None,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:spEnable=True,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:spParams={},","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:# TODO: We can't figure out what this is. Remove?","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:trainSPNetOnlyIfRequested=False,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:tpEnable=True,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:tpParams={},","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:clEnable=True,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:clParams={},","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:anomalyParams={},","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:minLikelihoodThreshold=DEFAULT_LIKELIHOOD_THRESHOLD,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:maxPredictionsPerStep=DEFAULT_MAX_PREDICTIONS_PER_STEP):","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:sensorParams, spEnable, spParams, tpEnable, tpParams, clEnable,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:clParams, anomalyParams)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:\"pooler's sequence states\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:patternNZ=patternNZ,","count":4,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:inputTSRecordIdx=inputTSRecordIdx,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:rawInput=rawInput)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:activeColumns,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:self._prevPredictedColumns,","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:inputValue=self._input[self._predictedFieldName])","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:\"activeColumnCount\", len(activeColumns))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:\"the 'predictedField' in its config, which is required \"","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:predictedFieldName)]","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:classification=classificationIn)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict, minLikelihoodThreshold, maxPredictionsPerStep)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict[k])","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:offsetDict[k])","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:bestActValue)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:bucketLikelihood)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:destInput=\"topDownIn\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:destInput=\"temporalTopDownIn\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:destInput=\"resetIn\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:clParams))","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:trainRecords=anomalyParams.get('autoDetectWaitRecords', None),","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:cacheSize=anomalyParams.get('anomalyCacheRecords', None)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:statsCollectors=self._netInfo.statsCollectors)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:self._classifier_helper.saved_states)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:self._classifier_helper.saved_categories)","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:srcOutput=\"bottomUpOut\", destInput=\"spBottomUpOut\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:srcOutput=\"dataOut\", destInput=\"spBottomUpOut\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:srcOutput=\"topDownOut\", destInput=\"tpTopDownOut\")","count":2,"result_id":2089},{"warning":"5:src\/frameworks\/opf\/clamodel.py:bad-continuation:srcOutput=\"lrnActiveStateT\", destInput=\"tpLrnActiveStateT\")","count":2,"result_id":2089},{"warning":"5:nupic\/utils.py:bad-continuation:self.slidingWindow, self.total, newValue, self.windowSize)","count":1,"result_id":2088},{"warning":"5:nupic\/simple_server.py:bad-continuation:# Web UI","count":1,"result_id":2088},{"warning":"5:nupic\/simple_server.py:bad-continuation:\"\/models\", \"ModelHandler\",","count":1,"result_id":2088},{"warning":"5:nupic\/simple_server.py:bad-continuation:r\"\/models\/([-\\w]*)\", \"ModelHandler\",","count":1,"result_id":2088},{"warning":"5:nupic\/simple_server.py:bad-continuation:r\"\/models\/([-\\w]*)\/run\", \"ModelRunner\",","count":1,"result_id":2088},{"warning":"5:nupic\/simple_server.py:bad-continuation:data[\"timestamp\"], \"%m\/%d\/%y %H:%M\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/object_json.py:bad-continuation:json.loads(s, object_hook=objectDecoderHook, **kwargs))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/object_json.py:bad-continuation:json.load(f, object_hook=objectDecoderHook, **kwargs))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/object_json.py:redefined-variable-type:obj = tuple([restoreKeysPostDecoding(item) for item in obj])","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:\"nupic.hypersearch.minWorkersPerSwarm\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:\"nupic.hypersearch.maxWorkersPerSwarm\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:client=client,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:cmdLine=\"$HYPERSEARCH\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:clientInfo=clientInfo,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:clientKey=clientKey,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:alreadyRunning=alreadyRunning,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:params=params,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:minimumWorkers=minimumWorkers,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:maximumWorkers=maximumWorkers,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/api.py:bad-continuation:jobType=ClientJobsDAO.JOB_TYPE_HS)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/ExtendedLogger.py:bad-indentation:\"\"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/ExtendedLogger.py:bad-indentation:self._baseLogger.log(self, level, self.getExtendedMsg(msg), *args,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:hyperSearchJob=None,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:metricsKeys=None)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:jobID,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:numFinished,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:expModelsStr,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:#stats.numCompletedSuccess,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:(stats.numCompletedEOF+stats.numCompletedStopped),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"EOF\" if stats.numCompletedEOF else \"eof\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedEOF,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"STOPPED\" if stats.numCompletedStopped else \"stopped\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedStopped,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"KILLED\" if stats.numCompletedKilled else \"killed\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedKilled,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"ERROR\" if stats.numCompletedError else \"error\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedError,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"ORPHANED\" if stats.numCompletedError else \"orphaned\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedOrphaned,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"UNKNOWN\" if stats.numCompletedOther else \"unknown\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:stats.numCompletedOther))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:pprint.pformat(modelMilestones, indent=4))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:permWorkDir=options[\"permWorkDir\"],","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:outputLabel=options[\"outputLabel\"])","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"expected 1 opt key, but got %d (%s) in %s\" % (","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(optimizationMetrics), optimizationMetrics, modelInfo))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:(\"all completed successfully\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(modelIDs) - (","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedKilled + modelStats.numCompletedEOF +","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedStopped))))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numStatusOther)","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:modelStats.numCompletedOther)","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:optimizationMetricName, maximizeMetric)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:bestModelIterIndex, bestModel, bestModel.getModelDescription())","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:0:options[\"genTopNDescriptions\"]]","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:len(self.__modelCache)))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:\"_NupicModelInfo\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.jobId,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.modelId,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.status,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.completionReason,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.updateCounter,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutations_runner.py:bad-continuation:self.__rawInfo.numRecords))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:['com.numenta.nupic.swarming', self.__class__.__name__]))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:cancel=True,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchWorker.py:bad-continuation:workerCompletionMsg = completionMsg),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:self.min, self.max, self.stepSize, self.getPosition(),","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:self._position, self._velocity, self._bestPosition,","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:self._bestResult))","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:globalBestPosition - self.getPosition())","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/permutationhelpers.py:bad-continuation:(self.fieldName, self.encoderClass, self.name, suffix))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:prediction=\"prediction\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:encodings=\"encodings\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:classification=\"classification\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:anomalyScore=\"anomalyScore\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:anomalyLabel=\"anomalyLabel\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:classConfidences=\"classConfidences\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepPredictions=\"multiStepPredictions\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBestPredictions=\"multiStepBestPredictions\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBucketLikelihoods=\"multiStepBucketLikelihoods\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:multiStepBucketValues=\"multiStepBucketValues\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:)):","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:key),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-indentation:return (\"ModelResult(\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.rawInput,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.sensorInput,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.inferences,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.metrics,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.predictedFieldIdx,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/experimentutils.py:bad-continuation:self.predictedFieldName)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:ClientJobsDAO, InvalidConnectionException)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:['workerCompletionReason'])[0]","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:cancel=True,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:workerCompletionReason = ClientJobsDAO.CMPL_REASON_ERROR,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:workerCompletionMsg = \": \".join(str(i) for i in e.args)),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:useConnectionID=False,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:ignoreUnchanged=True)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:predictedField, reportKeys, optimizeKey, jobsDAO,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelCheckpointGUID, logLevel=None, predictionCacheMaxRecords=None):","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, jobsDAO, experimentDir, logger, e)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:modelID, jobsDAO, \"NA\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:bad-continuation:logger, e)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/hypersearch\/utils.py:redefined-variable-type:objOut = []","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:InferenceElement)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"Error creating directory \" + \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:(\"Encountered error: '%s' while reporting \" + \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile = claDescriptionTemplateFile)","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile):","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:hsVersion=hsVersion,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:for item in metricSpecArgs.iteritems()])","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:replacementDict):","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_quoteAndEscape(encoder['name']),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:2*_ONE_INDENT,","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoder, indent=2*_INDENT_STEP)))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:_quoteAndEscape(encoderChoices[-1]['name']),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoderChoices, indent=2*_INDENT_STEP)))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"ScalarEncoder\", \"LogEncoder\"]:","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, n=100, w=width, clipInput=True)","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, n=100+width, w=width)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, timeOfDay=(width, 1))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, dayOfWeek=(width, 1))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:fieldname=fieldName, weekend=(width))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:encoderKey,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(encoderDict, indent=2*_INDENT_STEP)))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:indent=2*_INDENT_STEP)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'days': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'hours': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'microseconds': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'milliseconds': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'minutes': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'months': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'seconds': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'weeks': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'years': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$SUBSTITUTE'\", \"config['aggregationInfo']\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"When computeInterval is specified, then the stream aggregation \"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:options['anomalyParams'], indent=2*_INDENT_STEP)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"computeInterval must be an integer multiple of the stream \"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"PermuteChoices(%s)\" % (","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:pprint.pformat(aggChoices, indent=2*_INDENT_STEP)))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:descriptionPyPath,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:tokenReplacements)","count":4,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:hsVersion))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:for ptrn in options['loggedMetrics']]))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.multiStepBestPredictions,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric='multiStep',","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params={'errorMetric': metricName,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'window':metricWindow,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'steps': predictionSteps},","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:returnLabel=True)","count":4,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.multiStepPredictions,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=\"multiStep\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=metricParams,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":trivialErrorMetric,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:'steps': steps})","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:,\"errorMetric\":\"avg_err\",","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mode_window\":200,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"steps\": steps})","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:,\"errorMetric\":\"altMAPE\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mean_window\":200,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=metricName,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params={'window':metricWindow},","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":trivialErrorMetric})","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"errorMetric\":oneGramErrorMetric})","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"mode_window\":200})","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=InferenceElement.classification,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=\"custom\",","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=options[\"customErrorMetric\"])","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$REPLACE_ME'\", \"predictionSteps\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\"'$REPLACE_ME'\", \".*\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:field=metric['field'],","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:metric=metric['metric'],","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:params=metric['params'],","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:inferenceElement=\\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Tells ExpGenerator to generate an experiment description.py and \" \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Tells ExpGenerator to open the given filename and use it's \" \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:dest = 'claDescriptionTemplateFile',","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:default = 'claDescriptionTemplate.tpl',","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"The file containing the template description file for \" \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:help = \"Generate the permutations file for this version of hypersearch.\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:\" Possible choices are 'v1' and 'v2' [default: %default].\")","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:parser.get_usage()))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:parser.get_usage(), hsVersion=options.version,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:claDescriptionTemplateFile = options.claDescriptionTemplateFile)","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-continuation:options.outDir, parser.get_usage(), hsVersion=options.version,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$EXP_GENERATOR_PROGRAM_PATH'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$INFERENCE_TYPE'] = \"'%s'\" % inferenceType","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_ENABLE'] = \"False\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$TP_ENABLE'] = \"False\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_ENABLE'] = \"True\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$TP_ENABLE'] = \"True\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$CLA_CLASSIFIER_IMPL'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ANOMALY_PARAMS'] = pprint.pformat(","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENCODER_SPECS'] = encoderSpecsStr","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SENSOR_AUTO_RESET'] = sensorAutoResetStr","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$AGGREGATION_INFO'] = aggregationInfoStr","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$DATASET_SPEC'] = datasetSpecStr","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ITERATION_COUNT'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_POOL_PCT'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$HS_MIN_PARTICLES'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$SP_PERM_CONNECTED'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$FIELD_PERMUTATION_LIMIT'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_ENCODER_CHOICES'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICTION_STEPS'] = \"'%s'\" % (predictionStepsStr)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICT_AHEAD_TIME'] = predictAheadTimeStr","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_SP_CHOICES'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_SP_CHOICES'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TP_CHOICES'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TP_CHOICES'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_INFERENCE_TYPE_CHOICES'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_INFERENCE_TYPE_CHOICES'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_CL_CHOICES'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_CL_CHOICES'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_ALWAYS_INCLUDE_PREDICTED_FIELD'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MIN_FIELD_CONTRIBUTION'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MIN_FIELD_CONTRIBUTION'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_KILL_USELESS_SWARMS'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_KILL_USELESS_SWARMS'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_FIELD_BRANCHING'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_FIELD_BRANCHING'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS_W_TIMESTAMPS'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_TRY_ALL_3_FIELD_COMBINATIONS_W_TIMESTAMPS'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FIXED_FIELDS'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FIXED_FIELDS'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FAST_SWARM_MODEL_PARAMS'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_FAST_SWARM_MODEL_PARAMS'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_MODELS'] = \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_MAX_MODELS'] = \"\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_AGGREGATION_CHOICES'] = (","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_AGGREGATION_CHOICES'] = aggregationInfoStr","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENVIRONMENT'] = \"'%s'\"%OpfEnvironment.Nupic","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$ENVIRONMENT'] = \"'%s'\"%OpfEnvironment.Experiment","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:\"\"\"Generate the token substitution for metrics related fields.","count":3,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$LOGGED_METRICS'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$METRICS'] = metricListString","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PERM_OPTIMIZE_SETTING'] \\","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$INFERENCE_ARGS'] = resultInferenceArgs","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:anomalous-backslash-in-string:tokenReplacements['\\$PREDICTION_FIELD'] = predictedField","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/exp_generator\/ExpGenerator.py:redefined-variable-type:resultInferenceArgs = resultInferenceArgs.replace(\"'$REPLACE_ME'\",","count":1,"result_id":2088},{"warning":"5:nupic\/research\/utils.py:bad-continuation:runtimeElement=network.getElement(fromElementName),","count":1,"result_id":2088},{"warning":"5:nupic\/research\/utils.py:bad-continuation:# TODO: Re-purpose for use with nodes other than PMXClassifierNode.","count":1,"result_id":2088},{"warning":"5:nupic\/research\/utils.py:bad-continuation:expression=\"self._cd._W\"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:ClientJobsDAO, InvalidConnectionException)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'nupic.hypersearch.enableSwarmTermination')))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:['com.numenta', self.__class__.__module__, self.__class__.__name__]))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'Swarm %s has matured (more than %d generations). Stopping' %","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:(swarmId, self.MAX_GENERATIONS))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId=self.swarmId, maxGenIdx=maxGenIdx, varName=varName)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:resultsPerChoice.values())","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._hsObj._jobID, 'engWorkerState', json.dumps(self._state), None)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._hsObj._jobID, ['engWorkerState'])[0]","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:clippedObj(searchParams))))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:\"Either 'description', 'permutationsPyFilename' or\"","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'--description=%s' % (","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:json.dumps(self._searchParams['description'])),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'--version=v2',","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'--outDir=%s' % (outDir)])","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:\"Either 'description', 'permutationsPyFilename' or \"","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'days': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'hours': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'microseconds': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'milliseconds': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'minutes': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'months': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'seconds': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'weeks': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:'years': 0,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmId, generation=genIdx, errScore=errScore)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._jobID,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:fields=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:useConnectionID=False,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:ignoreUnchanged=True)","count":2,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._resultsDB.getParticleInfos(swarmId))","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._resultsDB.getParticleInfos(swarmId, genIdx=None,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId, genIdx=genIdx, matured=False)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:swarmId=swarmID, completed=False)","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:modelId, dict(engStop=ClientJobsDAO.STOP_REASON_KILLED),","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:self._getCandidateParticleAndSwarm())","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:_buildStructuredParams,","count":1,"result_id":2088},{"warning":"5:nupic\/swarming\/HypersearchV2.py:bad-continuation:discardNoneKeys=False)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/connections.py:bad-continuation:other.synapsesForSegment(segment))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/connections.py:bad-continuation:self.synapsesForPresynapticCell(cell))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/connections.py:bad-continuation:other.synapsesForPresynapticCell(cell))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/connections.py:bad-continuation:round(synapseData.permanence, 7)))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/temporal_memory.py:bad-continuation:synapseData.permanence > 0):","count":1,"result_id":2088},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:\"Input vector dimensions don't match. Expecting %s but got %s\" % (","count":1,"result_id":2088},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:inputVector.size, self._numInputs))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:self._minPctOverlapDutyCycles * self._overlapDutyCycles.max()","count":1,"result_id":2088},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:self._minPctActiveDutyCycles * self._activeDutyCycles.max()","count":1,"result_id":2088},{"warning":"5:nupic\/research\/spatial_pooler.py:bad-continuation:self._synPermMax - self._synPermConnected)*self._random.getReal64()","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.infActiveState[\"t\"], self.infActiveState[\"t-1\"],","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.infPredictedState[\"t\"], self.infPredictedState[\"t-1\"],","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.colConfidence[\"t\"], self.colConfidence[\"t-1\"],","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP10X2.py:bad-continuation:self.cellConfidence[\"t\"], self.cellConfidence[\"t-1\"])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:bad-continuation:(synapseData.presynapticCell, synapseData.permanence))","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/cla_classifier_diff.py:bad-continuation:self._fastCLAClassifier))","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/cla_classifier_diff.py:bad-continuation:'Python CLAClassifier has value %f and C++ FastCLAClassifier has '","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/cla_classifier_diff.py:bad-continuation:'Python CLAClassifier has value %s and C++ FastCLAClassifier has '","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:not isinstance(binaryAnomalyThreshold, float) or","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:binaryAnomalyThreshold >= 1.0  or","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:binaryAnomalyThreshold <= 0.0 ):","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/anomaly.py:bad-continuation:inputValue, anomalyScore, timestamp)","count":2,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:exact=False,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:distanceNorm=2.0,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:distanceMethod=\"norm\",","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:distThreshold=0,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:doBinarization=False,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:binarizationThreshold=0.5,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:useSparseMemory=True,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:sparseThreshold=0.1,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:relativeThreshold=False,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numWinners=0,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numSVDSamples=None,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:numSVDDims=None,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:fractionOfMax=None,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:verbosity=0,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:maxStoredPatterns=-1,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:replaceDuplicates=False,","count":1,"result_id":2088},{"warning":"5:nupic\/algorithms\/KNNClassifier.py:bad-continuation:cellsPerCol=0):","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:numpy.zeros((self.numberOfCols, self.cellsPerColumn),","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curPredictionScore2'])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['predictionScoreTotal2'] \/ nPredictions)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curFalseNegativeScore'])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['falseNegativeScoreTotal'] \/ nPredictions)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curFalsePositiveScore'])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['falsePositiveScoreTotal'] \/ nPredictions)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['prevSequenceSignature'])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:patternNZs=[bottomUpNZ], output=predictedState,","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:colConfidence=colConfidence)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:confidences2[0])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infActiveState['t'].min(axis=1).sum()),","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curPredictionScore2']),","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._internalStats['curFalsePositiveScore']),","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:1 - self._internalStats['curFalseNegativeScore'])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infActiveState['t'].sum())","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infPredictedState['t'].sum())","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.lrnActiveState['t'].sum())","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.lrnPredictedState['t'].sum())","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:\"Trying to lock-on using startCell state from %d steps ago:\" % (","count":2,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:numPrevPatterns - 1 - startOffset),","count":3,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._prevInfPatterns[startOffset])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infPredictedState['t'][:, :])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self.infPredictedState['candidate'][:, :])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:s, self.infActiveState['t'], connectedSynapsesOnly=False)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:self._prevLrnPatterns[startOffset])","count":2,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:\"Locking on using startCell state from %d steps ago:\" % (","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, self.lrnActiveState['t-1'], self.minThreshold)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, i, s, self.lrnActiveState['t-1'], newSynapses = True)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, i, None, self.lrnActiveState['t-1'], newSynapses=True)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, self.lrnActiveState['t'], minThreshold = self.activationThreshold)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:c, i, s, activeState=self.lrnActiveState['t'],","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:newSynapses=(numActive < self.newSynapseCount))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:colIdx=c, cellIdx=i, segList=self.cells[c][i],","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:minPermanence=minPermanence, minNumSyns=minNumSyns)","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:candidateCellIdxs[self._random.getUInt32(len(candidateCellIdxs))])","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:colIdx, candidateCellIdx, len(self.cells[colIdx][candidateCellIdx]))","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:perms.argsort()[0:numToFree]]","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:perms.argsort()[0:moreToFree]]","count":1,"result_id":2088},{"warning":"5:nupic\/research\/TP.py:bad-continuation:len(candidates)), candidates","count":1,"result_id":2088},{"warning":"5:nupic\/data\/inference_shifter.py:bad-continuation:self._inferenceBuffer[delay][inferenceElement])","count":1,"result_id":2088},{"warning":"5:nupic\/data\/stream_reader.py:bad-continuation:jsonschema.__name__, \"stream_def.json\"))","count":1,"result_id":2088},{"warning":"5:nupic\/data\/stream_reader.py:bad-continuation:inputFields=recordStoreFields,","count":1,"result_id":2088},{"warning":"5:nupic\/data\/functionsource.py:bad-continuation:\"Internal error -- sequence info type not set in RecordSensor\")","count":1,"result_id":2088},{"warning":"5:nupic\/data\/file_record_stream.py:bad-continuation:serializeTimestamp, serializeTimestampNoMS, escape, unescape, parseSdr,","count":1,"result_id":2088},{"warning":"5:nupic\/data\/file_record_stream.py:bad-continuation:serializeSdr, parseStringList, stripList)","count":1,"result_id":2088},{"warning":"5:nupic\/data\/file_record_stream.py:bad-continuation:\"Only bookmark or firstRecord can be specified, not both\")","count":1,"result_id":2088},{"warning":"5:nupic\/data\/generators\/distributions.py:bad-continuation:standardDeviation=self.std, numOfValues=self.valueNum)","count":1,"result_id":2088},{"warning":"5:nupic\/data\/generators\/data_generator.py:bad-continuation:\"some required constructor parameters. Parameters \"","count":1,"result_id":2088},{"warning":"5:nupic\/data\/generators\/data_generator.py:bad-continuation:'or dataType must be specified')","count":1,"result_id":2088},{"warning":"5:nupic\/data\/generators\/data_generator.py:redefined-variable-type:self.encoder=sdrcategory.SDRCategoryEncoder(name='categoryEncoder', \\","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"spVerbosity\": _VERBOSITY,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"spatialImp\": \"cpp\",","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"globalInhibition\": 1,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"columnCount\": 2048,","count":2,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"inputWidth\": 0,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"numActiveColumnsPerInhArea\": 40,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"seed\": 1956,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"potentialPct\": 0.8,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermConnected\": 0.1,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermActiveInc\": 0.0001,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"synPermInactiveDec\": 0.0005,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxBoost\": 1.0,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"verbosity\": _VERBOSITY,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"cellsPerColumn\": 32,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"inputWidth\": 2048,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"seed\": 1960,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"temporalImp\": \"cpp\",","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"newSynapseCount\": 20,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxSynapsesPerSegment\": 32,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxSegmentsPerCell\": 128,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"initialPerm\": 0.21,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"permanenceInc\": 0.1,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"permanenceDec\": 0.1,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"globalDecay\": 0.0,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"maxAge\": 0,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"minThreshold\": 9,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"activationThreshold\": 12,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"outputType\": \"normal\",","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/common_networks\/__init__.py:bad-continuation:\"pamLength\": 3,","count":1,"result_id":2088},{"warning":"5:nupic\/engine\/__init__.py:bad-continuation:(engine.Network.getRegions, 'Get the collection of regions in a network'),","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:creator = pymysql,","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:host = Configuration.get('nupic.cluster.database.host'),","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:port = int(Configuration.get('nupic.cluster.database.port')),","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:user = Configuration.get('nupic.cluster.database.user'),","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:passwd = Configuration.get('nupic.cluster.database.passwd'),","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:charset = 'utf8',","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:use_unicode = True,","count":1,"result_id":2088},{"warning":"5:nupic\/database\/Connection.py:bad-continuation:setsession = ['SET AUTOCOMMIT = 1'])","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/random_distributed_scalar.py:bad-continuation:(self._maxBuckets\/2) + int(round((x - self._offset) \/ self.resolution))","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/random_distributed_scalar.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(x))","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/date.py:bad-continuation:type(input), str(input)))","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/sparse_pass_through_encoder.py:bad-continuation:n, w, name, forced, verbosity)","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/scalar.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(input))","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/base.py:anomalous-backslash-in-string:\"\"\"An encoder converts a value to a sparse distributed representation.","count":4,"result_id":2088},{"warning":"5:nupic\/encoders\/pass_through_encoder.py:bad-continuation:len(inputVal), len(outputVal)))","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/pass_through_encoder.py:bad-continuation:sum(inputVal), self.w))","count":1,"result_id":2088},{"warning":"5:nupic\/encoders\/delta.py:bad-continuation:\"Expected a scalar input but got input of type %s\" % type(input))","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TestRegion.py:bad-continuation:bottomUpIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TestRegion.py:bad-continuation:topDownIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:\"FileRecordStream\"),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/RecordSensor.py:bad-continuation:\"spatialTopDownOut and temporalTopDownOut should be the same size\")","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:\"'cpp'\" % (spatialImp))","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:description=\"\"\"Which spatial pooler implementation to use. Set to either","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:constraints='enum: py, cpp'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:bottomUpIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:resetIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:topDownIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:'_loaded',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:'_profileObj',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SPRegion.py:bad-continuation:'_iterations',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:description=KNNAnomalyClassifierRegion.__doc__,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:inputs=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:outputs=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:parameters=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:commands=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:#at beginning of model.run","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:(classifier_indexes >= self.getParameter('trainRecords')) &","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNAnomalyClassifierRegion.py:bad-continuation:(classifier_indexes < record.ROWID)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:description=KNNClassifierRegion.__doc__,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:singleNodeOnly=True,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:inputs=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:outputs=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:parameters=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'prototypes. Possible options are norm, rawOverlap, '","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'pctOverlapOfProto',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'each category based on the distance to the nearest neighbor of '","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'be \"sphered\" (i.e. each dimension should be normalized such'","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'colum ',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:k=k,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:distanceNorm=distanceNorm,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:distanceMethod=distanceMethod,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:distThreshold=distThreshold,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:doBinarization=doBinarization,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:binarizationThreshold=inputThresh,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:useSparseMemory=useSparseMemory,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:sparseThreshold=sparseThreshold,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:relativeThreshold=relativeThreshold,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:numWinners=winnerCount,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:numSVDSamples=SVDSampleCount,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:numSVDDims=SVDDimCount,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:fractionOfMax=fractionOfMax,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:verbosity=clVerbosity,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:replaceDuplicates=replaceDuplicates,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:cellsPerCol=cellsPerCol,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/KNNClassifierRegion.py:bad-continuation:maxStoredPatterns=maxStoredPatterns","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": (\"Region that computes anomaly scores from temporal \"","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"singleNodeOnly\": True,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"inputs\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"activeColumns\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The currently active columns.\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"regionLevel\": True,","count":3,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"dataType\": \"Real32\",","count":3,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"count\": 0,","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"required\": True,","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"isDefaultInput\": False,","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"requireSplitterMap\": False,","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"predictedColumns\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The currently predicted columns.\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"outputs\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"rawAnomalyScore\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"description\": \"The raw anomaly score.\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"count\": 1,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"isDefaultOutput\": True,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"parameters\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:\"commands\": {","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/AnomalyRegion.py:bad-continuation:activeColumns, self.prevPredictedColumns)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._inferenceMode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setInferenceMode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:doc=\"\"\"Boolean indicating whether or not a node","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._learningMode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setLearningMode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._mode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setMode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:doc=\"\"\"We operate in two modes: 'classification' - the SVM is","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fget=lambda self: self._kernelType,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:fset=_setKernelType,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:# Doc provided with constraints in NodeSpec.","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:description=SVMClassifierNode.__doc__,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:inputs=[","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:outputs=[","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:parameters=[","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_rng',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTuneSamples',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTuneLabels',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/SVMClassifierNode.py:bad-continuation:'_autoTunePartitionIds',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:\"'cpp', and 'tm_py'\" % (temporalImp))","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:bottomUpIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:resetIn=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:'_loaded',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:'_profileObj',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/TPRegion.py:bad-continuation:'_iterations',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:0: (quadrantPosn - radialLength, -radialLength),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:1: (radialLength, quadrantPosn - radialLength),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:2: (radialLength - quadrantPosn, radialLength),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:3: (-radialLength, radialLength - quadrantPosn),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:}[quadrantIndex]","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:dataOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:categoryOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:resetOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:bboxOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:alphaOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:partitionOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensor.py:bad-continuation:auxDataOut=dict(","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'phaseMode':            ('single', 'dual'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'targetType':           ('edge', 'line'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'boundaryMode':         ('constrained', 'sweepOff'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'normalizationMethod':  ('fixed', 'max', 'mean'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'postProcessingMethod': ('raw', 'sigmoid', 'threshold'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'nta_morphologyMethod': ('best', 'opencv', 'nta'),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_gaborComputeProc',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetIn',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetOut',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_imageCounter',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_morphHeader',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_erosion',","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"Top-down conditions were not met for GaborNode:\\n\") +","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  phaseIndex=%s (expected %d)\\n\" % (self.nta_phaseIndex, 1)) +","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  stage='%s' (expected '%s')\\n\" % (self._stage, \"infer\")) +","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  topDownCombiner is %s (expected not None)\\n\" %","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  buInputVector %s cache (expected ==)\\n\" %","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  validRegionIn %s cache (expected ==)\\n\" %","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:[","count":36,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# [","count":12,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (bright to dark)","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (dark to bright)","count":2,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (bright to dark)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (dark to bright)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SE-NW lines","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(1,   0.8,  1.3),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(2,   1.7,  2.4),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(3,   2.8,  3.5),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(4,   3.6,  4.6),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(5,   4.5,  5.6),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(6,   5.4,  6.8),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(7,   6.3,  7.9),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(8,   7.3,  9.1),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(9,   8.2, 10.3),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(10,  9.2, 11.5),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(11, 10.2, 12.7),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(12, 11.3, 14.1),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(13, 12.3, 15.4),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(14, 13.4, 16.8),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(15, 14.6, 18.2),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(16, 15.8, 19.7),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(17, 17.0, 21.2),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(18, 18.2, 22.8),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Verticals","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,   0), (1, 1, 1, 0)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,  90), (0, 1, 1, 0)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 180), (1, 1, 1, 0)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 270), (1, 0, 1, 0)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SW-NE","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,   0), (1, 1, 1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,  90), (0, 1, 1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 180), (1, 1, 1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 270), (1, 0, 1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Horizontals","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,   0), (1, 1, 0, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,  90), (0, 1, 0, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 180), (1, 1, 0, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 270), (1, 0, 0, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SE-NW","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,   0), (1, 1, -1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,  90), (0, 1, -1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 180), (1, 1, -1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 270), (1, 0, -1, 1)),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:\"convert(convert(gray, 'F') * scale + offset, mode)\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:gray=base,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:scale=scale,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:offset=offset,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:mode=base.mode,","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'boundaryMode':         ['constrained', 'sweepOff'],","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'normalizationMethod':  ['fixed', 'max', 'mean'],","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'postProcessingMethod': ['raw', 'sigmoid', 'threshold'],","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Darwin\":  \"so\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Linux\":   \"so\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Windows\": \"pyd\",","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}.get(systemID)","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:0: (quadrantPosn - radius, -radius),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:1: (radius, quadrantPosn - radius),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:2: (radius - quadrantPosn, radius),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:3: (-radius, radius - quadrantPosn),","count":1,"result_id":2088},{"warning":"5:nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:}[quadrantIndex]","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:self._fieldNames, self._fieldTypes,","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/previousvaluemodel.py:bad-continuation:itertools.repeat(fieldmeta.FieldMetaSpecial.none)))","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:parser,","count":3,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Options: -c, --listCheckpoints, --listTasks, and --load are \"","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Options: -c and --noCheckpoint are \"","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:\"Exactly ONE experiment must be specified, but got %s (%s)\" % (","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:len(experiments), experiments))","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:experimentDir)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:descriptionPyModule)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/model.py:bad-continuation:extraDataDir=Model._getModelExtraDataDir(savedModelDir))","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:dataRow=values, dataEncodings=inputFieldEncodings,","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:sequenceReset=int(self._reset))","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:max(probabilities, key=lambda x: x[1])[0]]","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:self._fieldNames, fieldTypes,","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/two_gram_model.py:bad-continuation:itertools.repeat(fieldmeta.FieldMetaSpecial.none)))","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/opfutils.py:bad-continuation:self.predictedFieldName,","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/opfutils.py:bad-continuation:self.classifierInput)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not len(weights) > 0 or","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not isinstance(weights[0], float)):","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not len(metrics) > 0 or","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:bad-continuation:not isinstance(metrics[0], MetricsIface)):","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/metrics.py:function-redefined:def __init__(self, weights, metrics, window=None):","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:(classifier_indexes >= self._autoDetectWaitRecords) &","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:(classifier_indexes < record.ROWID)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:bad-continuation:#at beginning of model.run","count":1,"result_id":2088},{"warning":"5:nupic\/support\/feature_groups.py:bad-continuation:'base_feature',","count":1,"result_id":2088},{"warning":"5:nupic\/support\/feature_groups.py:bad-continuation:'third_feature'","count":1,"result_id":2088},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--verbosity', default=0, type='int',","count":1,"result_id":2088},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--seed', default=42, type='int',","count":1,"result_id":2088},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--short', action='store_false', dest='long',","count":1,"result_id":2088},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--long', action='store_true', dest='long',","count":1,"result_id":2088},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:optparse.Option('--installDir', dest='installDir',","count":1,"result_id":2088},{"warning":"5:nupic\/support\/unittesthelpers\/testcasebase.py:bad-continuation:]","count":1,"result_id":2088},{"warning":"5:nupic\/math\/__init__.py:bad-continuation:\"GetNTAReal\", \"GetNumpyDataType\",","count":1,"result_id":2088},{"warning":"5:nupic\/math\/__init__.py:bad-continuation:\"SparseMatrix\", \"SparseTensor\", \"TensorIndex\", \"Domain\", \"choose\", \"logChoose\"]","count":1,"result_id":2088},{"warning":"5:nupic\/math\/proposal.py:bad-continuation:self.dist, self.minVal - current, self.maxVal - current, r)","count":1,"result_id":2088},{"warning":"5:nupic\/math\/proposal.py:bad-continuation:self.dist, current - self.maxVal, current - self.minVal, r)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:ClassifierInput,","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:sensorParams, spEnable, spParams, tpEnable, tpParams, clEnable,","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:clParams, anomalyParams)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:\"activeColumnCount\", len(activeColumns))","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict, minLikelihoodThreshold, maxPredictionsPerStep)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict[k])","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:offsetDict[k])","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:likelihoodsDict)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:bestActValue)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:bucketLikelihood)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:trainRecords=anomalyParams.get('autoDetectWaitRecords', None),","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:cacheSize=anomalyParams.get('anomalyCacheRecords', None)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:self._classifier_helper.saved_states)","count":1,"result_id":2088},{"warning":"5:nupic\/frameworks\/opf\/clamodel.py:bad-continuation:self._classifier_helper.saved_categories)","count":1,"result_id":2088},{"warning":"5:src\/nupic\/image\/__init__.py:bad-continuation:cropStart[0] + width, cropStart[1] + height))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/image\/__init__.py:bad-continuation:maskScale=1.0):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:0: (quadrantPosn - radialLength, -radialLength),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:1: (radialLength, quadrantPosn - radialLength),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:2: (radialLength - quadrantPosn, radialLength),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:3: (-radialLength, radialLength - quadrantPosn),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:bad-continuation:}[quadrantIndex]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:bad-continuation:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:using-constant-test:if False:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/PictureSensorExplorers\/random.py:bad-continuation:[(-1, -1), (-1, 1), (1, -1), (1, 1)], dtype=int) \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:blankWithReset=False, background=255, invertOutput=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:filters=[], postFilters=[], explorer=\"Flash\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:categoryOutputFile=\"\", logText=False, logOutputImages=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:logOriginalImages=False, logFilteredImages=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:logLocationImages=False, logLocationOnOriginalImage=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:logBoundingBox=False, logDir=\"imagesensor_log\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:automaskingTolerance=0, automaskingPadding=0, memoryLimit=100,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:minimalBoundingBox=False, dataOut=None, categoryOut=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:partitionOut=None, resetOut=None, bboxOut=None, alphaOut=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:useAux=False, auxDataOut=None, auxDataWidth=None, **keywds):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:clearImageList=True, skipExplorerUpdate=False, auxPath=None, userAuxData=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:sequenceIndex=None, frameIndex=None):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:categoryName=categoryName, auxPath=auxPath, manualAux = manualAux,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:userAuxData=userAuxData, sequenceIndex=sequenceIndex, frameIndex=frameIndex)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:clearImageList=True):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:first=None, last=None, subsample=1, clearImageList=True,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:strictMaskLocations=True, categoryNameFilter=None, pattern=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:skipInterval=None, skipOffset=None, useCategories=True, auxPath=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:auxType=None):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:or skipOffset >= skipInterval):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:[r.match(c) is not None for r in matchers]]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:if os.path.splitext(f)[1].lower() in extensions]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-indentation:currentAuxPath =  []","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-indentation:for k in range(0, len(auxPath)):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-indentation:currentAuxPath.append(\"\".join([auxPath[k],imageName[1]+auxType[k]]))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-indentation:currentAuxPath = None","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:categoryName=images[i][2], clearImageList=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:skipExplorerUpdate=True, auxPath=currentAuxPath,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:sequenceIndex=sequenceInfo[i][0], frameIndex=sequenceInfo[i][1])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:reset=None, sequenceIndex=None, frameIndex=None):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:'reset': reset}","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:protocol=pickle.HIGHEST_PROTOCOL)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:categoryName=None, erode=None, userAuxData=None, auxPath=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:manualAux=False, sequenceIndex=None, frameIndex=None):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:ImageChops.constant(item['image'], self.background))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:ImageChops.constant(item['image'],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:self.automaskingTolerance))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"did not return the correct number of outputs. The number of images \" +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"that it returned does not match the return value of the filter's \" +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"getOutputCount() method.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:filterIndex, image.mode)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:self.filters[filterIndex][0], '%09d' % imageIndex)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"did not return the correct number of outputs\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:self.postFilters[filterIndex][0])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:filterIndex)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:for i, image in enumerate(newImages)]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\" send out simultaneously, which does not match ImageSensor's\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:if name != 'self']","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\" filtered image does not match the size of the original\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"images (multiple simultaneous responses). \"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"index %d of %d, \" % (i, len(self.filters)-1) +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:\"creates %d simultaneous responses.\" % outputCount[1])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:numFilterOutputs=self._getNumFilterOutputs(self.filters))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:+ \"list\/tuple of two ints from getOutputCount()\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:% moduleName, {}, {}, className)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:numFilters=len(self.filters),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:numFilterOutputs=self._getNumFilterOutputs(self.filters),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:enabledWidth=self.enabledWidth, enabledHeight=self.enabledHeight,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:blankWithReset=self.blankWithReset)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:for image in outputImages]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:croppedArrays[0].shape != (self.height, self.width))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:for i in xrange(self.depth)]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:'blankWithReset', 'enabledWidth', 'enabledHeight', 'invertOutput',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:'background', 'automaskingTolerance', 'automaskingPadding',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:'memoryLimit', 'minimalBoundingBox', '_cubeOutputs', '_auxDataWidth']:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:'resetExplorer': resetExplorer, 'resetFilters': resetFilters,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:'resetPostFilters': resetPostFilters})","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:dataOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:categoryOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:resetOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:bboxOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:alphaOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:partitionOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:auxDataOut=dict(","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:bad-continuation:for name, sImage in sCategoryInfo]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:anomalous-backslash-in-string:pathContents = [x for x in sorted(os.listdir(path)) if re.match('\\d', x)]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:anomalous-backslash-in-string:index = int(re.match('(\\d*)', pathContents[-1]).groups()[0]) + 1","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:redefined-variable-type:extensions = imageExtensions","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:redefined-variable-type:images = [image]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensor.py:redefined-variable-type:argStr = '{'","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:bad-continuation:numpy.ones((1, self._filterDim, self._filterDim),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:bad-continuation:dtype=RealNumpyDType)))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:debugMode=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:debugOutputDir='gabor.d',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:suppressLobes=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:wipeOutsideMask=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:convolutionMethod='1D'):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'small':   3,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'medium':  6,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'large':  12,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:}","count":57,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'vert':   0,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'swne':  45,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'horz':  90,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'nwse': 135,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'line-bright':           0,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'edge-bright-to-dark':  90,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'line-dark':           180,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:'edge-dark-to-bright': 270,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# [","count":228,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:],","count":456,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small vertical edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SW-NE edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small horizontal edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Small SE-NW edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium vertical edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SW-NE edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium horizontal edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Medium SE-NW edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large vertical edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (bright to dark)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SW-NE edges (dark to bright)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (bright to dark)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large horizontal edges (dark to bright)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Large SE-NW lines","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:self._gaborBankParams[responseIndex][0]['orient'])]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:for i in range(maskDim):","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:x[j,i] = float(i-halfWidth)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:y[j,i] = float(j-halfWidth)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:x0 = x[j,i] * cosTheta + y[j,i] * sinTheta","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:y0 = y[j,i] * cosTheta - x[j,i] * sinTheta","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:sinusoidalTerm = math.cos((sinusoidalConstant * x0) + phase)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:exponentialTerm = math.exp(exponentialConstant * (x0*x0 + aspectConstant*y0*y0))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:g[j,i] = exponentialTerm * sinusoidalTerm","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(1,   0.8,  1.3),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(2,   1.7,  2.4),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(3,   2.8,  3.5),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(4,   3.6,  4.6),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(5,   4.5,  5.6),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(6,   5.4,  6.8),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(7,   6.3,  7.9),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(8,   7.3,  9.1),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(9,   8.2, 10.3),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(10,  9.2, 11.5),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(11, 10.2, 12.7),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(12, 11.3, 14.1),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(13, 12.3, 15.4),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(14, 13.4, 16.8),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(15, 14.6, 18.2),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(16, 15.8, 19.7),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(17, 17.0, 21.2),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:(18, 18.2, 22.8),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:]","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Verticals","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,   0), (1, 1, 1, 0)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0,  90), (0, 1, 1, 0)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 180), (1, 1, 1, 0)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((0, 270), (1, 0, 1, 0)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SW-NE","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,   0), (1, 1, 1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45,  90), (0, 1, 1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 180), (1, 1, 1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((45, 270), (1, 0, 1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# Horizontals","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,   0), (1, 1, 0, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90,  90), (0, 1, 0, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 180), (1, 1, 0, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((90, 270), (1, 0, 0, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:# SE-NW","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,   0), (1, 1, -1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135,  90), (0, 1, -1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 180), (1, 1, -1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:((135, 270), (1, 0, -1, 1)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:sideLen, self._rad2deg(phase))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:sideLen, phase):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:filter.shape[0], filter.shape[0], filter, filter)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:phase=filterSpecs['phase'], orientation=filterSpecs['orient'],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:rotation=self._rotation)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:+ self._convolutionMethod)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:\"\"\"performs post-processing on the raw Gabor responses.","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:if postProcessingMode == 'raw':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = preResponse","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'abs':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = abs(preResponse)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'positive':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = preResponse.clip(min=0.0, max=1.0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'rectified':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = preResponse * preResponse","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'power':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:intResponse = preResponse.clip(min=0.0, max=1.0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = intResponse * intResponse","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'polynomial':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:gain = 1.0 \/ ((1.0 - threshold) ** steepness)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:intResponse = (preResponse - threshold).clip(min=0.0, max=1.0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = gain * (intResponse ** steepness)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'hardFull':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = (preResponse > threshold).astype(dtype) * 2.0 - 1.0","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'hardHalf':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = (preResponse > threshold).astype(dtype)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'sigmoidHalf':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = 1.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:elif postProcessingMode == 'sigmoidFull':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:postResponse = (2.0 \/ (numpy.exp(numpy.clip(steepness * (threshold - preResponse), -40.0, 40.0)) + 1.0)) - 1.0","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-indentation:return postResponse","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:image[j:j+filterDim,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:i:i+filterDim].flatten())","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bad-continuation:filterX.shape[0], filterY.shape[0], filterX, filterY)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:#--------------------------------------------------","count":57,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:windowX=9,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Height (in pixels) of smooth window for vertical","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:windowY=9,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Smooth window type; must be one of: 'flat', 'hanning',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:windowType='hanning',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:heightThresh=0.1,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum peak SMotion strength for a secondary lobe","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:secondaryHeightThresh=0.5,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum absolute horizontal length (in pixels) that a","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsZoneLenX=5,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum relative horizontal length (expressed as a","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelZoneLenX=0.15,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum horizontal \"gap\" width (in terms of absolute","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsWeakLenX=5,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum horizontal \"gap\" width (as percentage of the","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelWeakLenX=0.10,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# The number of pixels to expand our accepted zones","count":76,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePreExpansionX=16, #8, #0, #8,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePostExpansionX=4, #0, #4,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:widthThresh=0.1,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:secondaryWidthThresh=0.20,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum absolute vertical length (in pixels) that a","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsZoneLenY=5,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum relative vertical length (expressed as a","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelZoneLenY=0.15,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum vertical \"gap\" width (in terms of absolute","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minAbsWeakLenY=5,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:# Minimum vertical \"gap\" width (as percentage of the","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:minRelWeakLenY=0.30,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePreExpansionY=16, #8, #0, #8,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:zonePostExpansionY=4, #0, #4,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:#---------------------------------","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:splitPolicy='biggest',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:debugMode=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:window=self._windowType)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:imgDir, imgName = os.path.split(imagePath)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:imgPrefix = os.path.split(imgDir)[1]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:match = re.match(r\"^(?P<mnemonic>[a-z]+)\\.(?P<videoID>[0-9]{4})_sequence(?P<seqID>\\-?[0-9]{1,5})$\", imgPrefix)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if not match:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:match = re.match(r\"^vid(?P<videoID>[0-9]{4})_seq(?P<seqID>\\-?[0-9]{3,4})$\", imgPrefix)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert match","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:d = match.groupdict()","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:videoID = int(d['videoID'])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:seqID = int(d['seqID'])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:key = (videoID, seqID)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:\"\"\"smooth the data using a window with requested size.","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if x.ndim != 1:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:raise ValueError, \"smooth only accepts 1 dimension arrays.\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if x.size < window_len:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:window_len = x.size","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if window_len<3:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:return x","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if not window in ['flat', 'hanning', 'hamming', 'bartlett', 'blackman']:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:raise ValueError, \"Window is on of 'flat', 'hanning', 'hamming', 'bartlett', 'blackman'\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:s=numpy.r_[2*x[0]-x[window_len:1:-1],x,2*x[-1]-x[-1:-window_len:-1]]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if window == 'flat': #moving average","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:w=ones(window_len,'d')","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:else:","count":114,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:w=eval('numpy.'+window+'(window_len)')","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:y=numpy.convolve(w\/w.sum(),s,mode='same')","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:return y[window_len-1:-window_len+1]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:def process(self, image):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:\"\"\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:BaseFilter.process(self, image)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert image.mode == \"LA\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if 'tracking' in image.info:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:bbox = image.info['tracking']","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:bbox = image.split()[1].getbbox()","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if bbox is None:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:bbox = (0, 0, image.size[0], image.size[1])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:print 'WARNING: empty alpha channel'","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:width  = bbox[2] - bbox[0]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:height = bbox[3] - bbox[1]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImages = []","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:for scaleIdx, scale in enumerate(self._scales):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:targetDims = (self._targetDims[0] * scale,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorX = float(targetDims[0]) \/ float(width)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorY = float(targetDims[1]) \/ float(height)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._preservationMode is None:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:pass","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:elif self._preservationMode == \"aspect\":","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactor = min(scaleFactorX, scaleFactorY)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorX = scaleFactor","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorY = scaleFactor","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert self._preservationMode == \"size\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorX = scale","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaleFactorY = scale","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:targetWidth  = int(round(targetDims[0])) + 2*self._padding","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:targetHeight = int(round(targetDims[1])) + 2*self._padding","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcWidth  = float(targetWidth)  \/ scaleFactorX","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcHeight = float(targetHeight) \/ scaleFactorY","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._fillFromImageWherePossible:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:origCenterX = float(bbox[0] + bbox[2]) * 0.5","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:origCenterY = float(bbox[1] + bbox[3]) * 0.5","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:halfWidth  = srcWidth  * 0.5","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:halfHeight = srcHeight * 0.5","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcBox = (int(round(origCenterX - halfWidth)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBox = (max(srcBox[0], 0),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipOffset = (clipBox[0] - srcBox[0],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:paddedBBox = (int(bbox[0] - self._padding\/scaleFactorX),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBox = (max(paddedBBox[0], 0),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:srcBox = (0, 0, srcWidth, srcHeight)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBoxWidth = clipBox[2] - clipBox[0]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipBoxHeight = clipBox[3] - clipBox[1]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:clipOffset = (int((srcWidth - clipBoxWidth)\/2),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:croppedImage = image.crop(clipBox)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:croppedImage.load()","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:croppedImage.putalpha(Image.new(mode='L', size=croppedImage.size, color=255))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._fillValue is None:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:[gray, alpha] = image.split()","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:hist = numpy.array(gray.histogram(alpha), dtype='float')","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:mean = (hist * self._histWeights).sum() \/ hist.sum()","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if mean < 127.5:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:fillValue = 255","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:fillValue = 0","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:fillValue = self._fillValue","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImage = Image.new(mode='LA', size=(srcBox[2]-srcBox[0],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-continuation:srcBox[3]-srcBox[1]), color=fillValue)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImage.paste(croppedImage, clipOffset)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:scaledImage = newImage.resize((targetWidth, targetHeight), self._resizingFilter)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:assert scaledImage.mode == 'LA'","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:newImages += [scaledImage]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:if self._dumpDebugImages:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:self._handleDebug(scaledImage, scaleIdx)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:bad-indentation:return [newImages]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:using-constant-test:if False:","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:function-redefined:def process(self, image):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:shear = self.difficulty*self.maxShear - self.difficulty*0.3 + self.difficulty*0.3*self.random.random()","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1, shear, -shear*size[1], 0, 1, 0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:size[0] += int(shear*size[0])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = image.transform(tuple(size), Image.AFFINE, matrix)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox = list(newImage.split()[1].getbbox())","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[1] = 0","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[3] = size[1]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = newImage.crop(bbox)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1, 0, 0, shear, 1, -shear*size[0])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:size[1] += int(shear*size[1])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[0] = 0","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:bbox[2] = size[0]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:squeeze = self.minSqueeze - (self.minSqueeze - self.maxSqueeze)*(self.difficulty - self.difficulty*0.3 + self.difficulty*0.3*self.random.random())","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1\/squeeze, 0, 0, 0, 1, 0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), int((size[0] - squeeze*size[0])\/2), 0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:matrix = (1, 0, 0, 0, 1\/squeeze, 0)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = ImageChops.offset(image.transform(tuple(size), Image.AFFINE, matrix), 0, int((size[1] - squeeze*size[1])\/2))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = newImage.resize(image.size)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:retImage = Image.new('LA', image.size)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:retImage.paste(newImage, (0, int((image.size[1] - newImage.size[1])\/2.0)))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:newImage = retImage","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:bad-indentation:retImage.paste(newImage, (0, int((image.size[0] - newImage.size[0])\/2.0)))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:bad-indentation:raise RuntimeError(\"difficulty must be between 0.0 and 1.0\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:\"between 0 and 1, inclusive.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:\"convert(convert(gray, 'F') * scale + offset, mode)\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:gray=base,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:scale=scale,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:offset=offset,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:bad-continuation:mode=base.mode,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:bad-continuation:self.bgPath, 'backgound', 'background images', True)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'phaseMode':            ('single', 'dual'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'targetType':           ('edge', 'line'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'boundaryMode':         ('constrained', 'sweepOff'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'normalizationMethod':  ('fixed', 'max', 'mean'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'postProcessingMethod': ('raw', 'sigmoid', 'threshold'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'nta_morphologyMethod': ('best', 'opencv', 'nta'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:}","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:filterDim,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:boundaryMode,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:**keywds):","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:phaseMode=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:centerSurround=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:\"'%s' was explicitly specified as 'opencv' \" \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:preSuppression=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:whichScale='all',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:whichPhase=0,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:whichDirection='bottomUp'):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"nd\",          ctypes.c_int),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"dimensions\",  ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"strides\",     ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"data\",        ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:]","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.cast(array.ctypes.shape, ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.cast(array.ctypes.strides, ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:array.ctypes.data))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:postProcLUT[numpy.newaxis,:]),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:axis=1)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=numpy.int32) \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._alignToFour(outWidth)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_gaborComputeProc',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetIn',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_bufferSetOut',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_imageCounter',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_morphHeader',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:'_erosion',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:cachedBUInput = self._cachedBUInput \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:validCachedBUInput = numpy.array_equal(buInputVector, cachedBUInput)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:cachedValidRegionIn = self._cachedValidRegionIn \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:validCachedValidRegionIn = ((validRegionIn is None) or","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:numpy.array_equal(validRegionIn, cachedValidRegionIn))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:topDownConditionsMet = (self.nta_phaseIndex == 1) and \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:if not topDownConditionsMet:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:message = (","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"Top-down conditions were not met for GaborNode:\\n\") +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  phaseIndex=%s (expected %d)\\n\" % (self.nta_phaseIndex, 1)) +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  stage='%s' (expected '%s')\\n\" % (self._stage, \"infer\")) +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  topDownCombiner is %s (expected not None)\\n\" %","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"not None\" if (self._topDownCombiner is not None) else \"None\")) +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  buInputVector %s cache (expected ==)\\n\" %","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"==\" if validCachedBUInput else \"!=\")) +","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"  validRegionIn %s cache (expected ==)\\n\" %","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(\"==\" if validCachedValidRegionIn else \"!=\"))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:import warnings","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:warnings.warn(message, stacklevel=2)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:return","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:buOutput = self.response.reshape(self._inputSplitter.shape[0], self._numPlanes)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-indentation:PyRegion._topDownCompute(self, inputs, outputs, buOutput,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:buInputVector)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:orientation='all', phase=0,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:scaleIndex=0,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:cachedResponse=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:gain=1.0):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._inHeight,","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._inWidth,","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._inHeight],","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=RealNumpyDType)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._inputDims[scaleIndex][0]],","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=numpy.int32)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:(-responseRaw).clip(min=0.0, max=effectiveInfinity)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._inputDims[scaleIndex][0])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:bbox,","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:imageBox,","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:outputVector,","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:scaleIndex,","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:offImagePixelValue,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:validAlpha)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=validPyramid.dtype))).astype(numpy.int32)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:offImagePixelValue=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:validAlpha=None):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._gaborBank),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(inputVector),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(validAlpha),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(bbox),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(imageBox),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(outputVector),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._gainConstant),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('boundaryMode'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(offImagePixelValue),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('phaseMode'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('normalizationMethod'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('perPlaneNormalization'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('perPhaseNormalization'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._mapParamFromPythonToC('postProcessingMethod'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingSlope),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingCenter),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingMin),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcessingMax),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._bufferSetIn[scaleIndex]),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._bufferSetOut[scaleIndex]),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:self._wrapArray(self._postProcLUT),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:ctypes.c_float(self._postProcLutScalar),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:whichOrient]).clip(min=0.0, max=255.0).astype(numpy.uint8))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:numpy.ones((1, self._filterDim, self._filterDim),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:dtype=RealNumpyDType)))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:singleNodeOnly=False)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=9),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: single, dual\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue='single'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=0),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: line,edge\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue='edge'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: fixed, mean, max\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:),","count":95,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:constraints=\"enum: raw, sigmoid, threshold\"),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:constraints='enum: constrained, sweepOff',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue='constrained'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=0.3),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=4.5),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=5.6),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:defaultValue=1),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:bad-continuation:description=\"\"\"Width of the maximum resolution.\"\"\"),","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/extra\/GaborNode2.py:using-constant-test:if False:","count":57,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:bad-continuation:((size[0] - newImage.size[0])\/2,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:bad-continuation:cropStart[0] + size[0], cropStart[1] + size[1]))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Occlusion.py:bad-continuation:self.random.randint(sizeRange[0], sizeRange[1]))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'boundaryMode':         ['constrained', 'sweepOff'],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'normalizationMethod':  ['fixed', 'max', 'mean'],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:'postProcessingMethod': ['raw', 'sigmoid', 'threshold'],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:height,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:width,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:height],","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:dtype=numpy.float32)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"nd\",          ctypes.c_int),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"dimensions\",  ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"strides\",     ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:(\"data\",        ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.cast(array.ctypes.shape, ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.cast(array.ctypes.strides, ctypes.c_void_p),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:array.ctypes.data))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:postProcLUT[numpy.newaxis,:]),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:axis=1)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:dtype=numpy.int32)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Darwin\":  \"so\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Linux\":   \"so\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:\"Windows\": \"pyd\",","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:}.get(systemID)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:dtype=validPyramid.dtype))).astype(numpy.int32)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(self._filterBank),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(inputVector),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(validAlpha),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(bbox),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(imageBox),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(outputVector),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._gainConstant),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('boundaryMode'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(offImagePixelValue),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('phaseMode'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('normalizationMethod'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('perPlaneNormalization'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('perPhaseNormalization'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._mapParamFromPythonToC('postProcessingMethod'),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingSlope),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingCenter),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingMin),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcessingMax),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(inBuffer),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(outBuffer),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:self._wrapArray(self._postProcLUT),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:ctypes.c_float(self._postProcLutScalar),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bad-continuation:)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:using-constant-test:if False:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:bad-continuation:random.randint(sizeRange[0], sizeRange[1]))","count":38,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/ScaleToFit.py:bad-continuation:self.background)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/ScaleToFit.py:bad-continuation:((self.width - image.size[0])\/2, (self.height - image.size[1])\/2))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/PadToFit.py:bad-continuation:self.background)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:bad-continuation:for s in self.scales]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/MultipleScales.py:bad-continuation:for s in self.scales]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientImage = Image.new(\"L\", image.size)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray = numpy.array(gradientImage.split()[0].getdata())","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray.resize(image.size[1], image.size[0])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:opacity = self.difficulty - self.difficulty*.2 + self.random.random()*self.difficulty*.2","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:for i in xrange(image.size[1]):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:for j in xrange(image.size[0]):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:if type == 'horizontal':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray[i][j] = int(float(j)\/image.size[0]*255\/opacity)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:elif type == 'vertical':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray[i][j] = int(float(i)\/image.size[1]*255\/opacity)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:elif type == 'circular':","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientArray[i][j] = int(math.sqrt((i - image.size[1]\/2)**2 + (j - image.size[0]\/2)**2)\/math.sqrt((image.size[1]\/2)**2 + (image.size[0]\/2)**2)*255\/opacity)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:gradientImage.putdata([uint(p) for p in gradientArray.flatten()])","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:bad-indentation:self.gradientImages[(image.size, type)] = gradientImage","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ImageSweep.py:bad-continuation:os.path.split(self.getImageInfo(prevImage)['imagePath'])[0]):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ToCenterSweep.py:bad-continuation:*args, **kwargs)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:bad-continuation:\" when using 'numVisitsPerImage'\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:bad-continuation:\"(height, width) of the overall space to explore.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:bad-continuation:\"when 'replacement' is False.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:bad-continuation:*args, **kwargs)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:'leftdown', 'leftup', 'rightdown', 'rightup']","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:'leftup', 'upleft', 'leftdown', 'downleft',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:'rightup', 'upright', 'rightdown', 'downright'):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:bad-continuation:self.numFilterOutputs[i] - 1)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:numRepetitions=1,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:sweepOffMode=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:maxOffset=None,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:minVelocity=1,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:maxVelocity=3,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:seed=42,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:bad-continuation:*args, **kwargs):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:using-constant-test:if False:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:equalizeCategories=False,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:*args, **kwargs):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:self.position['filters']) not in self.history:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:bad-continuation:\"'replacement' is False.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:0: (quadrantPosn - radius, -radius),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:1: (radius, quadrantPosn - radius),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:2: (radius - quadrantPosn, radius),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:3: (-radius, radius - quadrantPosn),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:bad-continuation:}[quadrantIndex]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:using-constant-test:if False:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:bad-continuation:self.currentSaliencySizes[self.pointIndex][1] \\","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/OnionBlock.py:using-constant-test:if False:","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:bad-continuation:stepSize=1, resetEveryPos=False, verbosity=0, *args, **kwargs):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:bad-continuation:\"(height, width) of the overall space to explore.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:bad-continuation:\"(height, width) of the of the area round each center point to\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:bad-indentation:if DEBUG >= 2: print \"already performed jiggle\", jiggleIndex, \", skipping\"","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:bad-indentation:jiggleIndex += 1","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:bad-indentation:continue","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:bad-continuation:gJigglesPerformed)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:shiftBetweenSweeps=1, sweepOffObject=False, order=None, *args, **kwargs):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:\" number between 0 and 1\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:\"'image' and 'sweep'\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:bad-continuation:\"valid order after changing filters.\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:redefined-variable-type:bbox = [int(round(bbox[0] + width*self.sweepOffObject)),","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:bad-continuation:min(x2, mask.size[0]), min(y2, mask.size[1]))).getextrema()","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:bad-continuation:for i in xrange(self.numFilters)]","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'leftdown', 'leftup', 'rightdown', 'rightup'))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:wraparound=False, sweepOffObject=None, forceAlignment=False, **kwds):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ str(keywds.keys()))","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'wraparound': wraparound, 'sweepOffObject': sweepOffObject,","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'forceAlignment': forceAlignment}","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'rightup': 'leftdown', 'right': 'left', 'rightdown': 'leftup',","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'down': 'up', 'leftdown': 'rightup'}","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:\"(regular expression) against imagePath %s \" % filename","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"(image index: %d)\" % i)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"on separator '%s' \" % separator","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"returned %d elements \" % len(indices)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"instead of %d \" % (len(self.pattern) - 1)","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:+ \"(as specified by the 'pattern' argument to MultiSweep)\")","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:os.path.split(self.getImageInfo(prevImage)['imagePath'])[0]):","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:bad-continuation:'have not been assigned a probability')","count":19,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:anomalous-backslash-in-string:\"\"\"","count":133,"result_id":2069},{"warning":"5:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:anomalous-backslash-in-string:self.parsedDimensions = re.findall(\"\\(\\?P<([^>]+)>\", pattern)","count":38,"result_id":2069},{"warning":"5:src\/nupic\/research\/spatial_pooler.py:bad-continuation:self._inhibitionRadius)","count":26,"result_id":2062},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:(paramName, self.name, self.type))","count":56,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:doc='@property:place_holder(Region.getType)')","count":28,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:doc='@property:place_holder(Region.getSpec)')","count":28,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:name,","count":28,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:nodeType,","count":28,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:dimensions,","count":28,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:bundlePath,","count":28,"result_id":2060},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:label)","count":28,"result_id":2060},{"warning":"5:src\/nupic\/encoders\/scalar.py:bad-continuation:% self.w)","count":38,"result_id":2050},{"warning":"5:src\/nupic\/research\/spatial_pooler.py:bad-continuation:itertools.product(*rangeND)]","count":42,"result_id":2046},{"warning":"5:src\/nupic\/regions\/KNNClassifierRegion.py:bad-continuation:'pctOverlapOfProto',","count":47,"result_id":2041},{"warning":"5:src\/nupic\/engine\/__init__.py:bad-continuation:(\"nupic.regions.TestNode\", \"TestNode\"),","count":20,"result_id":2040},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:\"'cpp', and 'tm_py'\" % (temporalImp))","count":50,"result_id":2038},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:\"'cpp', 'tm_py', 'tm_cpp', 'monitored_tm_py'\" % (temporalImp))","count":7,"result_id":2031},{"warning":"5:src\/nupic\/research\/spatial_pooler.py:bad-continuation:xrange(self._numColumns)])","count":65,"result_id":2023},{"warning":"5:src\/nupic\/regions\/PyRegion.py:pointless-statement:decorated.__doc__ == f.__doc__","count":66,"result_id":2022},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:bottomUpIn=dict(","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:description=\"\"\"The input vector.\"\"\",","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:dataType='Real32',","count":270,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:required=True,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:regionLevel=False,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:isDefaultInput=True,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:requireSplitterMap=False),","count":270,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:resetIn=dict(","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:description=\"\"\"A boolean flag that indicates whether","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:count=1,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:required=False,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:regionLevel=True,","count":180,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:isDefaultInput=False,","count":180,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:topDownIn=dict(","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:description=\"\"\"The top-down input signal, generated from","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/SPRegion.py:bad-continuation:required = False,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:bottomUpIn=dict(","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:description=\"\"\"The input signal, conceptually organized as an","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:dataType='Real32',","count":180,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:count=0,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:required=True,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:regionLevel=False,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:isDefaultInput=True,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:requireSplitterMap=False),","count":180,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:resetIn=dict(","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:description=\"\"\"Effectively a boolean flag that indicates whether","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:count=1,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:required=False,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:regionLevel=True,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:isDefaultInput=False,","count":90,"result_id":1998},{"warning":"5:src\/nupic\/frameworks\/opf\/experiment_runner.py:bad-continuation:savedModelDir=_getModelCheckpointDir(experimentDir, checkpointName))","count":102,"result_id":1986},{"warning":"5:src\/nupic\/frameworks\/opf\/clamodel.py:bad-continuation:sensorParams,","count":102,"result_id":1986},{"warning":"5:src\/nupic\/frameworks\/opf\/clamodel.py:bad-continuation:maxPredictionsPerStep=DEFAULT_MAX_PREDICTIONS_PER_STEP):","count":102,"result_id":1986},{"warning":"5:src\/nupic\/algorithms\/KNNClassifier.py:bad-continuation:\"Verison\")","count":110,"result_id":1978},{"warning":"5:src\/nupic\/algorithms\/KNNClassifier.py:bad-continuation:self._partitionIdList[i], [])] = numpy.inf","count":12,"result_id":1978},{"warning":"5:src\/nupic\/regions\/TPRegion.py:bad-continuation:\"'cpp', 'tm_py', 'tm_py_fast',\"","count":89,"result_id":1942},{"warning":"5:src\/nupic\/research\/TP_shim.py:function-redefined:def topDownCompute(self, topDownIn=None):","count":5,"result_id":1937},{"warning":"5:src\/nupic\/research\/TP_shim.py:function-redefined:def getActiveState(self):","count":5,"result_id":1937},{"warning":"5:src\/nupic\/research\/TP_shim.py:function-redefined:def getPredictedState(self):","count":5,"result_id":1937},{"warning":"5:src\/nupic\/research\/TP_shim.py:function-redefined:def getLearnActiveStateT(self):","count":5,"result_id":1937},{"warning":"5:src\/nupic\/algorithms\/KNNClassifier.py:bad-continuation:cellsPerCol=0):","count":164,"result_id":1924},{"warning":"5:src\/nupic\/regions\/KNNClassifierRegion.py:bad-continuation:maxStoredPatterns=maxStoredPatterns","count":164,"result_id":1924},{"warning":"5:src\/nupic\/regions\/RecordSensor.py:bad-continuation:\"FileRecordStream\"),","count":183,"result_id":1905},{"warning":"5:src\/nupic\/regions\/RecordSensor.py:bad-continuation:'to compute into topDownOut (default 0).',","count":183,"result_id":1905},{"warning":"5:src\/nupic\/regions\/RecordSensor.py:bad-continuation:\"spatialTopDownOut and temporalTopDownOut should be the same size\")","count":183,"result_id":1905}],"9":[{"warning":"9:nupic\/frameworks\/opf\/clamodel.py:relative-import:from model import Model","count":4,"result_id":4219},{"warning":"9:nupic\/frameworks\/opf\/clamodel.py:relative-import:from opfutils import (InferenceType,","count":4,"result_id":4219},{"warning":"9:nupic\/regions\/PCANode.py:unused-wildcard-import:from nupic.engine import *Unused import registerBuildInRegions from wildcard import","count":34,"result_id":2189},{"warning":"9:nupic\/regions\/PCANode.py:unused-wildcard-import:from nupic.engine import *Unused import pyRegions from wildcard import","count":121,"result_id":2099},{"warning":"9:nupic\/regions\/PCANode.py:unused-wildcard-import:from nupic.engine import *Unused import registeredRegions from wildcard import","count":121,"result_id":2099},{"warning":"9:nupic\/regions\/PCANode.py:unused-wildcard-import:from nupic.engine import *Unused import registerBuiltInRegions from wildcard import","count":87,"result_id":2099},{"warning":"9:nupic\/data\/generators\/distributions.py:wildcard-import:from math import *","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:wildcard-import:from random import *","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import pow from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import cosh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import ldexp from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import acosh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import tan from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import asin from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fabs from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import floor from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atanh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sqrt from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import frexp from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import degrees from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log10 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sin from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import asinh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fsum from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import modf from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atan from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import isnan from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import factorial from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import copysign from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import ceil from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atan2 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import isinf from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import trunc from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sinh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import expm1 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import e from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import tanh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log1p from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import radians from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import lgamma from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import erf from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import hypot from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import erfc from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fmod from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import cos from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import exp from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import acos from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import gamma from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import SystemRandom from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import paretovariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import shuffle from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import randrange from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import BPF from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import random from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import WichmannHill from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import normalvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import seed from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import weibullvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import LOG4 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import vonmisesvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import gammavariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import uniform from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import expovariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import betavariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import lognormvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import getrandbits from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import setstate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import TWOPI from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import triangular from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import gauss from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import jumpahead from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import choice from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import RECIP_BPF from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import getstate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import SG_MAGICCONST from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import Random from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import NV_MAGICCONST from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:wildcard-import:from nupic.data.generators.distributions import *","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import SystemRandom from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import paretovariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import isnan from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import shuffle from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import randrange from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import BPF from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import betavariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import fsum from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import WichmannHill from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import normalvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import cosh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import ldexp from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import seed from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import weibullvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import acosh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import tan from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import exp from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import asin from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import LOG4 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import log from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import fabs from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import floor from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import vonmisesvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import atanh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import gammavariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sqrt from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import uniform from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import frexp from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import NV_MAGICCONST from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import expovariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import degrees from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import randint from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import pow from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import lognormvariate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import pi from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import log10 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sin from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import getrandbits from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import setstate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import division from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import asinh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import random from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import fmod from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import atan from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import GaussianDistribution from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import factorial from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import RandomCategories from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import copysign from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import triangular from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import gauss from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import ceil from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import atan2 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import TWOPI from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import jumpahead from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import choice from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import RECIP_BPF from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import trunc from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sinh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sample from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import expm1 from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import getstate from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import e from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import SG_MAGICCONST from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import tanh from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import log1p from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import Random from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import SineWave from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import radians from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import lgamma from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import erf from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import hypot from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import erfc from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import modf from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import cos from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import isinf from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import acos from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import Distributions from wildcard import","count":251,"result_id":2091},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import gamma from wildcard import","count":251,"result_id":2091},{"warning":"9:src\/swarming\/HypersearchWorker.py:relative-import:from HypersearchV2 import HypersearchV2","count":2,"result_id":2089},{"warning":"9:src\/research\/fdrutilities.py:wildcard-import:from numpy import *","count":2,"result_id":2089},{"warning":"9:src\/swarming\/HypersearchV2.py:wildcard-import:from nupic.swarming.permutationhelpers import *","count":2,"result_id":2089},{"warning":"9:src\/research\/TP10X2.py:wildcard-import:from numpy import *","count":2,"result_id":2089},{"warning":"9:src\/data\/__init__.py:relative-import:from functionsource import FunctionSource","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:wildcard-import:from math import *","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:wildcard-import:from random import *","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import pow from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import cosh from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import ldexp from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import acosh from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import tan from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import asin from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fabs from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import floor from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atanh from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sqrt from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import frexp from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import degrees from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log10 from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sin from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import asinh from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fsum from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import modf from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atan from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import isnan from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import factorial from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import copysign from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import ceil from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atan2 from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import isinf from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import trunc from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sinh from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import expm1 from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import e from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import tanh from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log1p from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import radians from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import lgamma from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import erf from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import hypot from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import erfc from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fmod from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import cos from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import exp from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import acos from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import gamma from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import SystemRandom from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import paretovariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import shuffle from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import randrange from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import BPF from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import random from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import WichmannHill from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import normalvariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import seed from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import weibullvariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import LOG4 from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import vonmisesvariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import gammavariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import uniform from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import expovariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import betavariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import lognormvariate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import getrandbits from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import setstate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import TWOPI from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import triangular from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import gauss from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import jumpahead from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import choice from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import RECIP_BPF from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import getstate from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import SG_MAGICCONST from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import Random from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import NV_MAGICCONST from wildcard import","count":2,"result_id":2089},{"warning":"9:src\/data\/generators\/data_generator.py:wildcard-import:from nupic.data.generators.distributions import *","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from scalar import ScalarEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from adaptivescalar import AdaptiveScalarEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from date import DateEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from logenc import LogEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from category import CategoryEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from sdrcategory import SDRCategoryEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from delta import DeltaEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from scalarspace import ScalarSpaceEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from coordinate import CoordinateEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from geospatial_coordinate import GeospatialCoordinateEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from multi import MultiEncoder","count":2,"result_id":2089},{"warning":"9:src\/encoders\/__init__.py:relative-import:from utils import bitsToString","count":2,"result_id":2089},{"warning":"9:src\/regions\/TestRegion.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/SPRegion.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/RecordSensor.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/KNNAnomalyClassifierRegion.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/KNNAnomalyClassifierRegion.py:relative-import:from KNNClassifierRegion import KNNClassifierRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/KNNClassifierRegion.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/CLAClassifierRegion.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/TestNode.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/TPRegion.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/ImageSensor.py:relative-import:from PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"9:src\/regions\/extra\/GaborNode2.py:wildcard-import:from nupic.regions.Spec import *","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/modelfactory.py:relative-import:from clamodel import CLAModel","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/modelfactory.py:relative-import:from model import Model","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/modelfactory.py:relative-import:from two_gram_model import TwoGramModel","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/modelfactory.py:relative-import:from previousvaluemodel import PreviousValueModel","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/clamodelcallbacks.py:relative-import:from clamodel import CLAModel","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/opftaskdriver.py:relative-import:from predictionmetricsmanager import (","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/previousvaluemodel.py:relative-import:from opfutils import InferenceType","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/predictionmetricsmanager.py:relative-import:from opfutils import InferenceType, InferenceElement","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/two_gram_model.py:relative-import:from opfutils import InferenceType","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/opfhelpers.py:relative-import:import expdescriptionapi","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/opfbasicenvironment.py:relative-import:import opfutils","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/opfbasicenvironment.py:relative-import:import opfenvironment as opfenv","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/opfbasicenvironment.py:relative-import:from opfutils import InferenceType, InferenceElement","count":2,"result_id":2089},{"warning":"9:src\/frameworks\/opf\/metrics.py:relative-import:from safe_interpreter import SafeInterpreter","count":2,"result_id":2089},{"warning":"9:src\/support\/__init__.py:relative-import:from configuration import Configuration","count":2,"result_id":2089},{"warning":"9:src\/math\/proposal.py:wildcard-import:from nupic.math.dist import *","count":2,"result_id":2089},{"warning":"9:nupic\/data\/generators\/distributions.py:wildcard-import:from math import *","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:wildcard-import:from random import *","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import pow from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import cosh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import ldexp from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import acosh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import tan from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import asin from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fabs from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import floor from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atanh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sqrt from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import frexp from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import degrees from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log10 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sin from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import asinh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fsum from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import modf from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atan from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import isnan from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import factorial from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import copysign from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import ceil from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import atan2 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import isinf from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import trunc from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import sinh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import expm1 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import e from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import tanh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import log1p from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import radians from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import lgamma from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import erf from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import hypot from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import erfc from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import fmod from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import cos from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import exp from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import acos from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from math import *Unused import gamma from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import SystemRandom from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import paretovariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import shuffle from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import randrange from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import BPF from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import random from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import WichmannHill from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import normalvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import seed from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import weibullvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import LOG4 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import vonmisesvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import gammavariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import uniform from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import expovariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import betavariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import lognormvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import getrandbits from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import setstate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import TWOPI from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import triangular from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import gauss from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import jumpahead from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import choice from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import RECIP_BPF from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import getstate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import SG_MAGICCONST from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import Random from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/distributions.py:unused-wildcard-import:from random import *Unused import NV_MAGICCONST from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:wildcard-import:from nupic.data.generators.distributions import *","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import SystemRandom from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import paretovariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import isnan from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import shuffle from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import randrange from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import BPF from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import betavariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import fsum from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import WichmannHill from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import normalvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import cosh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import ldexp from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import seed from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import weibullvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import acosh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import tan from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import exp from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import asin from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import LOG4 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import log from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import fabs from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import floor from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import vonmisesvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import atanh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import gammavariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sqrt from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import uniform from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import frexp from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import NV_MAGICCONST from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import expovariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import degrees from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import randint from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import pow from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import lognormvariate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import pi from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import log10 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sin from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import getrandbits from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import setstate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import division from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import asinh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import random from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import fmod from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import atan from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import GaussianDistribution from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import factorial from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import RandomCategories from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import copysign from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import triangular from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import gauss from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import ceil from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import atan2 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import TWOPI from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import jumpahead from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import choice from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import RECIP_BPF from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import trunc from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sinh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import sample from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import expm1 from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import getstate from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import e from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import SG_MAGICCONST from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import tanh from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import log1p from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import Random from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import SineWave from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import radians from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import lgamma from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import erf from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import hypot from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import erfc from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import modf from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import cos from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import isinf from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import acos from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import Distributions from wildcard import","count":1,"result_id":2088},{"warning":"9:nupic\/data\/generators\/data_generator.py:unused-wildcard-import:from nupic.data.generators.distributions import *Unused import gamma from wildcard import","count":1,"result_id":2088},{"warning":"9:src\/nupic\/regions\/ImageSensor.py:relative-import:from PyRegion import PyRegion","count":19,"result_id":2069},{"warning":"9:src\/nupic\/regions\/extra\/GaborNode2.py:wildcard-import:from nupic.regions.Spec import *","count":19,"result_id":2069},{"warning":"9:src\/nupic\/regions\/extra\/GaborNode2.py:unused-wildcard-import:from nupic.regions.Spec import *Unused import dataTypesToPyTypes from wildcard import","count":19,"result_id":2069},{"warning":"9:src\/nupic\/regions\/extra\/GaborNode2.py:unused-wildcard-import:from nupic.regions.Spec import *Unused import CommandSpec from wildcard import","count":19,"result_id":2069},{"warning":"9:src\/nupic\/regions\/extra\/GaborNode2.py:unused-wildcard-import:from nupic.regions.Spec import *Unused import dataTypes from wildcard import","count":19,"result_id":2069},{"warning":"9:src\/nupic\/regions\/TestNode.py:relative-import:from PyRegion import PyRegion","count":48,"result_id":2040},{"warning":"9:src\/nupic\/regions\/TestRegion.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022},{"warning":"9:src\/nupic\/regions\/RecordSensor.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022},{"warning":"9:src\/nupic\/regions\/SPRegion.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022},{"warning":"9:src\/nupic\/regions\/KNNAnomalyClassifierRegion.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022},{"warning":"9:src\/nupic\/regions\/KNNClassifierRegion.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022},{"warning":"9:src\/nupic\/regions\/CLAClassifierRegion.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022},{"warning":"9:src\/nupic\/regions\/TPRegion.py:relative-import:from PyRegion import PyRegion","count":66,"result_id":2022}],"12":[{"warning":"12:nupic\/frameworks\/opf\/clamodel.py:invalid-name:Encoder  = self._getEncoder()","count":4,"result_id":4219},{"warning":"12:nupic\/regions\/TPRegion.py:invalid-name:TemporalClass = _getTPClass(temporalImp)","count":484,"result_id":2091},{"warning":"12:nupic\/regions\/AnomalyRegion.py:invalid-name:# ----------------------------------------------------------------------","count":193,"result_id":2091},{"warning":"12:nupic\/regions\/SPRegion.py:invalid-name:SpatialClass = getSPClass(spatialImp)","count":189,"result_id":2091},{"warning":"12:nupic\/regions\/SPRegion.py:invalid-name:self.SpatialClass = getSPClass(spatialImp)","count":189,"result_id":2091},{"warning":"12:nupic\/simple_server.py:invalid-name:def GET(self):","count":96,"result_id":2091},{"warning":"12:nupic\/simple_server.py:invalid-name:def POST(self, name):","count":192,"result_id":2091},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:#! \/usr\/bin\/env python","count":75,"result_id":2091},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:JSONStringFromFile = fileHandle.read().splitlines()","count":75,"result_id":2091},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:JSONStringFromFile = ''.join(JSONStringFromFile)","count":75,"result_id":2091},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:global _metricSpecSchema","count":75,"result_id":2091},{"warning":"12:nupic\/swarming\/ExtendedLogger.py:invalid-name:# ----------------------------------------------------------------------","count":36,"result_id":2091},{"warning":"12:src\/simple_server.py:invalid-name:def GET(self):","count":2,"result_id":2089},{"warning":"12:src\/simple_server.py:invalid-name:def POST(self, name):","count":4,"result_id":2089},{"warning":"12:src\/swarming\/ModelTerminator.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/swarming\/DummyModelRunner.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/swarming\/regression.py:invalid-name:self._sum_xy = 0","count":2,"result_id":2089},{"warning":"12:src\/swarming\/regression.py:invalid-name:self._sum_x_sq = 0","count":2,"result_id":2089},{"warning":"12:src\/swarming\/regression.py:invalid-name:self._sum_y = 0","count":2,"result_id":2089},{"warning":"12:src\/swarming\/regression.py:invalid-name:self._sum_x = 0","count":2,"result_id":2089},{"warning":"12:src\/swarming\/regression.py:invalid-name:self._sum_pct_change_abs = 0","count":2,"result_id":2089},{"warning":"12:src\/swarming\/regression.py:invalid-name:self._sum_pct_change = 0","count":2,"result_id":2089},{"warning":"12:src\/swarming\/ExtendedLogger.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/swarming\/permutations_runner.py:invalid-name:base_description_path = os.path.join(options[\"outDir\"],","count":2,"result_id":2089},{"warning":"12:src\/swarming\/permutations_runner.py:invalid-name:base_description_relpath = os.path.relpath(base_description_path,","count":2,"result_id":2089},{"warning":"12:src\/swarming\/permutations_runner.py:invalid-name:model_description = mod.descriptionInterface.getModelDescription()","count":2,"result_id":2089},{"warning":"12:src\/swarming\/HypersearchWorker.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/swarming\/ModelRunner.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/swarming\/ModelRunner.py:invalid-name:self._MATURITY_MAX_CHANGE = float(Configuration.get('nupic.hypersearch.maturityPctChange'))","count":2,"result_id":2089},{"warning":"12:src\/swarming\/ModelRunner.py:invalid-name:self._MIN_RECORDS_TO_BE_BEST = int(Configuration.get('nupic.hypersearch.bestModelMinRecords'))","count":2,"result_id":2089},{"warning":"12:src\/swarming\/ModelRunner.py:invalid-name:self._MATURITY_NUM_POINTS = int(Configuration.get('nupic.hypersearch.maturityNumPoints'))","count":2,"result_id":2089},{"warning":"12:src\/research\/TP_shim.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/research\/fdrutilities.py:invalid-name:def spDiff(SP1,SP2):","count":4,"result_id":2089},{"warning":"12:src\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:#! \/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:JSONStringFromFile = fileHandle.read().splitlines()","count":2,"result_id":2089},{"warning":"12:src\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:JSONStringFromFile = ''.join(JSONStringFromFile)","count":2,"result_id":2089},{"warning":"12:src\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:global _metricSpecSchema","count":2,"result_id":2089},{"warning":"12:src\/swarming\/HypersearchV2.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/swarming\/HypersearchV2.py:invalid-name:self.MATURITY_WINDOW  = int(Configuration.get(","count":2,"result_id":2089},{"warning":"12:src\/swarming\/HypersearchV2.py:invalid-name:self.MAX_GENERATIONS = int(Configuration.get(","count":2,"result_id":2089},{"warning":"12:src\/research\/TP10X2.py:invalid-name:#! \/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/algorithms\/CLAClassifier.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/algorithms\/CLAClassifier.py:invalid-name:def _pFormatArray(array_, fmt=\"%.2f\"):","count":2,"result_id":2089},{"warning":"12:src\/algorithms\/KNNClassifier.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/algorithms\/KNNClassifier.py:invalid-name:self._M = None","count":2,"result_id":2089},{"warning":"12:src\/algorithms\/KNNClassifier.py:invalid-name:self._Memory = None","count":2,"result_id":2089},{"warning":"12:src\/research\/TP.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/data\/CategoryFilter.py:invalid-name:#! \/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/data\/aggregator.py:invalid-name:def _aggr_first(inList):","count":2,"result_id":2089},{"warning":"12:src\/data\/aggregator.py:invalid-name:def _aggr_last(inList):","count":2,"result_id":2089},{"warning":"12:src\/data\/aggregator.py:invalid-name:def _aggr_sum(inList):","count":2,"result_id":2089},{"warning":"12:src\/data\/aggregator.py:invalid-name:def _aggr_mean(inList):","count":2,"result_id":2089},{"warning":"12:src\/data\/aggregator.py:invalid-name:def _aggr_mode(inList):","count":2,"result_id":2089},{"warning":"12:src\/data\/aggregator.py:invalid-name:def _aggr_weighted_mean(inList, params):","count":2,"result_id":2089},{"warning":"12:src\/data\/file_record_stream.py:invalid-name:self.__dict__ = state","count":2,"result_id":2089},{"warning":"12:src\/data\/sorter.py:invalid-name:available_memory = psutil.avail_phymem()","count":2,"result_id":2089},{"warning":"12:src\/engine\/__init__.py:invalid-name:def Array(dtype, size=None, ref=False):","count":2,"result_id":2089},{"warning":"12:src\/engine\/__init__.py:invalid-name:def ArrayRef(dtype):","count":2,"result_id":2089},{"warning":"12:src\/engine\/__init__.py:invalid-name:def IdentityWrapper(o):","count":2,"result_id":2089},{"warning":"12:src\/engine\/__init__.py:no-self-argument:def IdentityWrapper(o):","count":2,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:g_max_concurrency = None","count":2,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:g_max_concurrency_raise_exception = False","count":2,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:global g_max_concurrency, g_max_concurrency_raise_exception","count":12,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:_connectionPolicyInstanceProvider = _createDefaultPolicy","count":2,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:global g_max_concurrency","count":2,"result_id":2089},{"warning":"12:src\/database\/Connection.py:invalid-name:def __exit__(self, exc_type, exc_val, exc_tb):","count":6,"result_id":2089},{"warning":"12:src\/encoders\/scalarspace.py:bad-classmethod-argument:def __new__(self, w, minval=None, maxval=None, periodic=False, n=0, radius=0,","count":2,"result_id":2089},{"warning":"12:src\/regions\/Spec.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/TestRegion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/TestRegion.py:invalid-name:def whois_callers_caller():","count":2,"result_id":2089},{"warning":"12:src\/database\/ClientJobsDAO.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/SPRegion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/SPRegion.py:invalid-name:SpatialClass = getSPClass(spatialImp)","count":2,"result_id":2089},{"warning":"12:src\/regions\/SPRegion.py:invalid-name:self.SpatialClass = getSPClass(spatialImp)","count":2,"result_id":2089},{"warning":"12:src\/regions\/RecordSensor.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:self.saved_categories = []","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:prototype_idx = self._knnclassifier.getParameter('categoryRecencyList')","count":4,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:prototype_idx = numpy.array(","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:classifier_indexes = numpy.array(","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:valid_idx = numpy.where(","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:classifier_distances = self._knnclassifier.getLatestDistances()","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:valid_distances = classifier_distances[valid_idx]","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:classifier_indexes_prev = classifier_indexes[valid_idx]","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:ROWIDX = numpy.array(","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:self.ROWID = ROWID","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:obj_slot_values = dict((k, getattr(self, k)) for k in self.__slots__)","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNAnomalyClassifierRegion.py:invalid-name:def __setstate__(self, data_dict):","count":2,"result_id":2089},{"warning":"12:src\/regions\/KNNClassifierRegion.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/PyRegion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/PyRegion.py:invalid-name:def not_implemented(f):","count":2,"result_id":2089},{"warning":"12:src\/regions\/UnimportableNode.py:invalid-name:\"\"\"This file need only exist for testing purposes, and is not a valid region.","count":2,"result_id":2089},{"warning":"12:src\/regions\/CLAClassifierRegion.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/AnomalyRegion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/TestNode.py:invalid-name:from pprint import pprint as pp","count":2,"result_id":2089},{"warning":"12:src\/regions\/TPRegion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/TPRegion.py:invalid-name:TemporalClass = _getTPClass(temporalImp)","count":4,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:_kKernelTypes = [\"rbf\", \"linear\"]","count":2,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:self.cpp_svm_seed = nta_cpp_svm_seed","count":2,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:self.C = minC","count":2,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:def __init__(self,","count":4,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:def _initSvm(self, n_dims=None):","count":2,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:def _validateSvm(self, C, gamma, progressStart, progressEnd):","count":2,"result_id":2089},{"warning":"12:src\/regions\/SVMClassifierNode.py:invalid-name:def _buildSVM(self, C, gamma):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/__init__.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/inward.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/random1DOF.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/rotate.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/HorizontalBlock.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/HorizontalBlock.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/blockSpread.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/block1DOF.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/rotate_block.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/random.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/PictureSensorExplorers\/block.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/__init__.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/GaussianBlur.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/GaussianBlur.py:invalid-name:sharpness_enhancer = ImageEnhance.Sharpness(image.split()[0])","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/AddNoise.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Brightness.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:ID = 0","count":4,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:ID+=1","count":6,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:raw_output = None","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:raw_output = filtered[1]","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:final_output = None","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:(responses, raw_output) = self._applyPostFilters(croppedImages[i])","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:final_output = raw_output","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensor.py:invalid-name:outputImages, final_output = self._getOutputImages()","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:invalid-name:X = x * cosTheta - y * sinTheta","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:invalid-name:Y = x * sinTheta + y * cosTheta","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Mirror.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Rotation2D.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/GaborFilter.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/AffineTransform.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/HistogramShift.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/BoxFixer.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/BoxFixer.py:invalid-name:def _smooth(self, x, window_len=10, window=None):","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Thicken.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Contrast.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/BaseFilter.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/BaseFilter.py:invalid-name:sys_maxint = sys.maxint","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/EqualizeHistogram.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:self.nta_phaseIndex = 0","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:nta_edgeMode = keywds.pop('nta_edgeMode', None)","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg = numpy.add.reduce(tdInput, axis=1) \/ tdNumParents","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg *= 0","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg += tdMaxes.reshape(-1,1)","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg *= buOutput","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:td_max = tdInput_avg.max()","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg \/= td_max","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:X = x * cosTheta - y * sinTheta","count":2,"result_id":2089},{"warning":"12:src\/regions\/extra\/GaborNode2.py:invalid-name:Y = x * sinTheta + y * cosTheta","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Resize.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Crop.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Occlusion.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Flip.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/FillBackground.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def __init__(self, xsize, ysize, c, preserveCenterResolution=False, Debug=False):","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def _applyKernel(self, img, channel=0, Mirror=False):","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def _ceilFoor(self, mat, width, sentinel, Mirror=False):","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def _makeKernel(self, xsize, ysize, c, Debug=False, Save=True):","count":4,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/GaborConvolution.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/GaborConvolution.py:invalid-name:X = x * cosTheta - y * sinTheta","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/GaborConvolution.py:invalid-name:Y = x * sinTheta + y * cosTheta","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:self._bbox_cache = {}","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:def _getBBox(self, image_size):","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:full_bbox = self._getBBox(image.size)","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:image_size = image.size","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:new_size = [int(round(x * factor)) for x in image_size]","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:resized_image = image.resize(new_size, Image.ANTIALIAS)","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:raw_output = numpy.concatenate([x[1] for x in images])","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:mask_box = (0, 0, outWidth, outHeight)","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Tracking.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Lines.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/ScaleToFit.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/PadToFit.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/NormalizeContrast.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/__init__.py:invalid-name:#!\/usr\/bin\/env python","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/Gradient.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorFilters\/MultipleScales.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/Flash.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/ImageSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/ToCenterSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/RandomJump.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/OnionSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/CrossSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/EyeMovements.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/EyeMovements.py:invalid-name:self.aggregate_func = aggregate","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/RandomSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/RandomFlash.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/InwardSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/PatrolSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/OnionBlock.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/Jiggle.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/BlockSpread.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/RecordSensorFilters\/__init__.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/RecordSensorFilters\/AddNoise.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/RecordSensorFilters\/ModifyFields.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-name:# ----------------------------------------------------------------------","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/safe_interpreter.py:invalid-name:self.supported_nodes = tuple(set(self.supported_nodes) -","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:self.ROWID = ROWID","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:obj_slot_values = dict((k, getattr(self, k)) for k in self.__slots__)","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:def __setstate__(self, data_dict):","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:self.saved_categories = []","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:self._history_length = int(Configuration.get(","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:self.saved_states = []","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:ROWIDX = numpy.array(","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:prototype_idx = classifier.getSelf().getParameter('categoryRecencyList')","count":4,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:prototype_idx = numpy.array(","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:classifier_indexes = \\","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:valid_idx = numpy.where(","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:classifier_distances = classifier.getSelf().getLatestDistances()","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:valid_distances = classifier_distances[valid_idx]","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel_classifier_helper.py:invalid-name:classifier_indexes_prev = classifier_indexes[valid_idx]","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/expdescriptionhelpers.py:invalid-name:_config = dict()","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/expdescriptionhelpers.py:invalid-name:global baseDescriptionImportCount, _config, subExpDir","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/expdescriptionhelpers.py:invalid-name:global _config","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/expdescriptionhelpers.py:invalid-name:class __NoResult(object):","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/metrics.py:invalid-name:self.mean_window = 10","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/metrics.py:invalid-name:self.mode_window = 100","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:method_name = f.f_code.co_name","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:arg_class = None","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:arg_name = args[0][0] # potentially the 'self' arg if its a method","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:arg_class = args[3][arg_name].__class__.__name__","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:callable_name, file_name, class_name = getCallerInfo(2)","count":6,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:method_name = s","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:find_window = ctypes.windll.user32.FindWindowA","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:set_foreground_window = ctypes.windll.user32.SetForegroundWindow","count":2,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:packed_data = s.pack(*values)","count":4,"result_id":2089},{"warning":"12:src\/support\/__init__.py:invalid-name:def byteArrayToInt(packed_data):","count":2,"result_id":2089},{"warning":"12:src\/support\/enum.py:invalid-name:def Enum(*args, **kwargs):","count":2,"result_id":2089},{"warning":"12:src\/support\/features_list.py:invalid-name:required_fields = ['name', 'description', 'dateAdded', 'author']","count":2,"result_id":2089},{"warning":"12:src\/support\/consoleprinter.py:invalid-name:def __exit__(self, exc_type, exc_value, traceback):","count":4,"result_id":2089},{"warning":"12:src\/support\/lockattributes.py:invalid-name:deactivation_key = 'NTA_DONT_USE_LOCK_ATTRIBUTES'","count":2,"result_id":2089},{"warning":"12:src\/support\/lockattributes.py:invalid-name:def _allow_new_attributes(f):","count":2,"result_id":2089},{"warning":"12:src\/support\/lockattributes.py:invalid-name:def _simple_init(self, *args, **kw):","count":2,"result_id":2089},{"warning":"12:src\/support\/lockattributes.py:invalid-name:cls.__setattr__ = custom_setattr","count":2,"result_id":2089},{"warning":"12:src\/support\/lockattributes.py:invalid-name:cls._original_setattr = cls.__setattr__","count":2,"result_id":2089},{"warning":"12:src\/support\/lockattributes.py:invalid-name:def custom_setattr(self, name, value):","count":2,"result_id":2089},{"warning":"12:src\/support\/unittesthelpers\/algorithm_test_helpers.py:invalid-name:def CreateSP(imp, params):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def Indicator(pos, size, dtype):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def MultiArgMax(x):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def Any(sequence):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def All(sequence):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def Product(sequence):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def MultiIndicator(pos, size, dtype):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def Distribution(pos, size, counts, dtype):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:self.hack_ = None","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:self.rowSums_ = None","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:self.colSums_ = None","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:self.hist_ = None","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def ShannonEntropy(x):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def ShannonEntropyLog(lx):","count":2,"result_id":2089},{"warning":"12:src\/math\/stats.py:invalid-name:def DifferentialEntropy(mass, areas=1.0):","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:def ROCCurve(y_true, y_score):","count":6,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:n_pos = float(np.sum(y_true == classes[1]))  # nb of true positive","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:n_neg = float(np.sum(y_true == classes[0]))  # nb of true negative","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:neg_value, pos_value = classes[0], classes[1]","count":4,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:current_pos_count = current_neg_count = sum_pos = sum_neg = idx = 0","count":8,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:sorted_signal = signal[signal[:, 0].argsort(), :][::-1]","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:last_score = sorted_signal[0][0]","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:current_pos_count += 1","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:current_neg_count += 1","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:sum_pos += current_pos_count","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:sum_neg += current_neg_count","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:current_pos_count = 1 if value == pos_value else 0","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:current_neg_count = 1 if value == neg_value else 0","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:last_score = score","count":2,"result_id":2089},{"warning":"12:src\/math\/roc_utils.py:invalid-name:def AreaUnderCurve(x, y):","count":2,"result_id":2089},{"warning":"12:src\/math\/dist.py:invalid-name:self.alpha_1 = self.alpha - 1","count":2,"result_id":2089},{"warning":"12:src\/math\/logarithms.py:invalid-name:def logSumExp(A, B, out=None):","count":4,"result_id":2089},{"warning":"12:src\/math\/logarithms.py:invalid-name:def logDiffExp(A, B, out=None):","count":4,"result_id":2089},{"warning":"12:src\/math\/cross.py:invalid-name:def cross_list(*sequences):","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:class mvn(object):","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:self.Sigma11 = Sigma11","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:self.Sigma22i = Sigma22i","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:self.Sigma12 = Sigma12","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:Sigma22i = u22 * numpy.asmatrix(numpy.diag(s22i)) * vt22","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:given_from_mean = given - self.mean2","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:C22 = self.mvn.varcov[givenMask, ...][..., givenMask]","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:C12 = self.mvn.varcov[varMask, ...][..., givenMask]","count":2,"result_id":2089},{"warning":"12:src\/math\/mvn.py:invalid-name:C11 = self.mvn.varcov[varMask, ...][..., varMask]","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel.py:invalid-name:self._Model__learningEnabled = True","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel.py:invalid-name:self._Model__inferenceArgs = {}","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel.py:invalid-name:self._Model__inferenceType = InferenceType.TemporalNextStep","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel.py:invalid-name:self._Model__inferenceEnabled = True","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel.py:invalid-name:self._ms_prevVal = absoluteValue","count":2,"result_id":2089},{"warning":"12:src\/frameworks\/opf\/clamodel.py:invalid-name:self._ms_predHistories = dict()","count":2,"result_id":2089},{"warning":"12:nupic\/simple_server.py:invalid-name:def GET(self):","count":1,"result_id":2088},{"warning":"12:nupic\/simple_server.py:invalid-name:def POST(self, name):","count":2,"result_id":2088},{"warning":"12:nupic\/swarming\/ExtendedLogger.py:invalid-name:# ----------------------------------------------------------------------","count":1,"result_id":2088},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:#! \/usr\/bin\/env python","count":1,"result_id":2088},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:JSONStringFromFile = fileHandle.read().splitlines()","count":1,"result_id":2088},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:JSONStringFromFile = ''.join(JSONStringFromFile)","count":1,"result_id":2088},{"warning":"12:nupic\/swarming\/exp_generator\/ExpGenerator.py:invalid-name:global _metricSpecSchema","count":1,"result_id":2088},{"warning":"12:nupic\/regions\/SPRegion.py:invalid-name:SpatialClass = getSPClass(spatialImp)","count":1,"result_id":2088},{"warning":"12:nupic\/regions\/SPRegion.py:invalid-name:self.SpatialClass = getSPClass(spatialImp)","count":1,"result_id":2088},{"warning":"12:nupic\/regions\/AnomalyRegion.py:invalid-name:# ----------------------------------------------------------------------","count":1,"result_id":2088},{"warning":"12:nupic\/regions\/TPRegion.py:invalid-name:TemporalClass = _getTPClass(temporalImp)","count":2,"result_id":2088},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/__init__.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/rotate.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/HorizontalBlock.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/HorizontalBlock.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/block1DOF.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/random.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/PictureSensorExplorers\/block.py:bad-classmethod-argument:def queryRelevantParams(klass):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/__init__.py:invalid-name:#!\/usr\/bin\/env python","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/GaussianBlur.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/GaussianBlur.py:invalid-name:sharpness_enhancer = ImageEnhance.Sharpness(image.split()[0])","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Brightness.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:ID = 0","count":38,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:ID+=1","count":57,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:raw_output = None","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:raw_output = filtered[1]","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:final_output = None","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:(responses, raw_output) = self._applyPostFilters(croppedImages[i])","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:final_output = raw_output","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensor.py:invalid-name:outputImages, final_output = self._getOutputImages()","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:invalid-name:X = x * cosTheta - y * sinTheta","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:invalid-name:Y = x * sinTheta + y * cosTheta","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Mirror.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Rotation2D.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:invalid-name:def _smooth(self, x, window_len=10, window=None):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Thicken.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/BaseFilter.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/BaseFilter.py:invalid-name:sys_maxint = sys.maxint","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:#!\/usr\/bin\/env python","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:self.nta_phaseIndex = 0","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:nta_edgeMode = keywds.pop('nta_edgeMode', None)","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg = numpy.add.reduce(tdInput, axis=1) \/ tdNumParents","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg *= 0","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg += tdMaxes.reshape(-1,1)","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg *= buOutput","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:td_max = tdInput_avg.max()","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:tdInput_avg \/= td_max","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:X = x * cosTheta - y * sinTheta","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/extra\/GaborNode2.py:invalid-name:Y = x * sinTheta + y * cosTheta","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/EqualizeHistogram.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Crop.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def _applyKernel(self, img, channel=0, Mirror=False):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def _ceilFoor(self, mat, width, sentinel, Mirror=False):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:invalid-name:def _makeKernel(self, xsize, ysize, c, Debug=False, Save=True):","count":38,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Flip.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Occlusion.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/FillBackground.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:self._bbox_cache = {}","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:def _getBBox(self, image_size):","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:full_bbox = self._getBBox(image.size)","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:image_size = image.size","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:new_size = [int(round(x * factor)) for x in image_size]","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:resized_image = image.resize(new_size, Image.ANTIALIAS)","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:raw_output = numpy.concatenate([x[1] for x in images])","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:invalid-name:mask_box = (0, 0, outWidth, outHeight)","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:invalid-name:X = x * cosTheta - y * sinTheta","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:invalid-name:Y = x * sinTheta + y * cosTheta","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/ScaleToFit.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/PadToFit.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/NormalizeContrast.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/__init__.py:invalid-name:#!\/usr\/bin\/env python","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/MultipleScales.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/Flash.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/ImageSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/ToCenterSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/CrossSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/EyeMovements.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/EyeMovements.py:invalid-name:self.aggregate_func = aggregate","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/PatrolSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/OnionBlock.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-name:# ----------------------------------------------------------------------","count":19,"result_id":2069},{"warning":"12:src\/nupic\/regions\/TestNode.py:invalid-name:from pprint import pprint as pp","count":48,"result_id":2040},{"warning":"12:src\/nupic\/regions\/PyRegion.py:invalid-name:# ----------------------------------------------------------------------","count":66,"result_id":2022},{"warning":"12:src\/nupic\/regions\/PyRegion.py:invalid-name:def not_implemented(f):","count":66,"result_id":2022}],"18":[{"warning":"18:nupic\/research\/monitor_mixin\/plot.py:import-error:import matplotlib.cm as colorModel","count":30,"result_id":4161},{"warning":"18:nupic\/encoders\/date.py:import-error:from nupic.encoders.date_capnp import DateEncoderProto","count":82,"result_id":2716},{"warning":"18:nupic\/encoders\/scalar.py:import-error:import capnp","count":191,"result_id":2116},{"warning":"18:nupic\/encoders\/random_distributed_scalar.py:import-error:from nupic.encoders.random_distributed_scalar_capnp import (","count":190,"result_id":2116},{"warning":"18:nupic\/encoders\/multi.py:import-error:from nupic.encoders.scalar_capnp import ScalarEncoderProto","count":181,"result_id":2116},{"warning":"18:nupic\/encoders\/random_distributed_scalar.py:import-error:import capnp","count":79,"result_id":2116},{"warning":"18:nupic\/encoders\/multi.py:import-error:import capnp","count":79,"result_id":2116},{"warning":"18:nupic\/data\/generators\/sequence_machine.py:import-error:import numpy","count":251,"result_id":2091},{"warning":"18:nupic\/data\/generators\/distributions.py:import-error:import numpy as np","count":251,"result_id":2091},{"warning":"18:nupic\/data\/generators\/pattern_machine.py:import-error:import numpy","count":251,"result_id":2091},{"warning":"18:nupic\/data\/generators\/data_generator.py:import-error:from nupic.bindings.math import GetNTAReal","count":251,"result_id":2091},{"warning":"18:nupic\/research\/monitor_mixin\/monitor_mixin_base.py:import-error:import numpy","count":239,"result_id":2091},{"warning":"18:nupic\/encoders\/random_distributed_scalar.py:import-error:from nupic.bindings.math import Random as NupicRandom","count":215,"result_id":2091},{"warning":"18:nupic\/encoders\/sdrcategory.py:import-error:from nupic.bindings.math import SM32, GetNTAReal, Random as NupicRandom","count":210,"result_id":2091},{"warning":"18:nupic\/regions\/AnomalyRegion.py:import-error:import numpy","count":193,"result_id":2091},{"warning":"18:nupic\/regions\/TPRegion.py:import-error:import numpy","count":131,"result_id":2091},{"warning":"18:nupic\/simple_server.py:import-error:import web","count":96,"result_id":2091},{"warning":"18:nupic\/swarming\/exp_generator\/ExpGenerator.py:import-error:import validictory","count":75,"result_id":2091},{"warning":"18:nupic\/swarming\/hypersearch\/utils.py:import-error:import validictory","count":66,"result_id":2091},{"warning":"18:nupic\/data\/fieldmeta.py:locally-disabled:type,  # pylint: disable=W0622","count":65,"result_id":2091},{"warning":"18:nupic\/data\/stream_reader.py:locally-disabled:isBlocking,  # pylint: disable=W0613","count":65,"result_id":2091},{"warning":"18:nupic\/data\/stream_reader.py:locally-disabled:maxTimeout,  # pylint: disable=W0613","count":65,"result_id":2091},{"warning":"18:nupic\/swarming\/object_json.py:locally-disabled:# pylint: disable=E1103","count":37,"result_id":2091},{"warning":"18:nupic\/algorithms\/anomaly_likelihood.py:locally-disabled:# pylint: disable=W0212","count":22,"result_id":2091},{"warning":"18:nupic\/algorithms\/anomaly_likelihood.py:locally-enabled:# pylint: enable=W0212","count":22,"result_id":2091},{"warning":"18:src\/simple_server.py:import-error:import web","count":2,"result_id":2089},{"warning":"18:src\/simple_server.py:import-error:from nupic.frameworks.opf.modelfactory import ModelFactory","count":2,"result_id":2089},{"warning":"18:src\/swarming\/object_json.py:locally-disabled:# pylint: disable=E1103","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelTerminator.py:import-error:from nupic.swarming.hypersearch.utils import PeriodicActivityRequest","count":2,"result_id":2089},{"warning":"18:src\/swarming\/api.py:import-error:from nupic.frameworks.opf import opfhelpers","count":2,"result_id":2089},{"warning":"18:src\/swarming\/api.py:import-error:from nupic.database.ClientJobsDAO import ClientJobsDAO","count":2,"result_id":2089},{"warning":"18:src\/swarming\/api.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/swarming\/modelchooser.py:import-error:from nupic.support import initLogging","count":2,"result_id":2089},{"warning":"18:src\/swarming\/DummyModelRunner.py:import-error:from nupic.frameworks.opf.modelfactory import ModelFactory","count":2,"result_id":2089},{"warning":"18:src\/swarming\/DummyModelRunner.py:import-error:from nupic.frameworks.opf import opfhelpers","count":2,"result_id":2089},{"warning":"18:src\/swarming\/DummyModelRunner.py:import-error:from nupic.frameworks.opf.opfutils import ModelResult","count":2,"result_id":2089},{"warning":"18:src\/swarming\/DummyModelRunner.py:import-error:from nupic.swarming.hypersearch import utils","count":2,"result_id":2089},{"warning":"18:src\/swarming\/DummyModelRunner.py:import-error:from nupic.swarming.ModelRunner import OPFModelRunner","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutations_runner.py:import-error:from nupic.swarming import object_json as json","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutations_runner.py:import-error:import nupic.database.ClientJobsDAO as cjdao","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutations_runner.py:import-error:from nupic.swarming import HypersearchWorker","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutations_runner.py:import-error:from nupic.swarming.hypersearch import utils","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutations_runner.py:import-error:from nupic.swarming.HypersearchV2 import HypersearchV2","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutations_runner.py:import-error:from nupic.swarming.exp_generator.ExpGenerator import expGenerator","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchWorker.py:import-error:from nupic.support import initLogging","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchWorker.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchWorker.py:import-error:from nupic.swarming.ExtendedLogger import ExtendedLogger","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchWorker.py:import-error:from nupic.swarming.hypersearch.errorcodes import ErrorCodes","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchWorker.py:import-error:from nupic.swarming.hypersearch.utils import clippedObj, validate","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchWorker.py:import-error:from nupic.database.ClientJobsDAO import ClientJobsDAO","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutationhelpers.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/swarming\/permutationhelpers.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/swarming\/hypersearch\/experimentutils.py:import-error:from nupic.support.enum import Enum","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.database.ClientJobsDAO import ClientJobsDAO","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.frameworks.opf import opfhelpers","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.frameworks.opf.modelfactory import ModelFactory","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.frameworks.opf.opfbasicenvironment import BasicPredictionLogger","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.frameworks.opf.opfutils import matchPatterns","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.frameworks.opf.periodic import (PeriodicActivityMgr,","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.frameworks.opf.predictionmetricsmanager import MetricsManager","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.swarming.hypersearch.errorcodes import ErrorCodes","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.swarming.hypersearch.experimentutils import InferenceElement","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.swarming import regression","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.swarming.hypersearch import utils","count":2,"result_id":2089},{"warning":"18:src\/swarming\/ModelRunner.py:import-error:from nupic.data.stream_reader import StreamReader","count":2,"result_id":2089},{"warning":"18:src\/swarming\/hypersearch\/utils.py:import-error:import validictory","count":2,"result_id":2089},{"warning":"18:src\/swarming\/hypersearch\/utils.py:import-error:from nupic.database.ClientJobsDAO import (","count":2,"result_id":2089},{"warning":"18:src\/swarming\/hypersearch\/utils.py:import-error:from nupic.swarming.ModelRunner import OPFModelRunner","count":2,"result_id":2089},{"warning":"18:src\/swarming\/hypersearch\/utils.py:import-error:from nupic.swarming.DummyModelRunner import OPFDummyModelRunner","count":2,"result_id":2089},{"warning":"18:src\/research\/TP_shim.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/TP_shim.py:import-error:from nupic.research.temporal_memory import TemporalMemory","count":2,"result_id":2089},{"warning":"18:src\/research\/TP_shim.py:import-error:from nupic.research.monitor_mixin.temporal_memory_monitor_mixin import (","count":2,"result_id":2089},{"warning":"18:src\/research\/fdrutilities.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/fdrutilities.py:import-error:from numpy import *","count":2,"result_id":2089},{"warning":"18:src\/research\/fdrutilities.py:import-error:from nupic.bindings.math import (SM32, SparseBinaryMatrix)","count":2,"result_id":2089},{"warning":"18:src\/research\/fdrutilities.py:import-error:import pylab","count":4,"result_id":2089},{"warning":"18:src\/research\/fdrutilities.py:import-error:from nupic.math.cross import cross","count":2,"result_id":2089},{"warning":"18:src\/research\/fdrutilities.py:import-error:from IPython.Shell import IPShellEmbed; IPShellEmbed()()","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:import validictory","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:from nupic.frameworks.opf import jsonschema","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:from nupic.frameworks.opf.metrics import MetricSpec","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:from nupic.support import aggregationDivide","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:from nupic.support.enum import Enum","count":2,"result_id":2089},{"warning":"18:src\/swarming\/exp_generator\/ExpGenerator.py:import-error:from nupic.swarming.hypersearch.experimentutils import (InferenceType,","count":2,"result_id":2089},{"warning":"18:src\/research\/utils.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/utils.py:import-error:from nupic.network import NodeSetStream","count":2,"result_id":2089},{"warning":"18:src\/research\/utils.py:import-error:from nupic.support.learning import printTAM","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory_shim.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory_shim.py:import-error:from nupic.math import GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory_shim.py:import-error:from nupic.research.TP import TP","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory_shim.py:import-error:from nupic.research.TP10X2 import TP10X2","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory_shim.py:import-error:from nupic.research.connections import Connections","count":2,"result_id":2089},{"warning":"18:src\/research\/fast_temporal_memory.py:import-error:from nupic.research.temporal_memory import TemporalMemory","count":2,"result_id":2089},{"warning":"18:src\/research\/fast_temporal_memory.py:import-error:from nupic.bindings.algorithms import Connections, ConnectionsCell","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory.py:import-error:from nupic.bindings.math import Random","count":2,"result_id":2089},{"warning":"18:src\/research\/temporal_memory.py:import-error:from nupic.research.connections import Connections","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.frameworks.opf import opfhelpers","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.hypersearch.utils import sortedJSONDumpS, rApply, rCopy","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.hypersearch.utils import clippedObj","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.hypersearch.errorcodes import ErrorCodes","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.hypersearch.experimentutils import InferenceType","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.database.ClientJobsDAO import (","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.hypersearch.utils import (runModelGivenBaseAndParams,","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.permutationhelpers import *","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.swarming.exp_generator.ExpGenerator import expGenerator","count":2,"result_id":2089},{"warning":"18:src\/swarming\/HypersearchV2.py:import-error:from nupic.data.stream_reader import StreamReader","count":2,"result_id":2089},{"warning":"18:src\/research\/TP10X2.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/TP10X2.py:import-error:from numpy import *","count":2,"result_id":2089},{"warning":"18:src\/research\/TP10X2.py:import-error:import nupic.math","count":2,"result_id":2089},{"warning":"18:src\/research\/TP10X2.py:import-error:from nupic.research.TP import TP","count":2,"result_id":2089},{"warning":"18:src\/research\/TP10X2.py:import-error:from nupic.bindings.algorithms import Cells4","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:import-error:from prettytable import PrettyTable","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:import-error:from nupic.research.monitor_mixin.metric import Metric","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:import-error:from nupic.research.monitor_mixin.monitor_mixin_base import MonitorMixinBase","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:import-error:from nupic.research.monitor_mixin.trace import (IndicesTrace, CountsTrace,","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/metric.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/trace.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/monitor_mixin_base.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/monitor_mixin_base.py:import-error:from prettytable import PrettyTable","count":2,"result_id":2089},{"warning":"18:src\/research\/monitor_mixin\/monitor_mixin_base.py:import-error:from nupic.research.monitor_mixin.plot import Plot","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/__init__.py:import-error:from nupic.bindings.math import NearestNeighbor","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/__init__.py:import-error:from nupic.bindings.algorithms import svm_01, svm_dense","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/CLAClassifier.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/spatial_pooler.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/spatial_pooler.py:import-error:from nupic.bindings.math import (SM32 as SparseMatrix,","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly_likelihood.py:locally-disabled:# pylint: disable=W0212","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly_likelihood.py:locally-enabled:# pylint: enable=W0212","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly_likelihood.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly_likelihood.py:import-error:from nupic.utils import MovingAverage","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/cla_classifier_diff.py:import-error:from nupic.algorithms.CLAClassifier import CLAClassifier","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/cla_classifier_diff.py:import-error:from nupic.bindings.algorithms import FastCLAClassifier","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly.py:import-error:from nupic.algorithms.anomaly_likelihood import AnomalyLikelihood","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/anomaly.py:import-error:from nupic.utils import MovingAverage","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/cla_classifier_factory.py:import-error:from nupic.algorithms.CLAClassifier import CLAClassifier","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/cla_classifier_factory.py:import-error:from nupic.algorithms.cla_classifier_diff import CLAClassifierDiff","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/cla_classifier_factory.py:import-error:from nupic.bindings.algorithms import FastCLAClassifier","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/cla_classifier_factory.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/data\/stats.py:import-error:from nupic.regions.RecordSensor import RecordSensor","count":2,"result_id":2089},{"warning":"18:src\/data\/stats.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/data\/fieldmeta.py:locally-disabled:type,  # pylint: disable=W0622","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/KNNClassifier.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/algorithms\/KNNClassifier.py:import-error:from nupic.bindings.math import (NearestNeighbor, min_score_per_category)","count":2,"result_id":2089},{"warning":"18:src\/research\/TP.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/research\/TP.py:import-error:from nupic.bindings.math import Random","count":2,"result_id":2089},{"warning":"18:src\/research\/TP.py:import-error:from nupic.bindings.algorithms import getSegmentActivityLevel, isSegmentActive","count":2,"result_id":2089},{"warning":"18:src\/research\/TP.py:import-error:from nupic.math import GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/research\/TP.py:import-error:from nupic.support.consoleprinter import ConsolePrinterMixin","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:locally-disabled:isBlocking,  # pylint: disable=W0613","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:locally-disabled:maxTimeout,  # pylint: disable=W0613","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:from nupic.data.aggregator import Aggregator","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:from nupic.data.fieldmeta import FieldMetaInfo, FieldMetaType, FieldMetaSpecial","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:from nupic.data import jsonhelpers","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:from nupic.data.record_stream import RecordStreamIface","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:from nupic.frameworks.opf import jsonschema","count":2,"result_id":2089},{"warning":"18:src\/data\/stream_reader.py:import-error:import nupic.support","count":2,"result_id":2089},{"warning":"18:src\/data\/jsonhelpers.py:import-error:import validictory","count":2,"result_id":2089},{"warning":"18:src\/data\/inference_shifter.py:import-error:from nupic.frameworks.opf.opfutils import InferenceElement, ModelResult","count":2,"result_id":2089},{"warning":"18:src\/data\/aggregator.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/data\/aggregator.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/data\/record_stream.py:import-error:from nupic.data.fieldmeta import FieldMetaSpecial","count":2,"result_id":2089},{"warning":"18:src\/data\/stats_v2.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/data\/stats_v2.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/data\/stats_v2.py:import-error:from nupic.encoders import date as DateEncoder","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/anomalyzer.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/sequence_machine.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/data\/file_record_stream.py:import-error:from nupic.data.fieldmeta import FieldMetaInfo, FieldMetaType, FieldMetaSpecial","count":2,"result_id":2089},{"warning":"18:src\/data\/file_record_stream.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/data\/file_record_stream.py:import-error:from nupic.data.record_stream import RecordStreamIface","count":2,"result_id":2089},{"warning":"18:src\/data\/file_record_stream.py:import-error:from nupic.data.utils import (intOrNone, floatOrNone, parseBool, parseTimestamp,","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/pattern_machine.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/data\/sorter.py:import-error:from nupic.support import title","count":2,"result_id":2089},{"warning":"18:src\/data\/sorter.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/distributions.py:import-error:import numpy as np","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/data_generator.py:import-error:from nupic.encoders import adaptivescalar, sdrcategory, date","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/data_generator.py:import-error:from nupic.bindings.math import GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/data_generator.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/data\/generators\/data_generator.py:import-error:from nupic.data.generators.distributions import *","count":2,"result_id":2089},{"warning":"18:src\/engine\/common_networks\/__init__.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/engine\/common_networks\/__init__.py:import-error:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"18:src\/engine\/common_networks\/__init__.py:import-error:from nupic.encoders import MultiEncoder, ScalarEncoder, DateEncoder","count":2,"result_id":2089},{"warning":"18:src\/engine\/__init__.py:import-error:import nupic.bindings.engine_internal as engine","count":2,"result_id":2089},{"warning":"18:src\/engine\/__init__.py:import-error:from nupic.support.lockattributes import LockAttributesMixin","count":2,"result_id":2089},{"warning":"18:src\/engine\/__init__.py:import-error:from nupic.analysis import inspect","count":2,"result_id":2089},{"warning":"18:src\/image\/__init__.py:import-error:from PIL import Image, ImageChops, ImageDraw, ImageFilter, ImageOps","count":2,"result_id":2089},{"warning":"18:src\/image\/__init__.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/__init__.py:import-error:from nupic.encoders.pass_through_encoder import PassThroughEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/coordinate.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/coordinate.py:import-error:from nupic.bindings.math import Random","count":2,"result_id":2089},{"warning":"18:src\/encoders\/coordinate.py:import-error:from nupic.encoders.base import Encoder","count":2,"result_id":2089},{"warning":"18:src\/database\/Connection.py:import-error:from DBUtils import SteadyDB","count":2,"result_id":2089},{"warning":"18:src\/database\/Connection.py:import-error:from DBUtils.PooledDB import PooledDB","count":2,"result_id":2089},{"warning":"18:src\/database\/Connection.py:import-error:import pymysql","count":2,"result_id":2089},{"warning":"18:src\/database\/Connection.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/encoders\/random_distributed_scalar.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/random_distributed_scalar.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/random_distributed_scalar.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/encoders\/random_distributed_scalar.py:import-error:from nupic.encoders.base import Encoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/random_distributed_scalar.py:import-error:from nupic.bindings.math import Random as NupicRandom","count":2,"result_id":2089},{"warning":"18:src\/encoders\/adaptivescalar.py:import-error:import numpy as np","count":2,"result_id":2089},{"warning":"18:src\/encoders\/adaptivescalar.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/adaptivescalar.py:import-error:from nupic.encoders.scalar import ScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/adaptivescalar.py:import-error:from nupic.utils import MovingAverage","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sparse_pass_through_encoder.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sparse_pass_through_encoder.py:import-error:from nupic.encoders import pass_through_encoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/date.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/date.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/date.py:import-error:from nupic.encoders.base import Encoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/date.py:import-error:from nupic.encoders.scalar import ScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/category.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/category.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/encoders\/category.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/category.py:import-error:from nupic.encoders.base import Encoder, EncoderResult","count":2,"result_id":2089},{"warning":"18:src\/encoders\/category.py:import-error:from nupic.encoders.scalar import ScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalar.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalar.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalar.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalar.py:import-error:from nupic.bindings.math import SM32, GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalar.py:import-error:from nupic.encoders.base import Encoder, EncoderResult","count":2,"result_id":2089},{"warning":"18:src\/encoders\/base.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/base.py:import-error:from nupic.encoders.utils import bitsToString","count":2,"result_id":2089},{"warning":"18:src\/encoders\/delta.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/delta.py:import-error:from nupic.encoders.adaptivescalar import AdaptiveScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/delta.py:import-error:from nupic.encoders.base import EncoderResult","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.base import Encoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.scalar import ScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.adaptivescalar import AdaptiveScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.date import DateEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.logenc import LogEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.category import CategoryEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.sdrcategory import SDRCategoryEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.delta import DeltaEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.scalarspace import ScalarSpaceEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.pass_through_encoder import PassThroughEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.sparse_pass_through_encoder import SparsePassThroughEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.coordinate import CoordinateEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.geospatial_coordinate import GeospatialCoordinateEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.utils import bitsToString","count":2,"result_id":2089},{"warning":"18:src\/encoders\/multi.py:import-error:from nupic.encoders.random_distributed_scalar import RandomDistributedScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalarspace.py:import-error:from nupic.encoders.base import Encoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalarspace.py:import-error:from nupic.encoders.delta import DeltaEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/scalarspace.py:import-error:from nupic.encoders.adaptivescalar import AdaptiveScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/pass_through_encoder.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/pass_through_encoder.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/encoders\/pass_through_encoder.py:import-error:from nupic.encoders.base import Encoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/geospatial_coordinate.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/geospatial_coordinate.py:import-error:from pyproj import Proj, transform","count":2,"result_id":2089},{"warning":"18:src\/encoders\/geospatial_coordinate.py:import-error:from nupic.encoders.coordinate import CoordinateEncoder","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sdrcategory.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sdrcategory.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sdrcategory.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sdrcategory.py:import-error:from nupic.encoders.base import Encoder, EncoderResult","count":2,"result_id":2089},{"warning":"18:src\/encoders\/sdrcategory.py:import-error:from nupic.bindings.math import SM32, GetNTAReal, Random as NupicRandom","count":2,"result_id":2089},{"warning":"18:src\/encoders\/logenc.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/encoders\/logenc.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/encoders\/logenc.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/encoders\/logenc.py:import-error:from nupic.encoders.base import Encoder, EncoderResult","count":2,"result_id":2089},{"warning":"18:src\/encoders\/logenc.py:import-error:from nupic.encoders.scalar import ScalarEncoder","count":2,"result_id":2089},{"warning":"18:src\/regions\/TestRegion.py:import-error:from nupic.data.dictutils import DictObj","count":2,"result_id":2089},{"warning":"18:src\/regions\/TestRegion.py:import-error:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"18:src\/database\/ClientJobsDAO.py:import-error:from nupic.support.decorators import logExceptions #, logEntryExit","count":2,"result_id":2089},{"warning":"18:src\/database\/ClientJobsDAO.py:import-error:from nupic.database.Connection import ConnectionFactory","count":2,"result_id":2089},{"warning":"18:src\/database\/ClientJobsDAO.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/database\/ClientJobsDAO.py:import-error:from nupic.support import pymysqlhelpers","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:from nupic.bindings.math import GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:from nupic.bindings.algorithms import SpatialPooler as CPPSpatialPooler","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:from nupic.research.spatial_pooler import SpatialPooler as PYSpatialPooler","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:import nupic.research.fdrutilities as fdru","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:from nupic.support import getArgumentDescriptions","count":2,"result_id":2089},{"warning":"18:src\/regions\/SPRegion.py:import-error:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"18:src\/regions\/RecordSensor.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/RecordSensor.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNAnomalyClassifierRegion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNAnomalyClassifierRegion.py:import-error:import numpy.random","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNAnomalyClassifierRegion.py:import-error:from nupic.algorithms.anomaly import computeRawAnomalyScore","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNAnomalyClassifierRegion.py:import-error:from nupic.frameworks.opf.exceptions import (CLAModelInvalidRangeError,","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNClassifierRegion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNClassifierRegion.py:import-error:from nupic.algorithms import KNNClassifier","count":2,"result_id":2089},{"warning":"18:src\/regions\/KNNClassifierRegion.py:import-error:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"18:src\/regions\/PyRegion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/PyRegion.py:import-error:from nupic.support import getCallerInfo","count":2,"result_id":2089},{"warning":"18:src\/regions\/CLAClassifierRegion.py:import-error:from nupic.algorithms.cla_classifier_factory import CLAClassifierFactory","count":2,"result_id":2089},{"warning":"18:src\/regions\/CLAClassifierRegion.py:import-error:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"18:src\/regions\/AnomalyRegion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/AnomalyRegion.py:import-error:from nupic.algorithms import anomaly","count":2,"result_id":2089},{"warning":"18:src\/regions\/AnomalyRegion.py:import-error:from nupic.regions.PyRegion import PyRegion","count":2,"result_id":2089},{"warning":"18:src\/regions\/TestNode.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/TPRegion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/TPRegion.py:import-error:from nupic.research import TP","count":2,"result_id":2089},{"warning":"18:src\/regions\/TPRegion.py:import-error:from nupic.research import TP10X2","count":2,"result_id":2089},{"warning":"18:src\/regions\/TPRegion.py:import-error:from nupic.research import TP_shim","count":2,"result_id":2089},{"warning":"18:src\/regions\/TPRegion.py:import-error:from nupic.support import getArgumentDescriptions","count":2,"result_id":2089},{"warning":"18:src\/regions\/TPRegion.py:import-error:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"18:src\/regions\/SVMClassifierNode.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/SVMClassifierNode.py:import-error:from nupic.pynodes.PyNode import (PyNode,","count":2,"result_id":2089},{"warning":"18:src\/regions\/SVMClassifierNode.py:import-error:from nupic.pynodes import PyNode as PyNodeModule","count":2,"result_id":2089},{"warning":"18:src\/regions\/SVMClassifierNode.py:import-error:from nupic.algorithms import svm_01, svm_dense","count":2,"result_id":2089},{"warning":"18:src\/regions\/SVMClassifierNode.py:import-error:from nupic.analysis.memoryAwareness import MemoryAwareness","count":2,"result_id":2089},{"warning":"18:src\/regions\/SVMClassifierNode.py:import-error:from nupic.network import CreateNode","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/inward.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/inward.py:import-error:from nupic.math.cross import cross","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/random1DOF.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/random1DOF.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/vertical.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/vertical.py:import-error:from nupic.regions.PictureSensorExplorers.random import RandomPictureExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/rotate.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/HorizontalBlock.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/blockSpread.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/blockSpread.py:import-error:from nupic.math.cross import cross","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/block1DOF.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/rotate_block.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/random.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/random.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/block.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/center.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/horizontal.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/PictureSensorExplorers\/horizontal.py:import-error:from nupic.regions.PictureSensorExplorers.random import RandomPictureExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaussianBlur.py:import-error:from PIL import ImageEnhance","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaussianBlur.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddNoise.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddNoise.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddNoise.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Brightness.py:import-error:from PIL import ImageEnhance","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Brightness.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensor.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensor.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensor.py:import-error:from nupic.bindings.math import GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensor.py:import-error:from nupic.image import (serializeImage,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:import-error:from nupic.regions.ImageSensorFilters.Convolution import Convolution","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Mirror.py:import-error:from PIL import ImageOps","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Mirror.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Rotation2D.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Rotation2D.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:from nupic.math import GetNTAReal","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:from nupic.bindings.algorithms import (Float32SeparableConvolution2D,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AffineTransform.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AffineTransform.py:import-error:from PIL import ImageChops","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AffineTransform.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/HistogramShift.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/HistogramShift.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/HistogramShift.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter, uint","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/BoxFixer.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/BoxFixer.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/BoxFixer.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Thicken.py:import-error:from PIL import ImageChops","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Thicken.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:import-error:from nupic.image import (createMask, isSimpleBBox)","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:import-error:from nupic.frameworks.vision2 import VisionUtils","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Contrast.py:import-error:from PIL import (ImageEnhance,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Contrast.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/EqualizeHistogram.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/EqualizeHistogram.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/EqualizeHistogram.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter, uint","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:from opencv.cvtypes import cv","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:from nupic.regions.PyRegion import PyRegion, RealNumpyDType","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:from nupic.regions.Spec import *","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:from nupic.bindings.algorithms import Float32Erosion","count":2,"result_id":2089},{"warning":"18:src\/regions\/extra\/GaborNode2.py:import-error:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Resize.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Resize.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Crop.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Occlusion.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Occlusion.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Occlusion.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter, uint","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Flip.py:import-error:from PIL import ImageOps","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Flip.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/FillBackground.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/FillBackground.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/FillBackground.py:import-error:from nupic.image import (createMask, isSimpleBBox)","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/LogPolar.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/LogPolar.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/LogPolar.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborConvolution.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/GaborConvolution.py:import-error:from nupic.regions.ImageSensorFilters.Convolution import Convolution","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Convolution.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Convolution.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Convolution.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter, uint","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Tracking.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Tracking.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Tracking.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Lines.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Lines.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Lines.py:import-error:from PIL import ImageDraw","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Lines.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter, uint","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/ScaleToFit.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/ScaleToFit.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/PadToFit.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/PadToFit.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/NormalizeContrast.py:import-error:from PIL import (Image,","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/NormalizeContrast.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Gradient.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Gradient.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/Gradient.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter, uint","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/MultipleScales.py:import-error:from PIL import Image","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorFilters\/MultipleScales.py:import-error:from nupic.regions.ImageSensorFilters.BaseFilter import BaseFilter","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/Flash.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/ImageSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/ToCenterSweep.py:import-error:from nupic.regions.ImageSensorExplorers.SpiralSweep import SpiralSweep","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/RandomJump.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/OnionSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/CrossSweep.py:import-error:from nupic.regions.ImageSensorExplorers.SpiralSweep import SpiralSweep","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/EyeMovements.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/RandomSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/RandomFlash.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/InwardSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/InwardSweep.py:import-error:from nupic.math.cross import cross","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/PatrolSweep.py:import-error:from nupic.regions.ImageSensorExplorers.SpiralSweep import SpiralSweep","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/OnionBlock.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/Jiggle.py:import-error:from nupic.regions.ImageSensorExplorers.SpiralSweep import SpiralSweep","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/BlockSpread.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/BlockSpread.py:import-error:from nupic.math.cross import cross","count":2,"result_id":2089},{"warning":"18:src\/regions\/RecordSensorFilters\/AddNoise.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/RecordSensorFilters\/ModifyFields.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/modelfactory.py:import-error:import nupic.frameworks.opf.opfutils as opfutils","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodelcallbacks.py:import-error:from nupic.support.fshelpers import makeDirectoryFromAbsolutePath","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/client.py:import-error:from nupic.frameworks.opf.modelfactory import ModelFactory","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/client.py:import-error:from nupic.frameworks.opf.opfbasicenvironment import BasicDatasetReader","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/client.py:import-error:from nupic.frameworks.opf.predictionmetricsmanager import MetricsManager","count":2,"result_id":2089},{"warning":"18:src\/regions\/ImageSensorExplorers\/MultiSweep.py:import-error:from nupic.regions.ImageSensorExplorers.BaseExplorer import BaseExplorer","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/previousvaluemodel.py:import-error:from nupic.data import fieldmeta","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/previousvaluemodel.py:import-error:from nupic.frameworks.opf import model","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/previousvaluemodel.py:import-error:from nupic.frameworks.opf import opfutils","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/predictionmetricsmanager.py:import-error:from nupic.data.inference_shifter import InferenceShifter","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/predictionmetricsmanager.py:import-error:from nupic.frameworks.opf import metrics","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/predictionmetricsmanager.py:import-error:from nupic.data.fieldmeta import (","count":4,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/predictionmetricsmanager.py:import-error:from nupic.frameworks.opf.metrics import MetricSpec","count":6,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/predictionmetricsmanager.py:import-error:from nupic.frameworks.opf.opfutils import ModelResult, SensorInput","count":4,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/model.py:import-error:import nupic.frameworks.opf.opfutils as opfutils","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/safe_interpreter.py:import-error:import asteval","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/two_gram_model.py:import-error:from nupic import encoders","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/two_gram_model.py:import-error:from nupic.data import fieldmeta","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/two_gram_model.py:import-error:from nupic.frameworks.opf import model","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/two_gram_model.py:import-error:from nupic.frameworks.opf import opfutils","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.data import jsonhelpers","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.frameworks.opf import opfbasicenvironment, opfhelpers","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.frameworks.opf.expdescriptionapi import OpfEnvironment","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.frameworks.opf.modelfactory import ModelFactory","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.frameworks.opf.opftaskdriver import OPFTaskDriver","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.frameworks.opf.opfutils import (InferenceElement, matchPatterns,","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/experiment_runner.py:import-error:from nupic.support import initLogging","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfutils.py:import-error:import nupic.data.jsonhelpers as jsonhelpers","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfutils.py:import-error:from nupic.support.enum import Enum","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/expdescriptionapi.py:import-error:from nupic.frameworks.opf.opfutils import validateOpfJsonValue","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/expdescriptionapi.py:import-error:from nupic.frameworks.opf.opftaskdriver import (IterationPhaseSpecInferOnly,","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/expdescriptionapi.py:import-error:from nupic.support.enum import Enum","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfbasicenvironment.py:import-error:from nupic.data.file_record_stream import FileRecordStream","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfbasicenvironment.py:import-error:from nupic.data.stream_reader import StreamReader","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfbasicenvironment.py:import-error:from nupic.data.fieldmeta import (FieldMetaInfo,","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfbasicenvironment.py:import-error:from nupic.data.inference_shifter import InferenceShifter","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/opfbasicenvironment.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel_classifier_helper.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel_classifier_helper.py:import-error:from nupic.support.configuration import Configuration","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel_classifier_helper.py:import-error:from nupic.frameworks.opf.exceptions import (CLAModelInvalidRangeError,","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/expdescriptionhelpers.py:import-error:from nupic.data.dictutils import rUpdate","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/metrics.py:import-error:import numpy as np","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/metrics.py:import-error:from nupic.data.fieldmeta import FieldMetaType","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/metrics.py:import-error:import nupic.math.roc_utils as roc","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/metrics.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/metrics.py:import-error:from nupic.frameworks.opf.opfutils import InferenceType","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/metrics.py:import-error:from nupic.utils import MovingAverage","count":2,"result_id":2089},{"warning":"18:src\/support\/feature_groups.py:import-error:from nupic.support.features_list import FEATURES_LIST","count":2,"result_id":2089},{"warning":"18:src\/support\/features.py:import-error:from nupic.support.features_list import FEATURES_LIST","count":2,"result_id":2089},{"warning":"18:src\/support\/features.py:import-error:from nupic.support.feature_groups import GROUPS","count":2,"result_id":2089},{"warning":"18:src\/support\/features.py:import-error:import developer","count":2,"result_id":2089},{"warning":"18:src\/support\/__init__.py:import-error:from nupic.support.fshelpers import makeDirectoryFromAbsolutePath","count":2,"result_id":2089},{"warning":"18:src\/support\/__init__.py:import-error:from Carbon import Folder, Folders","count":2,"result_id":2089},{"warning":"18:src\/support\/__init__.py:import-error:import java.lang","count":2,"result_id":2089},{"warning":"18:src\/support\/configuration.py:import-error:from nupic.support.configuration_custom import Configuration","count":2,"result_id":2089},{"warning":"18:src\/support\/configuration_custom.py:import-error:from nupic.support.fshelpers import makeDirectoryFromAbsolutePath","count":2,"result_id":2089},{"warning":"18:src\/support\/configuration_custom.py:import-error:from nupic.support.configuration_base import Configuration as ConfigurationBase","count":2,"result_id":2089},{"warning":"18:src\/support\/pymysqlhelpers.py:import-error:import pymysql","count":2,"result_id":2089},{"warning":"18:src\/support\/pymysqlhelpers.py:import-error:from pymysql.constants import ER","count":2,"result_id":2089},{"warning":"18:src\/support\/pymysqlhelpers.py:import-error:from nupic.support.decorators import retry as make_retry_decorator","count":2,"result_id":2089},{"warning":"18:src\/support\/unittesthelpers\/algorithm_test_helpers.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/support\/unittesthelpers\/algorithm_test_helpers.py:import-error:from nupic.bindings.algorithms import SpatialPooler as CPPSpatialPooler","count":2,"result_id":2089},{"warning":"18:src\/support\/unittesthelpers\/algorithm_test_helpers.py:import-error:from nupic.bindings.math import GetNTAReal, Random as NupicRandom","count":2,"result_id":2089},{"warning":"18:src\/support\/unittesthelpers\/algorithm_test_helpers.py:import-error:from nupic.research.spatial_pooler import SpatialPooler as PySpatialPooler","count":2,"result_id":2089},{"warning":"18:src\/support\/unittesthelpers\/testcasebase.py:import-error:import unittest2 as unittest","count":2,"result_id":2089},{"warning":"18:src\/test\/test_framework_helpers.py:import-error:import pytest","count":2,"result_id":2089},{"warning":"18:src\/math\/__init__.py:import-error:from nupic.bindings.math import (GetNTAReal,","count":2,"result_id":2089},{"warning":"18:src\/math\/__init__.py:import-error:from nupic.bindings.math import lgamma, erf","count":2,"result_id":2089},{"warning":"18:src\/math\/stats.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/math\/roc_utils.py:import-error:import numpy as np","count":2,"result_id":2089},{"warning":"18:src\/test\/abstract_temporal_memory_test.py:import-error:from nupic.data.generators.sequence_machine import SequenceMachine","count":2,"result_id":2089},{"warning":"18:src\/test\/abstract_temporal_memory_test.py:import-error:from nupic.research.monitor_mixin.temporal_memory_monitor_mixin import (","count":2,"result_id":2089},{"warning":"18:src\/test\/abstract_temporal_memory_test.py:import-error:from nupic.research.temporal_memory import TemporalMemory","count":2,"result_id":2089},{"warning":"18:src\/math\/dist.py:import-error:from nupic.math import lgamma, logChoose, choose, erf","count":2,"result_id":2089},{"warning":"18:src\/math\/dist.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/math\/proposal.py:import-error:from nupic.math.dist import *","count":2,"result_id":2089},{"warning":"18:src\/math\/logarithms.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/math\/mvn.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/math\/mvn.py:import-error:from numpy.linalg import svd","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:import numpy","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.frameworks.opf.model import Model","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.algorithms.anomaly import Anomaly","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.data import SENTINEL_VALUE_FOR_MISSING_DATA","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.data.fieldmeta import FieldMetaSpecial, FieldMetaInfo","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.encoders import MultiEncoder, DeltaEncoder","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.support.fshelpers import makeDirectoryFromAbsolutePath","count":2,"result_id":2089},{"warning":"18:src\/frameworks\/opf\/clamodel.py:import-error:from nupic.frameworks.opf.opfutils import (InferenceType,","count":2,"result_id":2089},{"warning":"18:nupic\/simple_server.py:import-error:import web","count":1,"result_id":2088},{"warning":"18:nupic\/swarming\/object_json.py:locally-disabled:# pylint: disable=E1103","count":1,"result_id":2088},{"warning":"18:nupic\/swarming\/hypersearch\/utils.py:import-error:import validictory","count":1,"result_id":2088},{"warning":"18:nupic\/swarming\/exp_generator\/ExpGenerator.py:import-error:import validictory","count":1,"result_id":2088},{"warning":"18:nupic\/research\/monitor_mixin\/monitor_mixin_base.py:import-error:import numpy","count":1,"result_id":2088},{"warning":"18:nupic\/algorithms\/anomaly_likelihood.py:locally-disabled:# pylint: disable=W0212","count":1,"result_id":2088},{"warning":"18:nupic\/algorithms\/anomaly_likelihood.py:locally-enabled:# pylint: enable=W0212","count":1,"result_id":2088},{"warning":"18:nupic\/data\/fieldmeta.py:locally-disabled:type,  # pylint: disable=W0622","count":1,"result_id":2088},{"warning":"18:nupic\/data\/stream_reader.py:locally-disabled:isBlocking,  # pylint: disable=W0613","count":1,"result_id":2088},{"warning":"18:nupic\/data\/stream_reader.py:locally-disabled:maxTimeout,  # pylint: disable=W0613","count":1,"result_id":2088},{"warning":"18:nupic\/data\/generators\/sequence_machine.py:import-error:import numpy","count":1,"result_id":2088},{"warning":"18:nupic\/data\/generators\/distributions.py:import-error:import numpy as np","count":1,"result_id":2088},{"warning":"18:nupic\/data\/generators\/pattern_machine.py:import-error:import numpy","count":1,"result_id":2088},{"warning":"18:nupic\/data\/generators\/data_generator.py:import-error:from nupic.bindings.math import GetNTAReal","count":1,"result_id":2088},{"warning":"18:nupic\/encoders\/random_distributed_scalar.py:import-error:from nupic.bindings.math import Random as NupicRandom","count":1,"result_id":2088},{"warning":"18:nupic\/encoders\/sdrcategory.py:import-error:from nupic.bindings.math import SM32, GetNTAReal, Random as NupicRandom","count":1,"result_id":2088},{"warning":"18:nupic\/regions\/AnomalyRegion.py:import-error:import numpy","count":1,"result_id":2088},{"warning":"18:nupic\/regions\/TPRegion.py:import-error:import numpy","count":1,"result_id":2088},{"warning":"18:src\/nupic\/regions\/KNNAnomalyClassifierRegion.py:import-error:import numpy.random","count":6,"result_id":2082},{"warning":"18:src\/nupic\/data\/generators\/sequence_machine.py:import-error:import numpy","count":8,"result_id":2080},{"warning":"18:src\/nupic\/data\/generators\/pattern_machine.py:import-error:import numpy","count":8,"result_id":2080},{"warning":"18:src\/nupic\/image\/__init__.py:import-error:from PIL import Image, ImageChops, ImageDraw, ImageFilter, ImageOps","count":19,"result_id":2069},{"warning":"18:src\/nupic\/image\/__init__.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/vertical.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/rotate.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/HorizontalBlock.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/block1DOF.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/random.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/random.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/block.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/center.py:import-error:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/PictureSensorExplorers\/horizontal.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/GaussianBlur.py:import-error:from PIL import ImageEnhance","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/AddNoise.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Brightness.py:import-error:from PIL import ImageEnhance","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensor.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensor.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensor.py:import-error:from nupic.bindings.math import GetNTAReal","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Mirror.py:import-error:from PIL import ImageOps","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Rotation2D.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:import-error:from nupic.bindings.algorithms import (Float32SeparableConvolution2D,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:import-error:from PIL import ImageChops","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/HistogramShift.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Thicken.py:import-error:from PIL import ImageChops","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:import-error:from PIL import (ImageEnhance,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:import-error:from nupic.frameworks.vision2 import VisionUtils","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/extra\/GaborNode2.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/extra\/GaborNode2.py:import-error:from opencv.cvtypes import cv","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/extra\/GaborNode2.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/extra\/GaborNode2.py:import-error:from nupic.bindings.algorithms import Float32Erosion","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/EqualizeHistogram.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/EqualizeHistogram.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Flip.py:import-error:from PIL import ImageOps","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Occlusion.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Occlusion.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/FillBackground.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Lines.py:import-error:from PIL import ImageDraw","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/ScaleToFit.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/PadToFit.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/NormalizeContrast.py:import-error:from PIL import (Image,","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/MultipleScales.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:import-error:import numpy","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:import-error:from PIL import Image","count":19,"result_id":2069},{"warning":"18:src\/nupic\/regions\/TestNode.py:import-error:import numpy","count":48,"result_id":2040},{"warning":"18:src\/nupic\/regions\/TestNode.py:import-error:import capnp","count":13,"result_id":2040},{"warning":"18:src\/nupic\/regions\/TestNode.py:import-error:from nupic.proto.TestNodeProto_capnp import TestNodeProto","count":13,"result_id":2040},{"warning":"18:src\/nupic\/engine\/__init__.py:import-error:from nupic.analysis import inspect","count":64,"result_id":2024},{"warning":"18:src\/nupic\/regions\/PyRegion.py:import-error:import numpy","count":66,"result_id":2022},{"warning":"18:src\/nupic\/research\/fast_temporal_memory.py:import-error:from nupic.bindings.algorithms import Connections, ConnectionsCell","count":146,"result_id":1942}],"8":[{"warning":"8:nupic\/research\/FDRCSpatial2.py:bad-builtin:items = map(_synStr, syns[row])","count":2,"result_id":4111},{"warning":"8:nupic\/frameworks\/opf\/exp_generator\/ExpGenerator.py:bad-builtin:activeOptions = filter(lambda x: getattr(options, x) != None,","count":115,"result_id":2169},{"warning":"8:nupic\/data\/fieldmeta.py:bad-builtin:return map(lambda x: cls.createFromFileFieldElement(x), fields)","count":125,"result_id":2159},{"warning":"8:nupic\/support\/object_json.py:bad-builtin:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":153,"result_id":2128},{"warning":"8:nupic\/research\/temporal_memory.py:no-self-use:def adaptSegment(self, segment, activeSynapses, connections,","count":100,"result_id":2117},{"warning":"8:nupic\/data\/generators\/distributions.py:redefined-builtin:from math import *","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/distributions.py:no-self-use:def getNext(self):","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/distributions.py:no-self-use:def getDescription(self):","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'period' in params: self.period=params.pop('period')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'phaseShift' in params: self.phaseShift = params.pop('phaseShift')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'mean' in params: self.mean = params.pop('mean')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'std' in params: self.std=params.pop('std')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/pattern_machine.py:unidiomatic-typecheck:if type(w) is list:","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/pattern_machine.py:unidiomatic-typecheck:assert type(w) is int, \"List for w not supported\"","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:redefined-builtin:from nupic.data.generators.distributions import *","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:no-self-use:def setSeed(self, seed):","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if self.verbosity>0: print 'Generating', len(records), 'records...'","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if self.verbosity>0: print 'Encoding', len(records), 'records.'","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'n' in encoderSpec: self.n = encoderSpec.pop('n')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'w' in encoderSpec: self.w = encoderSpec.pop('w')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'flag' in encoderSpec: self.flag = encoderSpec.pop('flag')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'isPredictedField' in encoderSpec: self.isPredictedField\\","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'dataClass' in encoderSpec: self.dataClass \\","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'dataClassName' in encoderSpec: self.dataClassName \\","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'dataType' in encoderSpec: self.dataType = encoderSpec.pop('dataType')","count":251,"result_id":2091},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'encoderType' in encoderSpec: self.encoderType \\","count":251,"result_id":2091},{"warning":"8:nupic\/frameworks\/opf\/metrics.py:attribute-defined-outside-init:self.err = None","count":240,"result_id":2091},{"warning":"8:nupic\/frameworks\/opf\/metrics.py:attribute-defined-outside-init:self.err = err","count":240,"result_id":2091},{"warning":"8:nupic\/frameworks\/opf\/expdescriptionapi.py:no-self-use:def normalizeStreamSource(self, stream):","count":236,"result_id":2091},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder.bucketMap = {x.key: numpy.array(x.value, dtype=numpy.uint32)","count":215,"result_id":2091},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:self.random = NupicRandom(randomState.randint(sys.maxint))","count":215,"result_id":2091},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder.random = NupicRandom()","count":215,"result_id":2091},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder._maxBuckets = INITIAL_BUCKETS","count":215,"result_id":2091},{"warning":"8:nupic\/encoders\/sdrcategory.py:attribute-defined-outside-init:self.random = NupicRandom(randomState.randint(sys.maxint))","count":210,"result_id":2091},{"warning":"8:nupic\/encoders\/sdrcategory.py:attribute-defined-outside-init:encoder.random = NupicRandom()","count":210,"result_id":2091},{"warning":"8:nupic\/swarming\/DummyModelRunner.py:bad-builtin:range = map(int, range.split(','))","count":190,"result_id":2091},{"warning":"8:nupic\/swarming\/DummyModelRunner.py:bad-builtin:sameModelNumbers = filter(lambda x: x[1] == self.modelIndex,","count":190,"result_id":2091},{"warning":"8:nupic\/swarming\/HypersearchWorker.py:bad-builtin:changedEntries = filter(lambda x:x[1][1] != x[2][1],","count":190,"result_id":2091},{"warning":"8:nupic\/regions\/SVMClassifierNode.py:bad-builtin:\",\".join(map(str, xrange(len(_kKernelTypes))))","count":190,"result_id":2091},{"warning":"8:nupic\/frameworks\/opf\/opftaskdriver.py:bad-builtin:self.__phases = tuple(map(lambda x: x._getImpl(model=model),","count":190,"result_id":2091},{"warning":"8:nupic\/frameworks\/opf\/expdescriptionapi.py:bad-builtin:taskLabelDuplicates = filter(lambda x: taskLabelsList.count(x) > 1,","count":190,"result_id":2091},{"warning":"8:nupic\/support\/datafiles.py:bad-builtin:categories = map(int, categories)","count":190,"result_id":2091},{"warning":"8:nupic\/support\/configuration_base.py:bad-builtin:replaceKeys = filter(lambda x: x.startswith(cls.envPropPrefix),","count":190,"result_id":2091},{"warning":"8:nupic\/math\/stats.py:bad-builtin:begDeg = map(None,numpy.zeros(len(samples)))","count":190,"result_id":2091},{"warning":"8:nupic\/math\/stats.py:bad-builtin:midDeg = map(None,numpy.zeros(len(samples)))","count":190,"result_id":2091},{"warning":"8:nupic\/math\/stats.py:bad-builtin:endDeg = map(None,numpy.zeros(len(samples)))","count":190,"result_id":2091},{"warning":"8:nupic\/frameworks\/opf\/clamodel.py:bad-builtin:fieldMetaList = map(FieldMetaInfo._make,","count":190,"result_id":2091},{"warning":"8:nupic\/math\/cross.py:bad-builtin:wheels = map(iter, sequences)","count":380,"result_id":2091},{"warning":"8:nupic\/data\/functionsource.py:attribute-defined-outside-init:self._prevSequenceId = state['prevSequenceId']","count":187,"result_id":2091},{"warning":"8:nupic\/data\/functionsource.py:attribute-defined-outside-init:self._sequenceInfoType = state['sequenceInfoType']","count":187,"result_id":2091},{"warning":"8:nupic\/research\/connections.py:multiple-statements:if self.numCells != other.numCells: return False","count":173,"result_id":2091},{"warning":"8:nupic\/research\/connections.py:multiple-statements:if segmentSet != otherSegmentSet: return False","count":173,"result_id":2091},{"warning":"8:nupic\/research\/connections.py:multiple-statements:if synapseSet != otherSynapseSet: return False","count":173,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.columnDimensions != other.columnDimensions: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.cellsPerColumn != other.cellsPerColumn: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.activationThreshold != other.activationThreshold: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.minThreshold != other.minThreshold: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.maxNewSynapseCount != other.maxNewSynapseCount: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.connections != other.connections: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.activeCells != other.activeCells: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.predictiveCells != other.predictiveCells: return False","count":160,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.winnerCells != other.winnerCells: return False","count":160,"result_id":2091},{"warning":"8:nupic\/regions\/AnomalyRegion.py:unidiomatic-typecheck:if type(v1) != type(v2):","count":132,"result_id":2091},{"warning":"8:nupic\/engine\/__init__.py:global-statement:global registeredRegions","count":129,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.matchingSegments != other.matchingSegments: return False","count":126,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.matchingCells != other.matchingCells: return False","count":126,"result_id":2091},{"warning":"8:nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._categoryRecencyList = numpy.delete(","count":121,"result_id":2091},{"warning":"8:nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = numpy.delete(self._partitionIdArray,","count":121,"result_id":2091},{"warning":"8:nupic\/simple_server.py:wrong-import-position:import datetime","count":96,"result_id":2091},{"warning":"8:nupic\/simple_server.py:wrong-import-position:import json","count":96,"result_id":2091},{"warning":"8:nupic\/simple_server.py:wrong-import-position:import web","count":96,"result_id":2091},{"warning":"8:nupic\/simple_server.py:wrong-import-position:from nupic.frameworks.opf.modelfactory import ModelFactory","count":96,"result_id":2091},{"warning":"8:nupic\/simple_server.py:global-variable-not-assigned:global g_models","count":288,"result_id":2091},{"warning":"8:nupic\/simple_server.py:no-self-use:def GET(self):","count":96,"result_id":2091},{"warning":"8:nupic\/simple_server.py:no-self-use:def POST(self, name):","count":192,"result_id":2091},{"warning":"8:nupic\/regions\/RecordSensor.py:no-self-use:def populateCategoriesOut(self, categories, output):","count":78,"result_id":2091},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:unidiomatic-typecheck:return type(obj) in types.StringTypes","count":75,"result_id":2091},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:redefined-builtin:def _indentLines(str, indentLevels = 1, indentFirstLine=True):","count":75,"result_id":2091},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:global-variable-not-assigned:global _metricSpecSchema","count":75,"result_id":2091},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-builtin:activeOptions = filter(lambda x: getattr(options, x) != None,","count":75,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:redefined-builtin:str = getCopyrightHead() + \\","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:redefined-builtin:str = \\","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:assert type(string) in types.StringTypes","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(e) is not InvalidConnectionException:","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(e) == JobFailException:","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:logging-not-lazy:logger.info(\"Using experiment directory: %s\" % (experimentDir))","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(params) is bool:","count":71,"result_id":2091},{"warning":"8:nupic\/swarming\/object_json.py:unidiomatic-typecheck:if type(obj) in NON_OBJECT_TYPES:","count":37,"result_id":2091},{"warning":"8:nupic\/swarming\/object_json.py:bad-builtin:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":37,"result_id":2091},{"warning":"8:nupic\/swarming\/ExtendedLogger.py:no-self-use:def getExtendedMsg(self, msg):","count":36,"result_id":2091},{"warning":"8:nupic\/research\/TP_shim.py:multiple-statements:class MonitoredTemporalMemory(TemporalMemoryMonitorMixin, TemporalMemory): pass","count":28,"result_id":2091},{"warning":"8:nupic\/research\/temporal_memory.py:no-self-use:def adaptSegment(self, segment, activeSynapses, connections,","count":13,"result_id":2091},{"warning":"8:src\/simple_server.py:wrong-import-position:import datetime","count":2,"result_id":2089},{"warning":"8:src\/simple_server.py:wrong-import-position:import json","count":2,"result_id":2089},{"warning":"8:src\/simple_server.py:wrong-import-position:import web","count":2,"result_id":2089},{"warning":"8:src\/simple_server.py:wrong-import-position:from nupic.frameworks.opf.modelfactory import ModelFactory","count":2,"result_id":2089},{"warning":"8:src\/simple_server.py:global-variable-not-assigned:global g_models","count":6,"result_id":2089},{"warning":"8:src\/simple_server.py:no-self-use:def GET(self):","count":2,"result_id":2089},{"warning":"8:src\/simple_server.py:no-self-use:def POST(self, name):","count":4,"result_id":2089},{"warning":"8:src\/swarming\/object_json.py:unidiomatic-typecheck:if type(obj) in NON_OBJECT_TYPES:","count":2,"result_id":2089},{"warning":"8:src\/swarming\/object_json.py:bad-builtin:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":2,"result_id":2089},{"warning":"8:src\/swarming\/ModelTerminator.py:no-self-use:def getTerminationCallbacks(self, terminationFunc):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Created new ModelChooser for job %s\" % str(jobID))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Attempting model selection for jobID=%d: time=%f\"\\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Unable to update selection sweep timestamp: jobID=%d\" \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Succesfully updated selection sweep timestamp jobid=%d updateTime=%f\"\\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Candidate models=%s, metric=%s, jobID=%s\"\\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.debug(\"Updating old results %s\"%(results))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Choosing new model. Old candidate: (id=%s, value=%s)\"\\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.info(\"Same model as before. id=%s, \"\\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/modelchooser.py:logging-not-lazy:self.logger.debug(\"New Results %s\"%(results))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:unidiomatic-typecheck:if type(value) == list:","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:redefined-builtin:range, delay = self._sleepModelRange.split(':')","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:bad-builtin:range = map(int, range.split(','))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:no-self-use:def __createModel(self, expDir):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:multiple-statements:def writeRecord(self, record): pass","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:multiple-statements:def writeRecords(self, records, progressCB): pass","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:multiple-statements:def close(self): pass","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:bad-builtin:sameModelNumbers = filter(lambda x: x[1] == self.modelIndex,","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._optimizedMetricLabel = self._optimizeKeyPattern","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._predictionLogger = DummyLogger()","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._cmpReason = self._jobsDAO.CMPL_REASON_STOPPED","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._cmpReason = self._jobsDAO.CMPL_REASON_EOF","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._currentRecordIndex = 0","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._currentRecordIndex = next(iterTracker)","count":2,"result_id":2089},{"warning":"8:src\/swarming\/DummyModelRunner.py:attribute-defined-outside-init:self._reportMetricLabels = [self._optimizeKeyPattern]","count":2,"result_id":2089},{"warning":"8:src\/swarming\/ExtendedLogger.py:no-self-use:def getExtendedMsg(self, msg):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/permutations_runner.py:global-statement:global gCurrentSearch","count":2,"result_id":2089},{"warning":"8:src\/swarming\/permutations_runner.py:global-statement:global g_currentVerbosityLevel","count":4,"result_id":2089},{"warning":"8:src\/swarming\/permutations_runner.py:redefined-builtin:vars = modelInfo.getParamLabels().keys()","count":2,"result_id":2089},{"warning":"8:src\/swarming\/permutations_runner.py:redefined-builtin:format = \"%Y-%m-%d %H:%M:%S\"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/permutations_runner.py:global-variable-not-assigned:global gCurrentSearch","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:logging-not-lazy:self.logger.info(\"Launched with command line arguments: %s\" %","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:logging-not-lazy:self.logger.debug(\"Env variables: %s\" % (pprint.pformat(os.environ)))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:logging-not-lazy:self.logger.debug(\"current modelID\/updateCounters: %s\" \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:logging-not-lazy:self.logger.debug(\"last modelID\/updateCounters: %s\" \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:bad-builtin:changedEntries = filter(lambda x:x[1][1] != x[2][1],","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:redefined-builtin:exit = False","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:logging-not-lazy:self.logger.info(\"Job info retrieved: %s\" % (str(clippedObj(jobInfo))))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchWorker.py:logging-not-lazy:self.logger.info(\"FINISHED. Evaluated %d models.\" % (numModelsTotal))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/permutationhelpers.py:redefined-builtin:def __init__(self, min, max, stepSize=None, inertia=None, cogRate=None,","count":4,"result_id":2089},{"warning":"8:src\/swarming\/permutationhelpers.py:redefined-builtin:def __init__(self, min, max, stepSize=1, inertia=None, cogRate=None,","count":4,"result_id":2089},{"warning":"8:src\/swarming\/permutationhelpers.py:no-self-use:def _testChoices(self):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/permutationhelpers.py:attribute-defined-outside-init:self.verbosity = 0","count":2,"result_id":2089},{"warning":"8:src\/swarming\/ModelRunner.py:logging-not-lazy:self._logger.debug(","count":2,"result_id":2089},{"warning":"8:src\/swarming\/ModelRunner.py:attribute-defined-outside-init:self._modelControl = expIface.getModelControl()","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:redefined-builtin:str = getCopyrightHead() + \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:redefined-builtin:str = \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:assert type(string) in types.StringTypes","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(e) is not InvalidConnectionException:","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(e) == JobFailException:","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:logging-not-lazy:logger.info(\"Using experiment directory: %s\" % (experimentDir))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(params) is bool:","count":2,"result_id":2089},{"warning":"8:src\/research\/TP_shim.py:multiple-statements:class MonitoredTemporalMemory(TemporalMemoryMonitorMixin, TemporalMemory): pass","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:redefined-builtin:def addNoise(input, noise=0.1, doForeground=True, doBackground=True):","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:redefined-builtin:len = random.choice(seqLength)","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:multiple-statements:import pdb; pdb.set_trace()   # Test this....","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:redefined-builtin:def checkMatch(input, prediction, sparse=True, verbosity=0):","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:redefined-builtin:def numpyStr(array, format='%f', includeIndices=False, includeZeros=True):","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:wrong-import-position:from IPython.Shell import IPShellEmbed; IPShellEmbed()()","count":2,"result_id":2089},{"warning":"8:src\/research\/fdrutilities.py:multiple-statements:from IPython.Shell import IPShellEmbed; IPShellEmbed()()","count":2,"result_id":2089},{"warning":"8:src\/swarming\/exp_generator\/ExpGenerator.py:unidiomatic-typecheck:return type(obj) in types.StringTypes","count":2,"result_id":2089},{"warning":"8:src\/swarming\/exp_generator\/ExpGenerator.py:redefined-builtin:def _indentLines(str, indentLevels = 1, indentFirstLine=True):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/exp_generator\/ExpGenerator.py:global-variable-not-assigned:global _metricSpecSchema","count":2,"result_id":2089},{"warning":"8:src\/swarming\/exp_generator\/ExpGenerator.py:bad-builtin:activeOptions = filter(lambda x: getattr(options, x) != None,","count":2,"result_id":2089},{"warning":"8:src\/research\/utils.py:multiple-statements:for i in x.nonzero()[0]: y.insert(i)","count":2,"result_id":2089},{"warning":"8:src\/research\/connections.py:multiple-statements:if self.numCells != other.numCells: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/connections.py:multiple-statements:if segmentSet != otherSegmentSet: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/connections.py:multiple-statements:if synapseSet != otherSynapseSet: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:no-self-use:def adaptSegment(self, segment, activeSynapses, connections,","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.columnDimensions != other.columnDimensions: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.cellsPerColumn != other.cellsPerColumn: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.activationThreshold != other.activationThreshold: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.minThreshold != other.minThreshold: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.maxNewSynapseCount != other.maxNewSynapseCount: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.connections != other.connections: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.activeCells != other.activeCells: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.predictiveCells != other.predictiveCells: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.winnerCells != other.winnerCells: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.matchingSegments != other.matchingSegments: return False","count":2,"result_id":2089},{"warning":"8:src\/research\/temporal_memory.py:multiple-statements:if self.matchingCells != other.matchingCells: return False","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self._logger.info(","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self._logger.info('Swarm %s has matured (no change in %d generations).'","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:attribute-defined-outside-init:self.permuteVars = copy.deepcopy(flattenedPermuteVars)","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:no-self-use:def getEncoderNameFromKey(self, key):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:no-self-use:def getEncoderKeyFromName(self, name):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"searchParams: \\n%s\" % (pprint.pformat(","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:no-self-use:def _getStreamDef(self, modelDescription):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:redefined-builtin:vars = {}","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:no-self-use:def getExpectedNumModels(self):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:no-self-use:def getModelNames(self):","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"Checking for orphaned models older than %s\" % \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Removing orphaned model: %d\" % (orphanedModelId))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Removing swarm %s from the active set \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Swarm matured: %s. Score at generation %d: \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Killing the following models in swarm '%s' because\"","count":4,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"New hsState has been set by some other worker to: \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.error(\"Exiting because some worker set the \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Active swarms changed to %s (from %s)\" % (activeSwarms,","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"Active swarms: %s\" % (activeSwarms))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Waiting for all particles in sprint %d to complete\"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Cloning an earlier model in generation %d of swarm \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Cloning model %r\" % (modelId))","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Best model and errScore from previous sprint(%d):\"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"Particle after incorporating encoder vars from best \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Waiting for one or more of the %s swarms \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.info(\"Stopping model %d because the search has ended\" \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"Agitating particle to get unique position after %d \"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"Submitting new potential model to HypersearchWorker: \\n%s\"","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug('Best err score seen so far: %s on model %s' % \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:logging-not-lazy:self.logger.debug(\"Running Model. \\nmodelParams: %s, \\nmodelID=%s, \" % \\","count":2,"result_id":2089},{"warning":"8:src\/swarming\/HypersearchV2.py:attribute-defined-outside-init:self._predictedFieldEncoder = flatKey","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def getActiveSegment(self, c,i, timeStep):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def getBestMatchingCell(self, c, timeStep, learnState = False):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def getLeastAllocatedCell(self, c):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def isSegmentActive(self, seg, timeStep):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def getSegmentActivityLevel(self, seg, timeStep, connectedSynapsesOnly =False,","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def isSequenceSegment(self, s):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def getBestMatchingSegment(self, c, i, timeStep, learnState = False):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def getSegmentActiveSynapses(self, c,i,s, timeStep, newSynapses =False):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def updateSynapse(self, segment, synapse, delta):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:no-self-use:def adaptSegment(self, update, positiveReinforcement):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.resetCalled = False","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.retrieveLearningStates = False","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.currentOutput = y.reshape((self.numberOfCols, self.cellsPerColumn))","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.avgLearnedSeqLength = self.cells4.getAvgLearnedSeqLength()","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.iterationIdx = self.iterationIdx + 1","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.allocateStatesInCPP = False","count":2,"result_id":2089},{"warning":"8:src\/research\/TP10X2.py:attribute-defined-outside-init:self.cells4 = Cells4(self.numberOfCols,","count":4,"result_id":2089},{"warning":"8:src\/research\/monitor_mixin\/monitor_mixin_base.py:no-self-use:def mmGetDefaultTraces(self, verbosity=1):","count":2,"result_id":2089},{"warning":"8:src\/research\/monitor_mixin\/monitor_mixin_base.py:no-self-use:def mmGetDefaultMetrics(self, verbosity=1):","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/cla_classifier_diff.py:unidiomatic-typecheck:assert type(result1) == type(result2)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/cla_classifier_diff.py:unidiomatic-typecheck:assert type(l) == type(result2[k])","count":2,"result_id":2089},{"warning":"8:src\/data\/__init__.py:wrong-import-position:from functionsource import FunctionSource","count":2,"result_id":2089},{"warning":"8:src\/data\/stats.py:unidiomatic-typecheck:if type(value) not in self.validTypes:","count":2,"result_id":2089},{"warning":"8:src\/data\/stats.py:redefined-builtin:for filter in filters:","count":2,"result_id":2089},{"warning":"8:src\/data\/dictutils.py:redefined-builtin:def set(d, keys, value):","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:redefined-builtin:sorted = inputPattern.argsort()[0:self.numWinners]","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:redefined-builtin:sorted = dist.argsort()","count":8,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:no-self-use:def getAdaptiveSVDDims(self, singularValues, fractionOfMax=0.001):","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:u,self._s,self._vt = numpy.linalg.svd(self._a[:numSVDSamples])","count":4,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._mean = numpy.mean(self._a, axis=0)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._M = self._Memory[:self._numPatterns]","count":4,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._M = numpy.delete(self._M, removalArray, 0)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._M = self._Memory[0:self._numPatterns]","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._M = self._Memory","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._numPatterns = 0","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._numPatterns = max(self._numPatterns, vectorIndex + 1)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._finishedLearning = True","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._vt = self._vt[:self.numSVDDims]","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._a = self._Memory[:self._numPatterns]","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._a = self._Memory.toDense()[:self._numPatterns]","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._a = None","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._Memory = numpy.resize(self._Memory,(m,n))","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._Memory = numpy.zeros((100,inputWidth))","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._Memory = NearestNeighbor(0, inputWidth)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._Memory = numpy.zeros((self._numPatterns,self.numSVDDims))","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._categoryList = numpy.delete(numpy.array(self._categoryList),","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._categoryList = list(newCategoryArray)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._protoSizes = None     # need to re-compute","count":4,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._protoSizes = self._Memory.rowSums()","count":6,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._categoryRecencyList = numpy.delete(","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = numpy.delete(self._partitionIdArray,","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = numpy.array(self._partitionIdList)","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = None","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdList = []","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdList = [0] * self._numPatterns","count":2,"result_id":2089},{"warning":"8:src\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdList = self._partitionIdArray.tolist()","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:no-self-use:def _getEphemeralMembers(self):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:unidiomatic-typecheck:if type(a) != type(b):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:no-self-use:def printActiveIndices(self, state, andValues=False):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:no-self-use:def getNumStrongSynapses(self):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:no-self-use:def getNumStrongSynapsesPerTimeSlot(self):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:no-self-use:def getNumSynapsesPerSegmentMax(self):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:no-self-use:def _getTPDynamicStateVariableNames(self):","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:unidiomatic-typecheck:synToUpdate = set([syn for syn in activeSynapses if type(syn) == int])","count":2,"result_id":2089},{"warning":"8:src\/research\/TP.py:unidiomatic-typecheck:synsToAdd = [syn for syn in activeSynapses if type(syn) != int]","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:logging-not-lazy:self._logger.info(\"StreamReader: Saving generated records to: '%s'\" %","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def getLastRecords(self, numRecords):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:redefined-builtin:def getRecordsRange(self, bookmark=None, range=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def getRecordsRange(self, bookmark=None, range=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def appendRecord(self, record, inputRef=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def appendRecords(self, records, inputRef=None, progressCB=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def removeOldData(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def seekFromEnd(self, numRecords):","count":2,"result_id":2089},{"warning":"8:src\/data\/stream_reader.py:no-self-use:def flush(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/inference_shifter.py:unidiomatic-typecheck:if type(inference) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:redefined-builtin:range = 1","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:redefined-builtin:lat, long = self.g.getLatLong(address)","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:redefined-builtin:for type in self.weatherTypes:","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:redefined-builtin:for type in newHeaders:","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:multiple-statements:elif i == 2: headerLine.append('float')","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:multiple-statements:elif i == 3: headerLine.append('')","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:no-self-use:def _updateHeaders(self, newHeaders, inputFileHandle, outputFileHandle):","count":2,"result_id":2089},{"warning":"8:src\/data\/joiner.py:no-self-use:def _parseTimestamp(self,t):","count":2,"result_id":2089},{"warning":"8:src\/data\/functionsource.py:attribute-defined-outside-init:self._prevSequenceId = sequenceId","count":2,"result_id":2089},{"warning":"8:src\/data\/functionsource.py:attribute-defined-outside-init:self._prevSequenceId = state['prevSequenceId']","count":2,"result_id":2089},{"warning":"8:src\/data\/functionsource.py:attribute-defined-outside-init:self._sequenceInfoType = state['sequenceInfoType']","count":2,"result_id":2089},{"warning":"8:src\/data\/filters.py:no-self-use:def getShortName(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/filters.py:attribute-defined-outside-init:self.datetimeField = datetimeField","count":2,"result_id":2089},{"warning":"8:src\/data\/filters.py:attribute-defined-outside-init:self.lastAutoReset = date","count":6,"result_id":2089},{"warning":"8:src\/data\/aggregator.py:redefined-builtin:min = fieldFilter.get('min', None)","count":2,"result_id":2089},{"warning":"8:src\/data\/aggregator.py:redefined-builtin:max = fieldFilter.get('max', None)","count":2,"result_id":2089},{"warning":"8:src\/data\/aggregator.py:redefined-builtin:def initFilter(input, filterInfo = None):","count":2,"result_id":2089},{"warning":"8:src\/data\/aggregator.py:redefined-builtin:for (name, type, special) in self._inputFields:","count":2,"result_id":2089},{"warning":"8:src\/data\/record_stream.py:no-self-use:def getAggregationMonthsAndSeconds(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/record_stream.py:redefined-builtin:def getRecordsRange(self, bookmark=None, range=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/stats_v2.py:redefined-builtin:min = sortedNumberList[0]","count":2,"result_id":2089},{"warning":"8:src\/data\/stats_v2.py:redefined-builtin:max = sortedNumberList[-1]","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:redefined-builtin:def getRecordsRange(self, bookmark=None, range=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def getRecordsRange(self, bookmark=None, range=None):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def getLastRecords(self, numRecords):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def removeOldData(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def getError(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def setError(self, error):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def isCompleted(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:no-self-use:def setCompleted(self, completed=True):","count":2,"result_id":2089},{"warning":"8:src\/data\/file_record_stream.py:attribute-defined-outside-init:self.__dict__ = state","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/pattern_machine.py:unidiomatic-typecheck:if type(w) is list:","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/pattern_machine.py:unidiomatic-typecheck:assert type(w) is int, \"List for w not supported\"","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([1,3,6, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([2,3,6, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([1,4,6, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([2,4,6, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([1,3,5, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([2,3,5, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([1,4,5, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:multiple-statements:print '.'; o.appendRecord([2,4,5, payload])","count":2,"result_id":2089},{"warning":"8:src\/data\/sorter.py:redefined-builtin:def test(long):","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:redefined-builtin:from math import *","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:no-self-use:def getNext(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:no-self-use:def getDescription(self):","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:multiple-statements:if 'period' in params: self.period=params.pop('period')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:multiple-statements:if 'phaseShift' in params: self.phaseShift = params.pop('phaseShift')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:multiple-statements:if 'mean' in params: self.mean = params.pop('mean')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/distributions.py:multiple-statements:if 'std' in params: self.std=params.pop('std')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:no-self-use:def setSeed(self, seed):","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if self.verbosity>0: print 'Generating', len(records), 'records...'","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if self.verbosity>0: print 'Encoding', len(records), 'records.'","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'n' in encoderSpec: self.n = encoderSpec.pop('n')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'w' in encoderSpec: self.w = encoderSpec.pop('w')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'flag' in encoderSpec: self.flag = encoderSpec.pop('flag')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'isPredictedField' in encoderSpec: self.isPredictedField\\","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'dataClass' in encoderSpec: self.dataClass \\","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'dataClassName' in encoderSpec: self.dataClassName \\","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'dataType' in encoderSpec: self.dataType = encoderSpec.pop('dataType')","count":2,"result_id":2089},{"warning":"8:src\/data\/generators\/data_generator.py:multiple-statements:if 'encoderType' in encoderSpec: self.encoderType \\","count":2,"result_id":2089},{"warning":"8:src\/engine\/__init__.py:global-statement:global registeredRegions","count":2,"result_id":2089},{"warning":"8:src\/engine\/__init__.py:wrong-import-position:import traceback","count":2,"result_id":2089},{"warning":"8:src\/engine\/__init__.py:wrong-import-position:import cStringIO","count":2,"result_id":2089},{"warning":"8:src\/engine\/__init__.py:redefined-builtin:def customExceptionHandler(type, value, tb):","count":2,"result_id":2089},{"warning":"8:src\/image\/__init__.py:unidiomatic-typecheck:if type(radius) is not int:","count":2,"result_id":2089},{"warning":"8:src\/image\/__init__.py:redefined-builtin:format = 'png'","count":2,"result_id":2089},{"warning":"8:src\/image\/__init__.py:multiple-statements:import pdb; pdb.set_trace()","count":2,"result_id":2089},{"warning":"8:src\/encoders\/coordinate.py:no-self-use:def getDescription(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/coordinate.py:no-self-use:def getScalars(self, inputData):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/coordinate.py:redefined-builtin:hash = int(int(hashlib.md5(coordinateStr).hexdigest(), 16) % (2 ** 64))","count":2,"result_id":2089},{"warning":"8:src\/database\/Connection.py:global-statement:global g_max_concurrency, g_max_concurrency_raise_exception","count":4,"result_id":2089},{"warning":"8:src\/database\/Connection.py:global-variable-not-assigned:global g_max_concurrency","count":2,"result_id":2089},{"warning":"8:src\/database\/Connection.py:global-variable-not-assigned:global g_max_concurrency, g_max_concurrency_raise_exception","count":4,"result_id":2089},{"warning":"8:src\/encoders\/random_distributed_scalar.py:no-self-use:def getDecoderOutputFieldTypes(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder.bucketMap = {x.key: numpy.array(x.value, dtype=numpy.uint32)","count":2,"result_id":2089},{"warning":"8:src\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:self.random = NupicRandom(randomState.randint(sys.maxint))","count":2,"result_id":2089},{"warning":"8:src\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder.random = NupicRandom()","count":2,"result_id":2089},{"warning":"8:src\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder._maxBuckets = INITIAL_BUCKETS","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:redefined-builtin:sorted = self.slidingWindow.getSlidingWindow()","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:redefined-builtin:def _setMinAndMax(self, input, learn):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:redefined-builtin:def getBucketIndices(self, input, learn=None):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:unidiomatic-typecheck:if type(input) is float and math.isnan(input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:redefined-builtin:def encodeIntoArray(self, input, output,learn=None):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.maxval = fieldStats[fieldName]['max']","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.maxval = input+1   #When the min and max and unspecified and only one record has been encoded","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.maxval = maxOverWindow       #+initialBump","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.nInternal = self.n - 2 * self.padding","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.minval = fieldStats[fieldName]['min']","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.minval = input","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.minval = minOverWindow       #-initialBump","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self._bucketValues = None","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.range = self.rangeInternal + self.resolution","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.radius = self.w * self.resolution","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.resolution = float(self.rangeInternal) \/ (self.n - self.w)","count":2,"result_id":2089},{"warning":"8:src\/encoders\/adaptivescalar.py:attribute-defined-outside-init:self.rangeInternal = float(self.maxval - self.minval)","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sparse_pass_through_encoder.py:redefined-builtin:def encodeIntoArray(self, input, output):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/date.py:redefined-builtin:def getEncodedValues(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/date.py:redefined-builtin:def getScalars(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/date.py:redefined-builtin:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/date.py:redefined-builtin:def encodeIntoArray(self, input, output):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/category.py:no-self-use:def getDecoderOutputFieldTypes(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/category.py:redefined-builtin:def getScalars(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/category.py:redefined-builtin:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/category.py:redefined-builtin:def encodeIntoArray(self, input, output):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/category.py:no-self-use:def closenessScores(self, expValues, actValues, fractional=True,):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:no-self-use:def getDecoderOutputFieldTypes(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:redefined-builtin:def _getFirstOnBit(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:redefined-builtin:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:unidiomatic-typecheck:if type(input) is float and math.isnan(input):","count":4,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:redefined-builtin:def encodeIntoArray(self, input, output, learn=True):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:no-self-use:def _generateRangeDescription(self, ranges):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:attribute-defined-outside-init:self.resolution = float(self.rangeInternal) \/ (self.n - self.w)","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:attribute-defined-outside-init:self.resolution = float(self.rangeInternal) \/ (self.n)","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:attribute-defined-outside-init:self.range = self.rangeInternal","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:attribute-defined-outside-init:self.range = self.rangeInternal + self.resolution","count":2,"result_id":2089},{"warning":"8:src\/encoders\/scalar.py:attribute-defined-outside-init:self.radius = self.w * self.resolution","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:no-self-use:def _getInputValue(self, obj, fieldName):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:no-self-use:def getDescription(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:no-self-use:def decodedToStr(self, decodeResults):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:no-self-use:def getBucketValues(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:attribute-defined-outside-init:self._learningEnabled = learningEnabled","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:attribute-defined-outside-init:self._flattenedFieldTypeList = fieldTypes","count":2,"result_id":2089},{"warning":"8:src\/encoders\/base.py:attribute-defined-outside-init:self._flattenedEncoderList = encoders","count":2,"result_id":2089},{"warning":"8:src\/encoders\/delta.py:redefined-builtin:def encodeIntoArray(self, input, output, learn=None):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/delta.py:redefined-builtin:def getBucketIndices(self, input, learn=None):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/multi.py:attribute-defined-outside-init:self._flattenedFieldTypeList = None","count":2,"result_id":2089},{"warning":"8:src\/encoders\/multi.py:attribute-defined-outside-init:self._flattenedEncoderList = None","count":2,"result_id":2089},{"warning":"8:src\/encoders\/pass_through_encoder.py:no-self-use:def getDecoderOutputFieldTypes(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/pass_through_encoder.py:redefined-builtin:def getScalars(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/pass_through_encoder.py:no-self-use:def getScalars(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/pass_through_encoder.py:redefined-builtin:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/pass_through_encoder.py:no-self-use:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/pass_through_encoder.py:no-self-use:def closenessScores(self, expValues, actValues, **kwargs):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/geospatial_coordinate.py:no-self-use:def getDescription(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:no-self-use:def getDecoderOutputFieldTypes(self):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:redefined-builtin:def getScalars(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:redefined-builtin:def getBucketIndices(self, input):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:redefined-builtin:def encodeIntoArray(self, input, output):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:no-self-use:def closenessScores(self, expValues, actValues, fractional=True):","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:attribute-defined-outside-init:self.random = NupicRandom(randomState.randint(sys.maxint))","count":2,"result_id":2089},{"warning":"8:src\/encoders\/sdrcategory.py:attribute-defined-outside-init:encoder.random = NupicRandom()","count":2,"result_id":2089},{"warning":"8:src\/encoders\/logenc.py:no-self-use:def getDecoderOutputFieldTypes(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestRegion.py:multiple-statements:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestRegion.py:multiple-statements:import pdb; pdb.set_trace()","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestRegion.py:global-variable-not-assigned:global g_debug","count":2,"result_id":2089},{"warning":"8:src\/database\/ClientJobsDAO.py:no-self-use:def _columnNameDBToPublic(self, dbName):","count":2,"result_id":2089},{"warning":"8:src\/regions\/SPRegion.py:no-self-use:def _doTopDownInfer(self, topDownInput = None):","count":2,"result_id":2089},{"warning":"8:src\/regions\/SPRegion.py:multiple-statements:import pdb; pdb.set_trace()","count":4,"result_id":2089},{"warning":"8:src\/regions\/SPRegion.py:no-self-use:def _getEphemeralMembers(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/SPRegion.py:no-self-use:def _getEphemeralMembersBase(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/SPRegion.py:multiple-statements:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"8:src\/regions\/SPRegion.py:attribute-defined-outside-init:self._profileObj = hotshot.Profile(\"hotshot.stats\", 1, 1)","count":2,"result_id":2089},{"warning":"8:src\/regions\/RecordSensor.py:no-self-use:def populateCategoriesOut(self, categories, output):","count":2,"result_id":2089},{"warning":"8:src\/regions\/RecordSensor.py:redefined-builtin:for filter in self.postEncodingFilters:","count":2,"result_id":2089},{"warning":"8:src\/regions\/RecordSensor.py:redefined-builtin:for i, (encoder, type) in enumerate(zip(encoders, types)):","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNAnomalyClassifierRegion.py:unidiomatic-typecheck:if type(a) != type(b):","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:no-self-use:def _getEphemeralAttributes(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:redefined-builtin:for input in inputs:","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:no-self-use:def _arraysToLists(self, samplesArray, labelsArray):","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._protoScores = self._protoScores[-1,:]","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._protoScores = protoScores","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._protoScores = numpy.zeros((1, protoScores.shape[0]),","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._protoScores = newProtoScores","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._accuracy = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._accuracy = float(numCorrect) \/ float(numSamples)","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._scanResults = [tuple(inference[:nout])]","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._firstComputeCall = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._categoryDistances = categoryDistances","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._partitions = []","count":2,"result_id":2089},{"warning":"8:src\/regions\/KNNClassifierRegion.py:wrong-import-position:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"8:src\/regions\/PyRegion.py:wrong-import-position:from abc import ABCMeta, abstractmethod","count":2,"result_id":2089},{"warning":"8:src\/regions\/PyRegion.py:wrong-import-position:from nupic.support import getCallerInfo","count":2,"result_id":2089},{"warning":"8:src\/regions\/CLAClassifierRegion.py:wrong-import-position:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"8:src\/regions\/AnomalyRegion.py:unidiomatic-typecheck:if type(v1) != type(v2):","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestNode.py:redefined-builtin:def _getInputForNode(self, input, index):","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestNode.py:redefined-builtin:input = self._getInputForNode(bottomUpIn, node)","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestNode.py:attribute-defined-outside-init:self.dims = dims","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestNode.py:attribute-defined-outside-init:self.splitterMap = splitterMaps['bottomUpIn']","count":2,"result_id":2089},{"warning":"8:src\/regions\/TestNode.py:attribute-defined-outside-init:self.nodeCount = dims[0] * dims[1]","count":2,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:no-self-use:def _getEphemeralMembers(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:no-self-use:def _getEphemeralMembersBase(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:multiple-statements:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:multiple-statements:import pdb; pdb.set_trace()","count":2,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:attribute-defined-outside-init:self._profileObj = hotshot.Profile(\"hotshot.stats\", 1, 1)","count":2,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:attribute-defined-outside-init:self._sequencePos = 0  # Position within the current sequence","count":4,"result_id":2089},{"warning":"8:src\/regions\/TPRegion.py:attribute-defined-outside-init:self._sequencePos = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:multiple-statements:try:    parameterValue = _kKernelTypes[parameterValue]","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:multiple-statements:except: pass","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:bad-builtin:\",\".join(map(str, xrange(len(_kKernelTypes))))","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:no-self-use:def _getEphemeralMembers(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:logging-not-lazy:logging.debug(\"SVM recursion %d, sample %d: C is %.2f, gamma is %.2f\"","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:logging-not-lazy:logging.debug(\"Accuracy: %.2f\" % (accuracy * 100))","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:no-self-use:def getAdaptiveSVDDims(self, singularValues, fractionOfMax=0.001):","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self.distances = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self.distances = numpy.zeros((1, dist.shape[0]), dist.dtype)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self.distances = newDistances","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._mode = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:u, self._s, self._vt = numpy.linalg.svd(self._samples[:numSVDSamples,:self._samples.shape[1]-self._auxInputLen])","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:u, self._s, self._vt = numpy.linalg.svd(self._samples[:numSVDSamples,:])","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._normScale  = 1.0 \/ numpy.sqrt(variance)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._svmParams = svmParams","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._svmParams = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._vt = self._vt[:self._numSVDDims]","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._learningMode = False  # To avoid exception","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._learningMode = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._learningMode = True","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._autoTuneLabels = []","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._catIdMap = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._catIdMap = []","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._labels = []","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._labels  = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._labels = list(newLabels)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._labels = numpy.array(self._labels)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._labels = list(self._labels)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = numpy.zeros((0, inputWidth), dtype=RealNumpyDType)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = numpy.concatenate((self._samples, sample), axis=0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = numpy.zeros((0, self._inputWidth), dtype=RealNumpyDType)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = numpy.concatenate((self._samples, numpy.atleast_2d(inputVector)), axis=0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = self._samples[:, :self._samples.shape[1]-self._auxInputLen]","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = numpy.dot(self._samples, self._vt.T)","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._samples = numpy.concatenate([numpy.atleast_2d(self._samples), numpy.atleast_2d(auxSamples)], axis=1)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._inputWidth = inputWidth","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._svm = svm_01(kernelType,","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._svm = svm_dense(kernelType,","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._svm = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._distanceCount = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._distanceCount = 1","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._autoTuningData = value","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._normOffset = self._samples.mean(axis=0) * -1.0","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._upcomingPartitionIds = partitionIds","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._partitionIds = []","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._partitionIds = numpy.array(self._partitionIds)","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._partitionIds = list(self._partitionIds)","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._inferenceMode = True","count":4,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._inferenceMode = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._mean = numpy.mean(self._samples[:,:self._samples.shape[1]-self._auxInputLen], axis=0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._mean = numpy.mean(self._samples, axis=0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._autoTuneSamples = numpy.zeros((0, inputVector.shape[0]),","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._autoTuneSamples = numpy.concatenate((self._autoTuneSamples,","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:attribute-defined-outside-init:self._autoTunePartitionIds = []","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:wrong-import-position:import os","count":2,"result_id":2089},{"warning":"8:src\/regions\/SVMClassifierNode.py:wrong-import-position:from nupic.network import CreateNode","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/random1DOF.py:no-self-use:def updateSequence(self, state, params):","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._centerOffsets = list(cross(yPositions, xPositions))","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._spreadPosIdx = 0       # radial position around the center point","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._spreadPosIdx = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._numSpreadOffsets = len(self._spreadOffsets)","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._numCats = self._getNumCategories()","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._numCenterOffsets = len(self._centerOffsets)","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._spreadOffsets = list(cross(yPositions, xPositions))","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._catIdx = 0","count":4,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._centerPosIdx = 0       # Which center point","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._centerPosIdx = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/PictureSensorExplorers\/random.py:no-self-use:def updateSequence(self, state, params):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:wrong-import-position:from nupic.image import (serializeImage,","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if categoryName is not None and type(categoryName) is not str:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if first is not None and type(first) != int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if last is not None and type(last) != int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if subsample is not None and type(subsample) != int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if skipInterval is not None and (type(skipInterval) != int","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:(type(skipOffset) != int or skipOffset < 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(auxPath) is not list:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:no-self-use:def _computeSequenceInfo(self, images):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if position['offset'] and type(position['offset']) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(position['filters']) != list:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if image is not None and type(image) != int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filtered) is not list:","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(item) is not list:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(outputCount) not in (tuple, list):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filtered) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:assert type(raw_output) == numpy.ndarray","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filtered[0]) is list:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(outputCount) in (tuple, list):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:while type(responses[0]) == list:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:redefined-builtin:for i, filter in enumerate(filters):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(filters) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filter) is str:","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(filter) is tuple:","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(outputCount) in (tuple, list) and len(outputCount) > 1 \\","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(self.explorer) == list and len(self.explorer) > 2:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:redefined-builtin:for i, filter in enumerate(postFilters):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(postFilters) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(n) in (tuple, list):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(n) is int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:no-self-use:def _getNumFilterOutputs(self, filters):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(explorer) is str:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(explorer) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:redefined-builtin:return [filter[:2] for filter in self.filters]","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:redefined-builtin:for filter in self.filters + self.postFilters:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(state) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.bboxLogFile = open(os.path.join(self.logDir, 'imagesensor_bbox_log.txt'), 'w')","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.bboxLogFile = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._imageQueue = []","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.height = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.automaskingPadding = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._auxDataWidth = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.filters = filters","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logText = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logText = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.prevPosition = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.prevPosition = {","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.minimalBoundingBox = True","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._categoryOutputFile = open(self.categoryOutputFile, 'w')","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._categoryOutputFile = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logLocationOnOriginalImage = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._holdForOffset = iteration % self.explorer[2].holdFor","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._holdForOffset = 0","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logFilteredImages = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.width = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.categoryOutputFile = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.categoryOutputFile = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logLocationImages = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.locationImage = self._createLocationImage()","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.locationImage = None","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._cubeOutputs = not containsConvolutionPostFilter(resetPostFilters)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._filterQueue = []","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.enabledWidth = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logOutputImages = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.explorer = explorer","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.explorer = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._iteration = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.automaskingTolerance = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.memoryLimit = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logDir = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logDir = \"imagesensor_log\"","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.background = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._pixelCount = 0","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.categoryInfo = deserializeCategoryInfo(parameterValue)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logOriginalImages = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.enabledHeight = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._imageList = []","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self._imageList = _deserializeImageList(sImageList)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logBoundingBox = False","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.blankWithReset = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logFile = open(os.path.join(self.logDir, 'imagesensor_log.txt'), 'w')","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logFile = None","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.postFilters = postFilters","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.outputImage = outputImages[0]","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.outputImage = outputImages","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:attribute-defined-outside-init:self.outputImage = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensor.py:multiple-statements:if sCategoryInfo is None: return []","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:attribute-defined-outside-init:self._filterBank = (filterBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def getDefaultParamSet(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _createDir(self, directory):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:filter = self._makeGaborFilter(filterParams)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _normalizeGain(self, filter, filterParams):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _normalizeGain(self, filter, filterParams):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _deg2rad(self, degrees):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _rad2deg(self, radians):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _chooseParams(self, scale):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _suppressionRules(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _doLobeSuppression(self, filter, orientation, phase):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _zeroLobes(self, filter, (lobeX, lobeY), (deltaX, deltaY)):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _wipeStripe(self, filter, (x, y, dX, dY)):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _wipeStripe(self, filter, (x, y, dX, dY)):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _scanForLobes(self, filter, numPosZones, numNegZones, deltaX, deltaY,","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _scanForLobes(self, filter, numPosZones, numNegZones, deltaX, deltaY,","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:for (filter, filterSpecs) in filterSet:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _combineResponses(self, responseSet):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _postProcess(self, preResponse, postProcessingMode, threshold=0.0, steepness=500.0):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _printGaborFilter(self, g):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _convertToPIL(self, responseSet, amplification=1.0):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def convolve2D(image, filter):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def convolve1D(image, imageRotated, filter, phase, orientation, rotation):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def convolveFFT(image, filter):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/AffineTransform.py:redefined-builtin:type = self.random.choice(self.types)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/BoxFixer.py:no-self-use:def _acceptOrCull(self, strength, strongZones, candidateZone, minZoneLen, minStrength):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/BoxFixer.py:no-self-use:def _smooth(self, x, window_len=10, window=None):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/BoxFixer.py:no-self-use:def getOutputCount(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/BoxFixer.py:attribute-defined-outside-init:self._logBox = open(\"LOGBOX.txt\", mode)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/BoxFixer.py:attribute-defined-outside-init:self._debugIndex = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/AddBackgroundImage.py:attribute-defined-outside-init:self.scaledBGImgs = [x.copy() for x in self.bgImgs]","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/BaseFilter.py:no-self-use:def getOutputCount(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:redefined-builtin:id = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _isHiddenParam(self, paramName):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) != type(0) or \\","count":6,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or float(value) < 0.0:","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or float(value) <= 0.0:","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)]:","count":8,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if value != 'colorKey' and (type(value) not in (int, float) or float(value) < 0.0 or float(value) > 255.0):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if value is not None and (type(value) != type(\"\") or len(value) == 0):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.)] or value <= 0.0:","count":6,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or value < 0.0 or value > 1.0:","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or float(value) < 0.0 or float(value) > 1.0:","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if whichScale != 'all' and (type(whichScale) != type(0) or whichScale < 0 or whichScale >= numScales):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(whichResponse) != type(0) or whichResponse < 0 or whichResponse >= self._numPlanes:","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:assert type(whichResponse) == type(0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _alignToFour(self, val):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _getEphemeralMembers(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _loadLibrary(self, libraryName, libSubDir=None):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(scale) == type(0):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(orient) == type(0):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _saveImage(self, imgArray, outPath):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:assert type(offImagePixelValue) in [type(0), type(0.0)]","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _convertEnumValue(self, enumValue):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _getValidEdgeModes(self):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:redefined-builtin:format = 'png'","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _serializeImage(self, image):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _getResponseKey(self, preSuppression):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:no-self-use:def _makeCompositeImage(self, imageSet):","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._morphHeader = cv.CreateImageHeader(cv.Size(int(self._inWidth),","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._erosion = Float32Erosion()","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._inputDims = inputDims","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._inHeight, self._inWidth   = [float(x) for x in self._inputDims[0]]","count":4,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._responseImages = {self._getResponseKey(preSuppression): {}}","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._gaborComputeProc = libGabor.gaborCompute","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._gaborComputeProc = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.tdInput = tdInput_avg","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._bufferSetOut = [numpy.zeros((numBuffersNeeded,","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._tdThreshold = 0.01","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._minInputDim = min([min(inputDim) for inputDim in self._inputDims])","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._outHeight, self._outWidth = [float(x) for x in self._outputDims[0]]","count":4,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.response = responseFinal","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.response = outputPlane","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.selectedBottomUpOut = buOutput * tdThreshold","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._bufferSetIn = [numpy.zeros((inHeight + padding,","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._postProcLUT = postProcLUT","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._minOutputDim = min([min(outputDim) for outputDim in self._outputDims])","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._outputDims = [self.getOutputDims(inputDim) for inputDim in inputDims]","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._morphologyMethod = parameterValue","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._postProcLutScalar = postProcScalar","count":2,"result_id":2089},{"warning":"8:src\/regions\/extra\/GaborNode2.py:wrong-import-position:from nupic.engine import Network","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:if type(sizes) not in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:if type(sizes) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:if type(size) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:elif type(size) in (int, float):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/LogPolar.py:no-self-use:def _ceilFoor(self, mat, width, sentinel, Mirror=False):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/LogPolar.py:no-self-use:def _cropMatCenter(self, mat, outSize):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._deltaymat = numpy.zeros((ysize,xsize))","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._matSize = matSize","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._scales = numpy.zeros((ysize,xsize))","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._deltaxmat = numpy.zeros((ysize,xsize))","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/GaborConvolution.py:attribute-defined-outside-init:self._filterBank = (gaborBank.astype(numpy.float32) * 4096.0).astype(numpy.int32)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Convolution.py:redefined-builtin:id = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Convolution.py:no-self-use:def _alignToFour(self, val):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Convolution.py:no-self-use:def _loadLibrary(self, libraryName, libSubDir='bindings'):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Convolution.py:unidiomatic-typecheck:assert type(offImagePixelValue) in [type(0), type(0.0)]","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Convolution.py:no-self-use:def _convertEnumValue(self, enumValue):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Tracking.py:unidiomatic-typecheck:if type(scales) not in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Tracking.py:unidiomatic-typecheck:if type(scales) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Tracking.py:unidiomatic-typecheck:if type(bbox) == type(\"\"):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Tracking.py:attribute-defined-outside-init:self._debugIndex = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/NormalizeContrast.py:unidiomatic-typecheck:if type(cutoff) != int or cutoff < 0:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorFilters\/Gradient.py:redefined-builtin:type = self.random.choice(self.types)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomJump.py:unidiomatic-typecheck:if type(jumpOffObject) not in (bool, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomJump.py:unidiomatic-typecheck:if numJumpsPerImage is not None and type(numJumpsPerImage) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomJump.py:unidiomatic-typecheck:if numVisitsPerImage is not None and type(numVisitsPerImage) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.jitteri = 0","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.diagi = 0","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.cent = list(self.position['offset'])","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.diagdiri = 0","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/EyeMovements.py:attribute-defined-outside-init:self.eyeMovementIndex = 0","count":4,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomSweep.py:unidiomatic-typecheck:if type(shiftDuringSweep) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomSweep.py:unidiomatic-typecheck:if type(sweepOffObject) not in (bool, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomSweep.py:attribute-defined-outside-init:self.direction = self.random.choice(self.sweepDirections)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:unidiomatic-typecheck:if type(sweepLength) is not int or sweepLength < 1:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:unidiomatic-typecheck:if type(numRepetitions) is not int or numRepetitions < 1:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:attribute-defined-outside-init:self.position = self._repMemory[self._seqIndex]","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomFlash.py:unidiomatic-typecheck:if type(replacement) not in (bool, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomFlash.py:unidiomatic-typecheck:if type(start) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.numCategories = numCats","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.nextCatIndex = 0","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.nextCatIndex = (self.nextCatIndex + 1) % self.numCategories","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.categories = categories","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/InwardSweep.py:unidiomatic-typecheck:if type(radius) is not int or radius < 1:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/InwardSweep.py:unidiomatic-typecheck:if type(numRepetitions) is not int or numRepetitions < 1:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/SpiralSweep.py:unidiomatic-typecheck:if type(sweepOffObject) not in (bool, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.scale = not self.doSaliencySize","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.bbox = currImg.split()[1].getbbox()","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.currentImageSize = \\","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.currentSaliencySizes = \\","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.names = []","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/OnionBlock.py:unidiomatic-typecheck:if type(radius) is not int or radius < 1:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/Jiggle.py:multiple-statements:if DEBUG >= 2: print \"already performed jiggle\", jiggleIndex, \", skipping\"","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/Jiggle.py:no-self-use:def _generateOffsets(self, shift, radius):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/BlockSpread.py:unidiomatic-typecheck:if type(stepSize) is not int or stepSize < 1:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/BlockSpread.py:attribute-defined-outside-init:self._home = self.position['offset'][:]","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/BlockSpread.py:attribute-defined-outside-init:self._home = (0,0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/BaseExplorer.py:no-self-use:def getNumIterations(self, image):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:if type(shiftDuringSweep) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:if type(shiftBetweenSweeps) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:if len([x for x in order if type(x) == str]) > 2:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:len([x for x in self.order if type(x) == int]) != self.numFilters:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:attribute-defined-outside-init:self.directionIndex = 0","count":4,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opftaskdriver.py:logging-not-lazy:self.logger.debug((\"Instantiating %s; %r.\") % \\","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opftaskdriver.py:bad-builtin:self.__phases = tuple(map(lambda x: x._getImpl(model=model),","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opftaskdriver.py:attribute-defined-outside-init:self.__iter = iter(xrange(self.__nIters))","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opftaskdriver.py:attribute-defined-outside-init:self.__iter = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(sweepOffObject) not in (bool, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(crossDirectories) not in (bool, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(minSweepLength) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(pattern) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(pattern) is tuple:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(dimensions) in (str, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(d) in (str, int):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(d['name']) is int and d['name'] not in filters:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(dimension['name']) is int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:and type(name) is not int:","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:no-self-use:def _copyPosition(self, position):","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = self.random.choice(('left', 'right', 'up', 'down',","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = self.random.choice(('up', 'down'))","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = bounceDirections.pop(0)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = 'down'","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = 'up'","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.position = self._copyPosition(prevPosition)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.position = prevPosition","count":6,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.start = None","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.start = self._copyPosition(self.position)","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.length = 1","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.prevImageSize = filteredImages[0].size","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.prevImageSize = newImageSize","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.parsedFilenames = []","count":2,"result_id":2089},{"warning":"8:src\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.dimension = d","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/previousvaluemodel.py:no-self-use:def getRuntimeStats(self):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/previousvaluemodel.py:attribute-defined-outside-init:self._reset = True","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/predictionmetricsmanager.py:unidiomatic-typecheck:if type(inference) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/predictionmetricsmanager.py:unidiomatic-typecheck:if type(groundTruth) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/two_gram_model.py:unidiomatic-typecheck:defaults = ['' if type(v) == str else 0 for v in values]","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/two_gram_model.py:no-self-use:def getRuntimeStats(self):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/experiment_runner.py:logging-not-lazy:self.__logger.debug((\"Instantiated %s(\" + \\","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfhelpers.py:global-statement:global g_descriptionImportCount","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionapi.py:bad-builtin:taskLabelDuplicates = filter(lambda x: taskLabelsList.count(x) > 1,","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionapi.py:no-self-use:def __validateExperimentControl(self, control):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionapi.py:no-self-use:def __validateNupicControl(self, control):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionapi.py:no-self-use:def normalizeStreamSource(self, stream):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfbasicenvironment.py:no-self-use:def _translateMetricsToJSON(self, metrics, label):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfbasicenvironment.py:no-self-use:def _emitJSONStringToStdout(self, jsonString):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfbasicenvironment.py:unidiomatic-typecheck:if type(value) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfbasicenvironment.py:no-self-use:def __getDictMetaInfo(self, inferenceElement, inferenceDict):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfbasicenvironment.py:unidiomatic-typecheck:if type(outputVal) in (list, tuple):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/opfbasicenvironment.py:unidiomatic-typecheck:assert type(inputVal) in (list, tuple, None)","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionhelpers.py:global-statement:global baseDescriptionImportCount, _config, subExpDir","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionhelpers.py:global-statement:global _config","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/expdescriptionhelpers.py:global-variable-not-assigned:global subExpDir","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:no-self-use:def mostLikely(self, pred):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:no-self-use:def expValue(self, pred):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:no-self-use:def evalAbsErr(self,pred,ground):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:attribute-defined-outside-init:self.err = None","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:attribute-defined-outside-init:self.err = err","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:wrong-import-order:from io import BytesIO, StringIO","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/metrics.py:wrong-import-order:from functools import partial","count":2,"result_id":2089},{"warning":"8:src\/support\/__init__.py:global-statement:global gLoggingInitialized","count":2,"result_id":2089},{"warning":"8:src\/support\/enum.py:unidiomatic-typecheck:if type(arg) is not str:","count":2,"result_id":2089},{"warning":"8:src\/support\/datafiles.py:redefined-builtin:def _calculateColumnsFromFile(f, format, rewind):","count":2,"result_id":2089},{"warning":"8:src\/support\/datafiles.py:redefined-builtin:def processCategoryFile(f, format, categoryColumn=None, categoryColumns=None, count=1):","count":2,"result_id":2089},{"warning":"8:src\/support\/datafiles.py:bad-builtin:categories = map(int, categories)","count":2,"result_id":2089},{"warning":"8:src\/support\/loophelpers.py:redefined-builtin:acceptErrorString, callable, argumentList, email = False,","count":2,"result_id":2089},{"warning":"8:src\/support\/lockattributes.py:redefined-builtin:def __init__(cls, name, bases, dict):","count":2,"result_id":2089},{"warning":"8:src\/support\/configuration_base.py:bad-builtin:replaceKeys = filter(lambda x: x.startswith(cls.envPropPrefix),","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:multiple-statements:for i in pos: x[i] = 1","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:multiple-statements:if not rowHint: rowHint = 1","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:multiple-statements:if self.hist_: return self.hist_.nRows()","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:multiple-statements:if self.hist_: return self.hist_.nCols()","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:multiple-statements:if s: p = x \/ s","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:redefined-builtin:def fuzzyKmeans(samples,fixCenter=None,iter=5,fuzzParam=1.5):","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:bad-builtin:begDeg = map(None,numpy.zeros(len(samples)))","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:bad-builtin:midDeg = map(None,numpy.zeros(len(samples)))","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:bad-builtin:endDeg = map(None,numpy.zeros(len(samples)))","count":2,"result_id":2089},{"warning":"8:src\/math\/stats.py:multiple-statements:begDeg[k] = pBeg\/nmlz; midDeg[k] = pMid\/nmlz; endDeg[k] = pEnd\/nmlz","count":2,"result_id":2089},{"warning":"8:src\/math\/roc_utils.py:redefined-builtin:format = \"%%.%df\" % (precision)","count":2,"result_id":2089},{"warning":"8:src\/test\/abstract_temporal_memory_test.py:multiple-statements:class MonitoredTemporalMemory(TemporalMemoryMonitorMixin, TemporalMemory): pass","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:multiple-statements:for i in xrange(1, n): cdf[i] += cdf[i-1]","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:multiple-statements:if key in self.keyMap: return self.pmf[self.keyMap[key]] * self.scale","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:multiple-statements:if key in self.keyMap: return numpy.log(self.pmf[self.keyMap[key]] * self.scale)","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:multiple-statements:if x == numpy.inf: return 1.0","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:multiple-statements:if x != int(x): raise RuntimeError(\"Invalid value.\")","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:multiple-statements:def density(self, x): return numpy.exp(self.logDensity(x))","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:redefined-builtin:sum = self.alpha.sum()","count":2,"result_id":2089},{"warning":"8:src\/math\/dist.py:redefined-builtin:sum = self.sum","count":4,"result_id":2089},{"warning":"8:src\/math\/proposal.py:redefined-builtin:def __init__(self, prop, min=None, max=None, offset=0, maxIterations=1000):","count":4,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if self.offset is not None: current = inCurrent - self.offset","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if self.offset is not None: value = value + self.offset","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if (self.min is not None) and (value < self.min): done = False","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if (self.max is not None) and (value > self.max): done = False","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:def toOdds(p): return p \/ (1.0 - p)","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:def toProbability(o): return o \/ (1.0 + o)","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:def logit(p): return numpy.log(p \/ (1.0 - p))","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if self.n > self.max: return self.queue[(self.n+1) % self.max]","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if self.n >= self.max: rem = self.queue[(self.n+1) % self.max]","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if proposed != current: break","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if self.accepted: self.accepted.add(int(accepted))","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if ri < curIndex: return self.keys[ri], lp, lp","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if minVal > 0: raise RuntimeError(\"Current value is outside legal range.\")","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:elif maxVal < 0: raise RuntimeError(\"Current value is outside legal range.\")","count":2,"result_id":2089},{"warning":"8:src\/math\/proposal.py:multiple-statements:if diff <= maxVal: break","count":2,"result_id":2089},{"warning":"8:src\/math\/cross.py:bad-builtin:wheels = map(iter, sequences)","count":4,"result_id":2089},{"warning":"8:src\/math\/cross.py:multiple-statements:if not success: break # Done.","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:multiple-statements:if mean is None: mean = x.mean()","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:multiple-statements:if numpy.min(s) > 0: return d","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:multiple-statements:if mean is not None: self.mean = numpy.asarray(mean)","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:multiple-statements:if numpy.min(self.s) > minvar: self.rank = self.d","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:multiple-statements:if r is None: r = numpy.random","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:multiple-statements:if self.mean is not None: return (x - self.mean)","count":2,"result_id":2089},{"warning":"8:src\/math\/mvn.py:no-self-use:def logDensity(self, x, given):","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:bad-builtin:fieldMetaList = map(FieldMetaInfo._make,","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:attribute-defined-outside-init:self._Model__learningEnabled = True","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:attribute-defined-outside-init:self._Model__inferenceArgs = {}","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:attribute-defined-outside-init:self._Model__inferenceType = InferenceType.TemporalNextStep","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:attribute-defined-outside-init:self._Model__inferenceEnabled = True","count":2,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:attribute-defined-outside-init:self._ms_prevVal = absoluteValue","count":4,"result_id":2089},{"warning":"8:src\/frameworks\/opf\/clamodel.py:attribute-defined-outside-init:self._ms_predHistories = dict()","count":2,"result_id":2089},{"warning":"8:nupic\/simple_server.py:wrong-import-position:import datetime","count":1,"result_id":2088},{"warning":"8:nupic\/simple_server.py:wrong-import-position:import json","count":1,"result_id":2088},{"warning":"8:nupic\/simple_server.py:wrong-import-position:import web","count":1,"result_id":2088},{"warning":"8:nupic\/simple_server.py:wrong-import-position:from nupic.frameworks.opf.modelfactory import ModelFactory","count":1,"result_id":2088},{"warning":"8:nupic\/simple_server.py:global-variable-not-assigned:global g_models","count":3,"result_id":2088},{"warning":"8:nupic\/simple_server.py:no-self-use:def GET(self):","count":1,"result_id":2088},{"warning":"8:nupic\/simple_server.py:no-self-use:def POST(self, name):","count":2,"result_id":2088},{"warning":"8:nupic\/swarming\/object_json.py:unidiomatic-typecheck:if type(obj) in NON_OBJECT_TYPES:","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/object_json.py:bad-builtin:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/DummyModelRunner.py:bad-builtin:range = map(int, range.split(','))","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/DummyModelRunner.py:bad-builtin:sameModelNumbers = filter(lambda x: x[1] == self.modelIndex,","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/ExtendedLogger.py:no-self-use:def getExtendedMsg(self, msg):","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/HypersearchWorker.py:bad-builtin:changedEntries = filter(lambda x:x[1][1] != x[2][1],","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:redefined-builtin:str = getCopyrightHead() + \\","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:redefined-builtin:str = \\","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:assert type(string) in types.StringTypes","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(e) is not InvalidConnectionException:","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(e) == JobFailException:","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:logging-not-lazy:logger.info(\"Using experiment directory: %s\" % (experimentDir))","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/hypersearch\/utils.py:unidiomatic-typecheck:if type(params) is bool:","count":1,"result_id":2088},{"warning":"8:nupic\/research\/TP_shim.py:multiple-statements:class MonitoredTemporalMemory(TemporalMemoryMonitorMixin, TemporalMemory): pass","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:unidiomatic-typecheck:return type(obj) in types.StringTypes","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:redefined-builtin:def _indentLines(str, indentLevels = 1, indentFirstLine=True):","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:global-variable-not-assigned:global _metricSpecSchema","count":1,"result_id":2088},{"warning":"8:nupic\/swarming\/exp_generator\/ExpGenerator.py:bad-builtin:activeOptions = filter(lambda x: getattr(options, x) != None,","count":1,"result_id":2088},{"warning":"8:nupic\/research\/connections.py:multiple-statements:if self.numCells != other.numCells: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/connections.py:multiple-statements:if segmentSet != otherSegmentSet: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/connections.py:multiple-statements:if synapseSet != otherSynapseSet: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:no-self-use:def adaptSegment(self, segment, activeSynapses, connections,","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.columnDimensions != other.columnDimensions: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.cellsPerColumn != other.cellsPerColumn: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.activationThreshold != other.activationThreshold: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.minThreshold != other.minThreshold: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.maxNewSynapseCount != other.maxNewSynapseCount: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.connections != other.connections: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.activeCells != other.activeCells: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.predictiveCells != other.predictiveCells: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.winnerCells != other.winnerCells: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.matchingSegments != other.matchingSegments: return False","count":1,"result_id":2088},{"warning":"8:nupic\/research\/temporal_memory.py:multiple-statements:if self.matchingCells != other.matchingCells: return False","count":1,"result_id":2088},{"warning":"8:nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._categoryRecencyList = numpy.delete(","count":1,"result_id":2088},{"warning":"8:nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = numpy.delete(self._partitionIdArray,","count":1,"result_id":2088},{"warning":"8:nupic\/data\/functionsource.py:attribute-defined-outside-init:self._prevSequenceId = state['prevSequenceId']","count":1,"result_id":2088},{"warning":"8:nupic\/data\/functionsource.py:attribute-defined-outside-init:self._sequenceInfoType = state['sequenceInfoType']","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:redefined-builtin:from math import *","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:no-self-use:def getNext(self):","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:no-self-use:def getDescription(self):","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'period' in params: self.period=params.pop('period')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'phaseShift' in params: self.phaseShift = params.pop('phaseShift')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'mean' in params: self.mean = params.pop('mean')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/distributions.py:multiple-statements:if 'std' in params: self.std=params.pop('std')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/pattern_machine.py:unidiomatic-typecheck:if type(w) is list:","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/pattern_machine.py:unidiomatic-typecheck:assert type(w) is int, \"List for w not supported\"","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:redefined-builtin:from nupic.data.generators.distributions import *","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:no-self-use:def setSeed(self, seed):","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if self.verbosity>0: print 'Generating', len(records), 'records...'","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if self.verbosity>0: print 'Encoding', len(records), 'records.'","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'n' in encoderSpec: self.n = encoderSpec.pop('n')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'w' in encoderSpec: self.w = encoderSpec.pop('w')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'flag' in encoderSpec: self.flag = encoderSpec.pop('flag')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'isPredictedField' in encoderSpec: self.isPredictedField\\","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'dataClass' in encoderSpec: self.dataClass \\","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'dataClassName' in encoderSpec: self.dataClassName \\","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'dataType' in encoderSpec: self.dataType = encoderSpec.pop('dataType')","count":1,"result_id":2088},{"warning":"8:nupic\/data\/generators\/data_generator.py:multiple-statements:if 'encoderType' in encoderSpec: self.encoderType \\","count":1,"result_id":2088},{"warning":"8:nupic\/engine\/__init__.py:global-statement:global registeredRegions","count":1,"result_id":2088},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder.bucketMap = {x.key: numpy.array(x.value, dtype=numpy.uint32)","count":1,"result_id":2088},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:self.random = NupicRandom(randomState.randint(sys.maxint))","count":1,"result_id":2088},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder.random = NupicRandom()","count":1,"result_id":2088},{"warning":"8:nupic\/encoders\/random_distributed_scalar.py:attribute-defined-outside-init:encoder._maxBuckets = INITIAL_BUCKETS","count":1,"result_id":2088},{"warning":"8:nupic\/encoders\/sdrcategory.py:attribute-defined-outside-init:self.random = NupicRandom(randomState.randint(sys.maxint))","count":1,"result_id":2088},{"warning":"8:nupic\/encoders\/sdrcategory.py:attribute-defined-outside-init:encoder.random = NupicRandom()","count":1,"result_id":2088},{"warning":"8:nupic\/regions\/RecordSensor.py:no-self-use:def populateCategoriesOut(self, categories, output):","count":1,"result_id":2088},{"warning":"8:nupic\/regions\/AnomalyRegion.py:unidiomatic-typecheck:if type(v1) != type(v2):","count":1,"result_id":2088},{"warning":"8:nupic\/regions\/SVMClassifierNode.py:bad-builtin:\",\".join(map(str, xrange(len(_kKernelTypes))))","count":1,"result_id":2088},{"warning":"8:nupic\/frameworks\/opf\/opftaskdriver.py:bad-builtin:self.__phases = tuple(map(lambda x: x._getImpl(model=model),","count":1,"result_id":2088},{"warning":"8:nupic\/frameworks\/opf\/expdescriptionapi.py:bad-builtin:taskLabelDuplicates = filter(lambda x: taskLabelsList.count(x) > 1,","count":1,"result_id":2088},{"warning":"8:nupic\/frameworks\/opf\/expdescriptionapi.py:no-self-use:def normalizeStreamSource(self, stream):","count":1,"result_id":2088},{"warning":"8:nupic\/frameworks\/opf\/metrics.py:attribute-defined-outside-init:self.err = None","count":1,"result_id":2088},{"warning":"8:nupic\/frameworks\/opf\/metrics.py:attribute-defined-outside-init:self.err = err","count":1,"result_id":2088},{"warning":"8:nupic\/support\/datafiles.py:bad-builtin:categories = map(int, categories)","count":1,"result_id":2088},{"warning":"8:nupic\/support\/configuration_base.py:bad-builtin:replaceKeys = filter(lambda x: x.startswith(cls.envPropPrefix),","count":1,"result_id":2088},{"warning":"8:nupic\/math\/stats.py:bad-builtin:begDeg = map(None,numpy.zeros(len(samples)))","count":1,"result_id":2088},{"warning":"8:nupic\/math\/stats.py:bad-builtin:midDeg = map(None,numpy.zeros(len(samples)))","count":1,"result_id":2088},{"warning":"8:nupic\/math\/stats.py:bad-builtin:endDeg = map(None,numpy.zeros(len(samples)))","count":1,"result_id":2088},{"warning":"8:nupic\/math\/cross.py:bad-builtin:wheels = map(iter, sequences)","count":2,"result_id":2088},{"warning":"8:nupic\/frameworks\/opf\/clamodel.py:bad-builtin:fieldMetaList = map(FieldMetaInfo._make,","count":1,"result_id":2088},{"warning":"8:src\/nupic\/image\/__init__.py:unidiomatic-typecheck:if type(radius) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/image\/__init__.py:redefined-builtin:format = 'png'","count":19,"result_id":2069},{"warning":"8:src\/nupic\/image\/__init__.py:multiple-statements:import pdb; pdb.set_trace()","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:no-self-use:def updateSequence(self, state, params):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._centerOffsets = list(cross(yPositions, xPositions))","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._spreadPosIdx = 0       # radial position around the center point","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._spreadPosIdx = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._numSpreadOffsets = len(self._spreadOffsets)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._numCats = self._getNumCategories()","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._numCenterOffsets = len(self._centerOffsets)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._spreadOffsets = list(cross(yPositions, xPositions))","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._catIdx = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._centerPosIdx = 0       # Which center point","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:attribute-defined-outside-init:self._centerPosIdx = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/PictureSensorExplorers\/random.py:no-self-use:def updateSequence(self, state, params):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:wrong-import-position:from nupic.image import (serializeImage,","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if categoryName is not None and type(categoryName) is not str:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if first is not None and type(first) != int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if last is not None and type(last) != int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if subsample is not None and type(subsample) != int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if skipInterval is not None and (type(skipInterval) != int","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:(type(skipOffset) != int or skipOffset < 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(auxPath) is not list:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:no-self-use:def _computeSequenceInfo(self, images):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if position['offset'] and type(position['offset']) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(position['filters']) != list:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if image is not None and type(image) != int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filtered) is not list:","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(item) is not list:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(outputCount) not in (tuple, list):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filtered) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:assert type(raw_output) == numpy.ndarray","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filtered[0]) is list:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(outputCount) in (tuple, list):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:while type(responses[0]) == list:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:redefined-builtin:for i, filter in enumerate(filters):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(filters) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(filter) is str:","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(filter) is tuple:","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(outputCount) in (tuple, list) and len(outputCount) > 1 \\","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(self.explorer) == list and len(self.explorer) > 2:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:redefined-builtin:for i, filter in enumerate(postFilters):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(postFilters) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(n) in (tuple, list):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(n) is int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:no-self-use:def _getNumFilterOutputs(self, filters):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(explorer) is str:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:elif type(explorer) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:redefined-builtin:return [filter[:2] for filter in self.filters]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:redefined-builtin:for filter in self.filters + self.postFilters:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:unidiomatic-typecheck:if type(state) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.bboxLogFile = open(os.path.join(self.logDir, 'imagesensor_bbox_log.txt'), 'w')","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.bboxLogFile = None","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._imageQueue = []","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.height = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.automaskingPadding = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._auxDataWidth = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.filters = filters","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logText = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logText = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.prevPosition = None","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.prevPosition = {","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.minimalBoundingBox = True","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._categoryOutputFile = open(self.categoryOutputFile, 'w')","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._categoryOutputFile = None","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logLocationOnOriginalImage = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._holdForOffset = iteration % self.explorer[2].holdFor","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._holdForOffset = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logFilteredImages = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.width = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.categoryOutputFile = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.categoryOutputFile = None","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logLocationImages = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.locationImage = self._createLocationImage()","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.locationImage = None","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._cubeOutputs = not containsConvolutionPostFilter(resetPostFilters)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._filterQueue = []","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.enabledWidth = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logOutputImages = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.explorer = explorer","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.explorer = None","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._iteration = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.automaskingTolerance = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.memoryLimit = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logDir = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logDir = \"imagesensor_log\"","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.background = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._pixelCount = 0","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.categoryInfo = deserializeCategoryInfo(parameterValue)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logOriginalImages = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.enabledHeight = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._imageList = []","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self._imageList = _deserializeImageList(sImageList)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logBoundingBox = False","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.blankWithReset = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logFile = open(os.path.join(self.logDir, 'imagesensor_log.txt'), 'w')","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.logFile = None","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.postFilters = postFilters","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.outputImage = outputImages[0]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.outputImage = outputImages","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:attribute-defined-outside-init:self.outputImage = None","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensor.py:multiple-statements:if sCategoryInfo is None: return []","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def getDefaultParamSet(self):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _createDir(self, directory):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:filter = self._makeGaborFilter(filterParams)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _normalizeGain(self, filter, filterParams):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _normalizeGain(self, filter, filterParams):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _deg2rad(self, degrees):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _rad2deg(self, radians):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _chooseParams(self, scale):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _suppressionRules(self):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _doLobeSuppression(self, filter, orientation, phase):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _zeroLobes(self, filter, (lobeX, lobeY), (deltaX, deltaY)):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _wipeStripe(self, filter, (x, y, dX, dY)):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _wipeStripe(self, filter, (x, y, dX, dY)):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def _scanForLobes(self, filter, numPosZones, numNegZones, deltaX, deltaY,","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _scanForLobes(self, filter, numPosZones, numNegZones, deltaX, deltaY,","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:for (filter, filterSpecs) in filterSet:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _combineResponses(self, responseSet):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _postProcess(self, preResponse, postProcessingMode, threshold=0.0, steepness=500.0):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _printGaborFilter(self, g):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-self-use:def _convertToPIL(self, responseSet, amplification=1.0):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def convolve2D(image, filter):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def convolve1D(image, imageRotated, filter, phase, orientation, rotation):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:redefined-builtin:def convolveFFT(image, filter):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:no-self-use:def _acceptOrCull(self, strength, strongZones, candidateZone, minZoneLen, minStrength):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:no-self-use:def _smooth(self, x, window_len=10, window=None):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:attribute-defined-outside-init:self._logBox = open(\"LOGBOX.txt\", mode)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:attribute-defined-outside-init:self._debugIndex = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/AffineTransform.py:redefined-builtin:type = self.random.choice(self.types)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:attribute-defined-outside-init:self.scaledBGImgs = [x.copy() for x in self.bgImgs]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/BaseFilter.py:no-self-use:def getOutputCount(self):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:redefined-builtin:id = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _isHiddenParam(self, paramName):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) != type(0) or \\","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or float(value) < 0.0:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or float(value) <= 0.0:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)]:","count":76,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if value != 'colorKey' and (type(value) not in (int, float) or float(value) < 0.0 or float(value) > 255.0):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if value is not None and (type(value) != type(\"\") or len(value) == 0):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.)] or value <= 0.0:","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or value < 0.0 or value > 1.0:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(value) not in [type(0), type(0.0)] or float(value) < 0.0 or float(value) > 1.0:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if whichScale != 'all' and (type(whichScale) != type(0) or whichScale < 0 or whichScale >= numScales):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(whichResponse) != type(0) or whichResponse < 0 or whichResponse >= self._numPlanes:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:assert type(whichResponse) == type(0)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _alignToFour(self, val):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _getEphemeralMembers(self):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _loadLibrary(self, libraryName, libSubDir=None):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(scale) == type(0):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:if type(orient) == type(0):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _saveImage(self, imgArray, outPath):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:unidiomatic-typecheck:assert type(offImagePixelValue) in [type(0), type(0.0)]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _convertEnumValue(self, enumValue):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _getValidEdgeModes(self):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:redefined-builtin:format = 'png'","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _serializeImage(self, image):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _getResponseKey(self, preSuppression):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:no-self-use:def _makeCompositeImage(self, imageSet):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._morphHeader = cv.CreateImageHeader(cv.Size(int(self._inWidth),","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._erosion = Float32Erosion()","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._inputDims = inputDims","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._inHeight, self._inWidth   = [float(x) for x in self._inputDims[0]]","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._responseImages = {self._getResponseKey(preSuppression): {}}","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._gaborComputeProc = libGabor.gaborCompute","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._gaborComputeProc = None","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.tdInput = tdInput_avg","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._bufferSetOut = [numpy.zeros((numBuffersNeeded,","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._tdThreshold = 0.01","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._minInputDim = min([min(inputDim) for inputDim in self._inputDims])","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._outHeight, self._outWidth = [float(x) for x in self._outputDims[0]]","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.response = responseFinal","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.response = outputPlane","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self.selectedBottomUpOut = buOutput * tdThreshold","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._bufferSetIn = [numpy.zeros((inHeight + padding,","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._postProcLUT = postProcLUT","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._minOutputDim = min([min(outputDim) for outputDim in self._outputDims])","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._outputDims = [self.getOutputDims(inputDim) for inputDim in inputDims]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._morphologyMethod = parameterValue","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:attribute-defined-outside-init:self._postProcLutScalar = postProcScalar","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/extra\/GaborNode2.py:wrong-import-position:from nupic.engine import Network","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:if type(sizes) not in (list, tuple):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:if type(sizes) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:if type(size) in (list, tuple):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Resize.py:unidiomatic-typecheck:elif type(size) in (int, float):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:no-self-use:def _ceilFoor(self, mat, width, sentinel, Mirror=False):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:no-self-use:def _cropMatCenter(self, mat, outSize):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._deltaymat = numpy.zeros((ysize,xsize))","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._matSize = matSize","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._scales = numpy.zeros((ysize,xsize))","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:attribute-defined-outside-init:self._deltaxmat = numpy.zeros((ysize,xsize))","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:redefined-builtin:id = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:no-self-use:def _alignToFour(self, val):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:no-self-use:def _loadLibrary(self, libraryName, libSubDir='bindings'):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:unidiomatic-typecheck:assert type(offImagePixelValue) in [type(0), type(0.0)]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:no-self-use:def _convertEnumValue(self, enumValue):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:unidiomatic-typecheck:if type(scales) not in (list, tuple):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:unidiomatic-typecheck:if type(scales) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:unidiomatic-typecheck:if type(bbox) == type(\"\"):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:attribute-defined-outside-init:self._debugIndex = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/NormalizeContrast.py:unidiomatic-typecheck:if type(cutoff) != int or cutoff < 0:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorFilters\/Gradient.py:redefined-builtin:type = self.random.choice(self.types)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:unidiomatic-typecheck:if type(jumpOffObject) not in (bool, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:unidiomatic-typecheck:if numJumpsPerImage is not None and type(numJumpsPerImage) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:unidiomatic-typecheck:if numVisitsPerImage is not None and type(numVisitsPerImage) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.jitteri = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.diagi = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.cent = list(self.position['offset'])","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:attribute-defined-outside-init:self.diagdiri = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/EyeMovements.py:attribute-defined-outside-init:self.eyeMovementIndex = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:unidiomatic-typecheck:if type(shiftDuringSweep) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:unidiomatic-typecheck:if type(sweepOffObject) not in (bool, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:attribute-defined-outside-init:self.direction = self.random.choice(self.sweepDirections)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:unidiomatic-typecheck:if type(sweepLength) is not int or sweepLength < 1:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:unidiomatic-typecheck:if type(numRepetitions) is not int or numRepetitions < 1:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:unidiomatic-typecheck:if type(replacement) not in (bool, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:unidiomatic-typecheck:if type(start) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.numCategories = numCats","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.nextCatIndex = 0","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.nextCatIndex = (self.nextCatIndex + 1) % self.numCategories","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/RandomFlash.py:attribute-defined-outside-init:self.categories = categories","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:unidiomatic-typecheck:if type(radius) is not int or radius < 1:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:unidiomatic-typecheck:if type(numRepetitions) is not int or numRepetitions < 1:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/SpiralSweep.py:unidiomatic-typecheck:if type(sweepOffObject) not in (bool, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.scale = not self.doSaliencySize","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.bbox = currImg.split()[1].getbbox()","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.currentImageSize = \\","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.currentSaliencySizes = \\","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:attribute-defined-outside-init:self.names = []","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/OnionBlock.py:unidiomatic-typecheck:if type(radius) is not int or radius < 1:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:unidiomatic-typecheck:if type(stepSize) is not int or stepSize < 1:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:attribute-defined-outside-init:self._home = self.position['offset'][:]","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:attribute-defined-outside-init:self._home = (0,0)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:multiple-statements:if DEBUG >= 2: print \"already performed jiggle\", jiggleIndex, \", skipping\"","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/Jiggle.py:no-self-use:def _generateOffsets(self, shift, radius):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:if type(shiftDuringSweep) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:if type(shiftBetweenSweeps) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:if len([x for x in order if type(x) == str]) > 2:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:unidiomatic-typecheck:len([x for x in self.order if type(x) == int]) != self.numFilters:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:attribute-defined-outside-init:self.directionIndex = 0","count":38,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/BaseExplorer.py:no-self-use:def getNumIterations(self, image):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(sweepOffObject) not in (bool, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(crossDirectories) not in (bool, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(minSweepLength) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(pattern) in (list, tuple):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(pattern) is tuple:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(dimensions) in (str, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(d) in (str, int):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(d['name']) is int and d['name'] not in filters:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:if type(dimension['name']) is int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:unidiomatic-typecheck:and type(name) is not int:","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:no-self-use:def _copyPosition(self, position):","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = self.random.choice(('left', 'right', 'up', 'down',","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = self.random.choice(('up', 'down'))","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = bounceDirections.pop(0)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = 'down'","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.direction = 'up'","count":57,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.start = None","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.start = self._copyPosition(self.position)","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.length = 1","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.prevImageSize = filteredImages[0].size","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.prevImageSize = newImageSize","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.parsedFilenames = []","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:attribute-defined-outside-init:self.dimension = d","count":19,"result_id":2069},{"warning":"8:src\/nupic\/regions\/TestNode.py:redefined-builtin:def _getInputForNode(self, input, index):","count":48,"result_id":2040},{"warning":"8:src\/nupic\/regions\/TestNode.py:redefined-builtin:input = self._getInputForNode(bottomUpIn, node)","count":48,"result_id":2040},{"warning":"8:src\/nupic\/regions\/TestNode.py:attribute-defined-outside-init:self.dims = dims","count":48,"result_id":2040},{"warning":"8:src\/nupic\/regions\/TestNode.py:attribute-defined-outside-init:self.splitterMap = splitterMaps['bottomUpIn']","count":48,"result_id":2040},{"warning":"8:src\/nupic\/regions\/TestNode.py:attribute-defined-outside-init:self.nodeCount = dims[0] * dims[1]","count":48,"result_id":2040},{"warning":"8:src\/nupic\/research\/TP_shim.py:multiple-statements:class MonitoredTemporalMemory(TemporalMemoryMonitorMixin, TemporalMemory): pass","count":57,"result_id":2031},{"warning":"8:src\/nupic\/regions\/PyRegion.py:wrong-import-position:from abc import ABCMeta, abstractmethod","count":66,"result_id":2022},{"warning":"8:src\/nupic\/regions\/PyRegion.py:wrong-import-position:from nupic.support import getCallerInfo","count":66,"result_id":2022},{"warning":"8:src\/nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = numpy.delete(self._partitionIdArray,","count":98,"result_id":1990},{"warning":"8:src\/nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = numpy.array(self._partitionIdList)","count":98,"result_id":1990},{"warning":"8:src\/nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdArray = None","count":98,"result_id":1990},{"warning":"8:src\/nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdList = []","count":98,"result_id":1990},{"warning":"8:src\/nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdList = [0] * self._numPatterns","count":98,"result_id":1990},{"warning":"8:src\/nupic\/algorithms\/KNNClassifier.py:attribute-defined-outside-init:self._partitionIdList = self._partitionIdArray.tolist()","count":98,"result_id":1990},{"warning":"8:src\/nupic\/regions\/KNNClassifierRegion.py:attribute-defined-outside-init:self._accuracy = float(numCorrect) \/ float(numSamples)","count":110,"result_id":1978},{"warning":"8:src\/nupic\/test\/abstract_temporal_memory_test.py:multiple-statements:class MonitoredTemporalMemory(TemporalMemoryMonitorMixin, TemporalMemory): pass","count":143,"result_id":1945}],"4":[{"warning":"4:nupic\/encoders\/date.py:no-name-in-module:from nupic.encoders.date_capnp import DateEncoderProto","count":82,"result_id":2716},{"warning":"4:nupic\/frameworks\/opf\/experiment_runner.py:non-executable:# ----------------------------------------------------------------------","count":169,"result_id":2151},{"warning":"4:nupic\/engine\/common_networks\/__init__.py:no-main-shebang:#!\/usr\/bin\/env python","count":73,"result_id":2151},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats.extend(itertools.repeat(0.0, statProto.index - statsLen))","count":150,"result_id":2125},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._recordNumMinusLearnIteration = proto.recordNumMinusLearnIteration","count":150,"result_id":2125},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory.append((learnIteration, list(patternNZHistoryProto[i])))","count":150,"result_id":2125},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:no-name-in-module:from nupic.encoders.random_distributed_scalar_capnp import (","count":190,"result_id":2116},{"warning":"4:nupic\/encoders\/multi.py:no-name-in-module:from nupic.encoders.scalar_capnp import ScalarEncoderProto","count":181,"result_id":2116},{"warning":"4:nupic\/algorithms\/anomaly_likelihood.py:protected-access:self._iteration == o._iteration and","count":91,"result_id":2113},{"warning":"4:nupic\/algorithms\/anomaly_likelihood.py:protected-access:self._historicalScores == o._historicalScores and","count":91,"result_id":2113},{"warning":"4:nupic\/algorithms\/anomaly_likelihood.py:protected-access:self._distribution == o._distribution and","count":91,"result_id":2113},{"warning":"4:nupic\/algorithms\/anomaly_likelihood.py:protected-access:self._probationaryPeriod == o._probationaryPeriod and","count":91,"result_id":2113},{"warning":"4:nupic\/algorithms\/anomaly_likelihood.py:protected-access:self._claLearningPeriod == o._claLearningPeriod and","count":91,"result_id":2113},{"warning":"4:nupic\/algorithms\/anomaly_likelihood.py:protected-access:self._reestimationPeriod == o._reestimationPeriod)","count":91,"result_id":2113},{"warning":"4:nupic\/research\/fast_temporal_memory.py:arguments-differ:def burstColumns(self,","count":13,"result_id":2104},{"warning":"4:nupic\/research\/fast_temporal_memory.py:too-many-function-args:bestCell = self.leastUsedCell(cells, connections)","count":13,"result_id":2104},{"warning":"4:nupic\/research\/fast_temporal_memory.py:arguments-differ:def computePredictiveCells(self, activeCells, connections):","count":13,"result_id":2104},{"warning":"4:nupic\/data\/generators\/sequence_machine.py:singleton-comparison:if number == None:","count":251,"result_id":2091},{"warning":"4:nupic\/data\/generators\/sequence_machine.py:singleton-comparison:if pattern == None:","count":251,"result_id":2091},{"warning":"4:nupic\/data\/generators\/distributions.py:arguments-differ:def getData(self):","count":251,"result_id":2091},{"warning":"4:nupic\/data\/generators\/data_generator.py:no-name-in-module:from nupic.bindings.math import GetNTAReal","count":251,"result_id":2091},{"warning":"4:nupic\/data\/generators\/data_generator.py:eval-used:dataClass=eval(dataClassName)(fieldParams)","count":251,"result_id":2091},{"warning":"4:nupic\/frameworks\/opf\/metrics.py:no-value-for-parameter:return MetricMulti(metricSpec)","count":240,"result_id":2091},{"warning":"4:nupic\/encoders\/scalarspace.py:abstract-method:class ScalarSpaceEncoder(Encoder):","count":444,"result_id":2091},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:no-name-in-module:from nupic.bindings.math import Random as NupicRandom","count":215,"result_id":2091},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:protected-access:encoder._offset = proto.offset","count":215,"result_id":2091},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:protected-access:encoder._maxBuckets = INITIAL_BUCKETS","count":215,"result_id":2091},{"warning":"4:nupic\/encoders\/category.py:protected-access:encoder._topDownMappingM = None","count":211,"result_id":2091},{"warning":"4:nupic\/encoders\/category.py:protected-access:encoder._bucketValues = None","count":211,"result_id":2091},{"warning":"4:nupic\/encoders\/sdrcategory.py:no-name-in-module:from nupic.bindings.math import SM32, GetNTAReal, Random as NupicRandom","count":210,"result_id":2091},{"warning":"4:nupic\/encoders\/sdrcategory.py:undefined-variable:self.random = NupicRandom(randomState.randint(sys.maxint))","count":210,"result_id":2091},{"warning":"4:nupic\/encoders\/sdrcategory.py:protected-access:encoder._learningEnabled = False","count":210,"result_id":2091},{"warning":"4:nupic\/encoders\/sdrcategory.py:protected-access:encoder._initOverlap()","count":210,"result_id":2091},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._adaptiveScalarEnc = (","count":206,"result_id":2091},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._prevAbsolute = proto.prevAbsolute","count":206,"result_id":2091},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._prevDelta = proto.prevDelta","count":206,"result_id":2091},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._stateLock = proto.stateLock","count":206,"result_id":2091},{"warning":"4:nupic\/encoders\/logenc.py:protected-access:encoder._bucketValues = None","count":206,"result_id":2091},{"warning":"4:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:self.clamodel._getSPRegion().getSelf().getParameter('numActiveColumnsPerInhArea')","count":189,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._id = proto.id","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:statsLen = len(bitHistory._stats) - 1","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats[statProto.index] = statProto.dutyCycle","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._lastTotalUpdate = proto.lastTotalUpdate","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._learnIteration = proto.learnIteration","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._learnIteration = proto.learnIteration","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory = deque(maxlen=max(classifier.steps) + 1)","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:learnIteration = classifier._learnIteration - len(patternNZHistoryProto) + 1","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._activeBitHistory = dict()","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._activeBitHistory[(bit, nSteps)] = bitHistory","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._maxBucketIdx = proto.maxBucketIdx","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues = []","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues.append(None)","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues.append(actValue)","count":184,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._version = proto.version","count":184,"result_id":2091},{"warning":"4:nupic\/research\/connections.py:protected-access:otherSynapseSet = other._synapseSetForSynapses(","count":346,"result_id":2091},{"warning":"4:nupic\/research\/temporal_memory.py:protected-access:tm._random = Random()","count":160,"result_id":2091},{"warning":"4:nupic\/research\/temporal_memory.py:protected-access:tm._random.read(proto.random)","count":160,"result_id":2091},{"warning":"4:nupic\/encoders\/pass_through_encoder.py:undefined-variable:return [EncoderResult(value=0, scalar=0, encoding=numpy.zeros(self.n))]","count":148,"result_id":2091},{"warning":"4:nupic\/engine\/common_networks\/__init__.py:dangerous-default-value:def createTemporalAnomaly(recordParams, spatialParams=_SP_PARAMS,","count":266,"result_id":2091},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._mode == self._mode and","count":113,"result_id":2091},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._binaryThreshold == self._binaryThreshold and","count":113,"result_id":2091},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._movingAverage == self._movingAverage and","count":113,"result_id":2091},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._likelihood == self._likelihood)","count":113,"result_id":2091},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:assignment-from-no-return:filesDescription = _generateExperiment(args, outDir, hsVersion=hsVersion,","count":75,"result_id":2091},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:singleton-comparison:if not options[\"customErrorMetric\"] == None :","count":75,"result_id":2091},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:undefined-variable:for propertyName in _metricSpecSchema['properties'].keys():","count":75,"result_id":2091},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:undefined-variable:_getPropertyValue(_metricSpecSchema, propertyName, metric)","count":75,"result_id":2091},{"warning":"4:nupic\/swarming\/hypersearch\/utils.py:dangerous-default-value:def _matchReportKeys(reportKeyREs=[], allReportKeys=[]):","count":142,"result_id":2091},{"warning":"4:nupic\/swarming\/hypersearch\/utils.py:undefined-variable:raise _BadOptimizeKeyError(optimizeKey, matchingKeys)","count":71,"result_id":2091},{"warning":"4:nupic\/swarming\/object_json.py:eval-used:return eval(obj[Types.DATETIME])","count":37,"result_id":2091},{"warning":"4:nupic\/swarming\/object_json.py:eval-used:return eval(obj[Types.REPR], {module: __import__(module)})","count":37,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats.extend(","count":34,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._recordNumMinusLearnIteration = (","count":34,"result_id":2091},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory.append((learnIteration,","count":34,"result_id":2091},{"warning":"4:src\/swarming\/object_json.py:eval-used:return eval(obj[Types.DATETIME])","count":2,"result_id":2089},{"warning":"4:src\/swarming\/object_json.py:eval-used:return eval(obj[Types.REPR], {module: __import__(module)})","count":2,"result_id":2089},{"warning":"4:src\/swarming\/ModelTerminator.py:undefined-variable:self.logger = self.logger = logging.getLogger(\".\".join( ['com.numenta',","count":2,"result_id":2089},{"warning":"4:src\/swarming\/ModelTerminator.py:too-few-format-args:self.logger.info(\"Model %d underperforming (metric:%f, best:%f). Canceling...\"","count":2,"result_id":2089},{"warning":"4:src\/swarming\/DummyModelRunner.py:eval-used:self.metrics = eval(self._params['metricFunctions'])","count":2,"result_id":2089},{"warning":"4:src\/swarming\/DummyModelRunner.py:no-init:class DummyLogger:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/permutations_runner.py:protected-access:jobID = jobrunner._HyperSearchRunner__searchJob.getJobID()","count":2,"result_id":2089},{"warning":"4:src\/swarming\/permutations_runner.py:protected-access:jobStatus = hyperSearchJob.getJobStatus(gCurrentSearch._workers)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchWorker.py:protected-access:jobID = hst._options.jobID","count":2,"result_id":2089},{"warning":"4:src\/swarming\/permutationhelpers.py:abstract-method:class PermuteEncoder(PermuteVariable):","count":14,"result_id":2089},{"warning":"4:src\/swarming\/ModelRunner.py:undefined-variable:self._jobsDAO.modelSetFields(modelID,","count":2,"result_id":2089},{"warning":"4:src\/swarming\/ModelRunner.py:undefined-variable:\"checkpointID: %r\", self._modelID, checkpointID)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/ModelRunner.py:protected-access:self._metricRegression._window)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/hypersearch\/utils.py:dangerous-default-value:def _matchReportKeys(reportKeyREs=[], allReportKeys=[]):","count":4,"result_id":2089},{"warning":"4:src\/swarming\/hypersearch\/utils.py:undefined-variable:raise _BadOptimizeKeyError(optimizeKey, matchingKeys)","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:dangerous-default-value:def generateSimpleSequences(nCoinc=10, seqLength=[5,6,7], nSeq=100):","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:dangerous-default-value:def generateHubSequences(nCoinc=10, hubs = [2,6], seqLength=[5,6,7], nSeq=100):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:dangerous-default-value:def genTestSeqsForLookback(nPatterns=10, patternLen=500, patternActivity=50,","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:dangerous-default-value:def generateSequences(nPatterns=10, patternLen=500, patternActivity=50,","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:dangerous-default-value:def generateL2Sequences(nL1Patterns=10, l1Hubs=[2,6], l1SeqLength=[5,6,7],","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:undefined-variable:spOutput = generateSlowSPOutput(seqListBelow = l1SeqList,","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if result == True:","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if res == False:","count":6,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if sameTPParams(tp1, tp2) == False:","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if result == True and not relaxSegmentTests:","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if sameSegment(tp1seg, tp2seg) == True:","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if result == True and (verbosity > 1):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:singleton-comparison:if result == True and not relaxSegmentTests and checkLearn:","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:if(len(SP1._masterConnectedM)!=len(SP2._masterConnectedM)):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:if(len(SP1._masterPotentialM)!=len(SP2._masterPotentialM)):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:if(len(SP1._masterPermanenceM)!=len(SP2._masterPermanenceM)):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:for i in range(0,len(SP1._masterConnectedM)):","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:connected1 = SP1._masterConnectedM[i]","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:connected2 = SP2._masterConnectedM[i]","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:permanences1 = SP1._masterPermanenceM[i];","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:permanences2 = SP2._masterPermanenceM[i];","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:potential1 = SP1._masterPotentialM[i];","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:potential2 = SP2._masterPotentialM[i];","count":2,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:if(not numpy.array_equal(SP1._firingBoostFactors,SP2._firingBoostFactors)):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:if(not numpy.array_equal(SP1._dutyCycleAfterInh,SP2._dutyCycleAfterInh)):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:protected-access:if(not numpy.array_equal(SP1._dutyCycleBeforeInh,SP2._dutyCycleBeforeInh)):","count":4,"result_id":2089},{"warning":"4:src\/research\/fdrutilities.py:undefined-variable:testStability(numOrigVectors=10, length=500, activity=50,morphTime=3)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/exp_generator\/ExpGenerator.py:assignment-from-no-return:filesDescription = _generateExperiment(args, outDir, hsVersion=hsVersion,","count":2,"result_id":2089},{"warning":"4:src\/swarming\/exp_generator\/ExpGenerator.py:singleton-comparison:if not options[\"customErrorMetric\"] == None :","count":2,"result_id":2089},{"warning":"4:src\/swarming\/exp_generator\/ExpGenerator.py:undefined-variable:for propertyName in _metricSpecSchema['properties'].keys():","count":2,"result_id":2089},{"warning":"4:src\/swarming\/exp_generator\/ExpGenerator.py:undefined-variable:_getPropertyValue(_metricSpecSchema, propertyName, metric)","count":2,"result_id":2089},{"warning":"4:src\/research\/connections.py:protected-access:otherSynapseSet = other._synapseSetForSynapses(","count":4,"result_id":2089},{"warning":"4:src\/research\/temporal_memory.py:protected-access:tm._random = Random()","count":2,"result_id":2089},{"warning":"4:src\/research\/temporal_memory.py:protected-access:tm._random.read(proto.random)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:self._bestResult = numpy.inf","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._maximize:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:errScore = numpy.inf","count":8,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:(oldResult, pos) = self._particleBest.get(particleId, (numpy.inf, None))","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:bestScores.append((None, numpy.inf))","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:return (None, numpy.inf)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:bestScore = numpy.inf","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:maturedFlags = numpy.array(maturedFlags)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if numMatured >= self._hsObj._minParticlesPerSwarm \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:errScores = numpy.array(errScores)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:numPsPerGen = numpy.array(numPsPerGen)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:firstNonFull = numpy.where(numPsPerGen < minNumParticles)[0]","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:if resultErr == numpy.inf:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:self._rng = random.Random()","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:if isinstance(self.permuteVars[varName], PermuteChoices):","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._speculativeParticles:","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self.particleId = \"%s.%s\" % (str(self._hsObj._workerID),","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._priorStateJSON = self._hsObj._cjDAO.jobGetFields(self._hsObj._jobID,","count":8,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._fixedFields is not None:","count":6,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:print self._hsObj._fixedFields","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:for field in self._hsObj._fixedFields:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:assert encoderName in self._hsObj._encoderNames, \"The field '%s' \" \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:elif self._hsObj._searchType == HsSearchType.temporal:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:for encoderName in self._hsObj._encoderNames:","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:elif self._hsObj._searchType == HsSearchType.classification:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if encoderName == self._hsObj._predictedFieldEncoder:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:elif self._hsObj._searchType == HsSearchType.legacyTemporal:","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:swarms[self._hsObj._predictedFieldEncoder] = {","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:(self._hsObj._searchType))","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._hsObj._cjDAO.jobSetFieldIfEqual(","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._hsObj._jobID, 'engWorkerState', json.dumps(self._state), None)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._priorStateJSON = self._hsObj._cjDAO.jobGetFields(","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._hsObj._jobID, ['engWorkerState'])[0]","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:success = self._hsObj._cjDAO.jobSetFieldIfEqual(self._hsObj._jobID,","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:predictedEncoderName = self._hsObj._predictedFieldEncoder","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._hsObj._resultsDB.bestModelIdAndErrScore(swarmId)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._searchType == HsSearchType.legacyTemporal:","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._maxBranching > 0 \\","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:and len(fieldScores) > self._hsObj._maxBranching:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:baseErrScore = fieldScores[-self._hsObj._maxBranching-1][0]","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:bestErrScore = numpy.inf","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:(modelId, errScore) = self._hsObj._resultsDB.bestModelIdAndErrScore(swarmId)","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:whichIdx = numpy.array(bestErrScores).argmin()","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:sprintInfo['bestErrScore'] = numpy.inf","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:bestPrior = numpy.inf","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if i==2 and (self._hsObj._tryAll3FieldCombinations or \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._hsObj._tryAll3FieldCombinationsWTimestamps):","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if not self._hsObj._speculativeParticles:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:swarmSizes = [self._hsObj._resultsDB.getParticleInfos(swarmId,","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if len(swarm) < self._hsObj._minParticlesPerSwarm]","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:(particleState, _, _, _, _) = self._hsObj._resultsDB.getParticleInfo(","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:or self._hsObj._minFieldContribution >= 0:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._searchType == HsSearchType.temporal or \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:self._hsObj._searchType == HsSearchType.classification:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:(self._hsObj._minFieldContribution))","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if pctFieldContributions[fieldname] < self._hsObj._minFieldContribution:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._maxBranching > 0:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:sprintSwarms = sprintSwarms[0:self._hsObj._maxBranching]","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:encoderAddSet = self._hsObj._encoderNames","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if (self._hsObj._searchType == HsSearchType.temporal \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:or self._hsObj._searchType == HsSearchType.legacyTemporal) \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:and (self._hsObj._tryAll3FieldCombinations or \\","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._tryAll3FieldCombinations:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:newEncoders = set(self._hsObj._encoderNames)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:if self._hsObj._predictedFieldEncoder in newEncoders:","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:newEncoders.remove(self._hsObj._predictedFieldEncoder)","count":4,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:for encoder in self._hsObj._encoderNames:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:newSet.append(self._hsObj._predictedFieldEncoder)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:random.seed(42)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:singleton-comparison:if self._minParticlesPerSwarm  == None:","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:if isinstance(value, PermuteEncoder):","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:if isinstance(encValue, PermuteVariable):","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:elif isinstance(value, PermuteVariable):","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:if isinstance(value, PermuteVariable):","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:self._flattenedPermutations[key] = value","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:protected-access:\" \\n%s\" % (pprint.pformat(self._hsState._state, indent=4)))","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:modelId = random.choice(allModelIds)","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:swarmSizes = numpy.array([self._resultsDB.numModels(x) for x in swarmIds])","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:time.sleep(5.0 * random.random())","count":2,"result_id":2089},{"warning":"4:src\/swarming\/HypersearchV2.py:undefined-variable:time.sleep(self._speculativeWaitSecondsMax * random.random())","count":4,"result_id":2089},{"warning":"4:src\/research\/TP10X2.py:bad-super-call:return super(TP, self).__getattr__(name)","count":2,"result_id":2089},{"warning":"4:src\/research\/TP10X2.py:singleton-comparison:if s[0][1] == True:","count":2,"result_id":2089},{"warning":"4:src\/research\/TP10X2.py:singleton-comparison:assert collectActiveData == False","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:bitHistory._id = proto.id","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:statsLen = len(bitHistory._stats) - 1","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats.extend(","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats[statProto.index] = statProto.dutyCycle","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:bitHistory._lastTotalUpdate = proto.lastTotalUpdate","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:bitHistory._learnIteration = proto.learnIteration","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._learnIteration = proto.learnIteration","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._recordNumMinusLearnIteration = (","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory = deque(maxlen=max(classifier.steps) + 1)","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:learnIteration = classifier._learnIteration - len(patternNZHistoryProto) + 1","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory.append((learnIteration,","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._activeBitHistory = dict()","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._activeBitHistory[(bit, nSteps)] = bitHistory","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._maxBucketIdx = proto.maxBucketIdx","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues = []","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues.append(None)","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues.append(actValue)","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/CLAClassifier.py:protected-access:classifier._version = proto.version","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/anomaly.py:protected-access:other._mode == self._mode and","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/anomaly.py:protected-access:other._binaryThreshold == self._binaryThreshold and","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/anomaly.py:protected-access:other._movingAverage == self._movingAverage and","count":2,"result_id":2089},{"warning":"4:src\/algorithms\/anomaly.py:protected-access:other._likelihood == self._likelihood)","count":2,"result_id":2089},{"warning":"4:src\/data\/stats.py:dangerous-default-value:def getStatsFilename(filename, statsInfo, filters=[]):","count":2,"result_id":2089},{"warning":"4:src\/data\/stats.py:dangerous-default-value:def generateStats(filename, statsInfo, maxSamples = None, filters=[], cache=True):","count":2,"result_id":2089},{"warning":"4:src\/data\/dictutils.py:no-value-for-parameter:resultDict['inAButNotInB'] = set(da) - set(db)","count":8,"result_id":2089},{"warning":"4:src\/data\/dictutils.py:no-value-for-parameter:resultDict['inBButNotInA'] = set(db) - set(da)","count":8,"result_id":2089},{"warning":"4:src\/data\/dictutils.py:no-value-for-parameter:for key in (set(da) - resultDict['inAButNotInB']):","count":4,"result_id":2089},{"warning":"4:src\/research\/TP.py:undefined-variable:diff.append((keys + (k,), d[k], None))","count":2,"result_id":2089},{"warning":"4:src\/research\/TP.py:protected-access:seg._lastPosDutyCycle, seg._lastPosDutyCycleIteration]]","count":4,"result_id":2089},{"warning":"4:src\/research\/TP.py:dangerous-default-value:def __init__(self, c, i, seg=None, activeSynapses=[]):","count":2,"result_id":2089},{"warning":"4:src\/data\/joiner.py:singleton-comparison:if recordsDict == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/filters.py:undefined-variable:if interval is not None:","count":2,"result_id":2089},{"warning":"4:src\/data\/filters.py:undefined-variable:s = \"autoreset_%d_%d\" % (interval.days, interval.seconds)","count":4,"result_id":2089},{"warning":"4:src\/data\/aggregator.py:singleton-comparison:if fieldFilter == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/aggregator.py:singleton-comparison:if aggrMean == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/aggregator.py:singleton-comparison:if self._firstSequenceStartTime == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/record_stream.py:singleton-comparison:if stats == None:","count":4,"result_id":2089},{"warning":"4:src\/data\/record_stream.py:singleton-comparison:if minValues == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/record_stream.py:singleton-comparison:if maxValues == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/anomalyzer.py:eval-used:valueType = eval(reader.fields[column][1])","count":4,"result_id":2089},{"warning":"4:src\/data\/generators\/sequence_machine.py:singleton-comparison:if number == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/sequence_machine.py:singleton-comparison:if pattern == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/file_record_stream.py:singleton-comparison:if self._stats == None:","count":2,"result_id":2089},{"warning":"4:src\/data\/file_record_stream.py:singleton-comparison:if self._stats['max'][i] == None or \\","count":2,"result_id":2089},{"warning":"4:src\/data\/file_record_stream.py:singleton-comparison:if self._stats['min'][i] == None or \\","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/distributions.py:dangerous-default-value:def __init__(self, params={}):","count":6,"result_id":2089},{"warning":"4:src\/data\/generators\/distributions.py:arguments-differ:def getData(self):","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/data_generator.py:undefined-variable:np.random.seed(seed)","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/data_generator.py:eval-used:dataClass=eval(dataClassName)(fieldParams)","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/data_generator.py:undefined-variable:encoding = np.concatenate([field.encoder.encode(SENTINEL_VALUE_FOR_MISSING_DATA)\\","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/data_generator.py:undefined-variable:encoding = np.concatenate([field.encodings[n] for field in self.fields])","count":2,"result_id":2089},{"warning":"4:src\/data\/generators\/data_generator.py:undefined-variable:encodedValue = np.array(self.encoder.encode(value), dtype=realDType)","count":2,"result_id":2089},{"warning":"4:src\/engine\/common_networks\/__init__.py:dangerous-default-value:def createTemporalAnomaly(recordParams, spatialParams=_SP_PARAMS,","count":4,"result_id":2089},{"warning":"4:src\/engine\/__init__.py:exec-used:exec('from %s import %s as %s' % (engine.__name__, a, a))","count":2,"result_id":2089},{"warning":"4:src\/engine\/__init__.py:protected-access:return self._dtype","count":2,"result_id":2089},{"warning":"4:src\/engine\/__init__.py:protected-access:a._dtype = basicTypes[index]","count":2,"result_id":2089},{"warning":"4:src\/engine\/__init__.py:protected-access:return self._region == other._region","count":2,"result_id":2089},{"warning":"4:src\/image\/__init__.py:undefined-variable:header = cv.CreateImageHeader(cv.Size(result.shape[1], result.shape[0]),","count":4,"result_id":2089},{"warning":"4:src\/image\/__init__.py:undefined-variable:cv.Smooth(header1, header, cv.GAUSSIAN, length, length, sigma)","count":6,"result_id":2089},{"warning":"4:src\/database\/Connection.py:protected-access:self._conn._ping_check()","count":2,"result_id":2089},{"warning":"4:src\/encoders\/random_distributed_scalar.py:protected-access:encoder._offset = proto.offset","count":2,"result_id":2089},{"warning":"4:src\/encoders\/random_distributed_scalar.py:protected-access:encoder._maxBuckets = INITIAL_BUCKETS","count":2,"result_id":2089},{"warning":"4:src\/encoders\/adaptivescalar.py:singleton-comparison:if fieldStats[fieldName]['min'] == None or \\","count":2,"result_id":2089},{"warning":"4:src\/encoders\/adaptivescalar.py:singleton-comparison:fieldStats[fieldName]['max'] == None:","count":2,"result_id":2089},{"warning":"4:src\/encoders\/adaptivescalar.py:undefined-variable:return [EncoderResult(value=0, scalar=0,","count":4,"result_id":2089},{"warning":"4:src\/encoders\/adaptivescalar.py:undefined-variable:encoding=numpy.zeros(self.n))]","count":4,"result_id":2089},{"warning":"4:src\/encoders\/category.py:protected-access:encoder._topDownMappingM = None","count":2,"result_id":2089},{"warning":"4:src\/encoders\/category.py:protected-access:encoder._bucketValues = None","count":2,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:singleton-comparison:if self._prevAbsolute==None:","count":2,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:singleton-comparison:if self._prevAbsolute==None or self._prevDelta==None:","count":4,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:undefined-variable:encoding=numpy.zeros(self.n))]","count":2,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:protected-access:encoder._adaptiveScalarEnc = (","count":2,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:protected-access:encoder._prevAbsolute = proto.prevAbsolute","count":2,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:protected-access:encoder._prevDelta = proto.prevDelta","count":2,"result_id":2089},{"warning":"4:src\/encoders\/delta.py:protected-access:encoder._stateLock = proto.stateLock","count":2,"result_id":2089},{"warning":"4:src\/encoders\/multi.py:eval-used:self.addEncoder(fieldName, eval(encoderName)(**fieldParams))","count":2,"result_id":2089},{"warning":"4:src\/encoders\/pass_through_encoder.py:undefined-variable:return [EncoderResult(value=0, scalar=0, encoding=numpy.zeros(self.n))]","count":2,"result_id":2089},{"warning":"4:src\/encoders\/pass_through_encoder.py:undefined-variable:return EncoderResult(value=0, scalar=0,","count":2,"result_id":2089},{"warning":"4:src\/encoders\/sdrcategory.py:undefined-variable:self.random = NupicRandom(randomState.randint(sys.maxint))","count":2,"result_id":2089},{"warning":"4:src\/encoders\/sdrcategory.py:protected-access:encoder._learningEnabled = False","count":2,"result_id":2089},{"warning":"4:src\/encoders\/sdrcategory.py:protected-access:encoder._initOverlap()","count":2,"result_id":2089},{"warning":"4:src\/encoders\/logenc.py:protected-access:encoder._bucketValues = None","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:bad-super-call:super(PyRegion, self).__init__(**kwargs)","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogInput = None","count":4,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogOutput = None","count":4,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogOutputDense = None","count":4,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:bad-super-call:return super(PyRegion, self).getParameter(parameterName, index)","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:if self.ephemeral._fpLogInput:","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogInput.close()","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogInput = open(self.ephemeral.logPathInput, 'w')","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:if self.ephemeral._fpLogOutput:","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogOutput.close()","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogOutput = open(self.ephemeral.logPathOutput, 'w')","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:if self.ephemeral._fpLogOutputDense:","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogOutputDense.close()","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:protected-access:self.ephemeral._fpLogOutputDense = open(self.ephemeral.logPathOutputDense, 'w')","count":2,"result_id":2089},{"warning":"4:src\/regions\/TestRegion.py:used-before-assignment:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"4:src\/database\/ClientJobsDAO.py:protected-access:super(ClientJobsDAO._JobsTableInfo, self).__init__()","count":2,"result_id":2089},{"warning":"4:src\/database\/ClientJobsDAO.py:protected-access:super(ClientJobsDAO._ModelsTableInfo, self).__init__()","count":2,"result_id":2089},{"warning":"4:src\/database\/ClientJobsDAO.py:dangerous-default-value:def getActiveJobsForClientInfo(self, clientInfo, fields=[]):","count":2,"result_id":2089},{"warning":"4:src\/database\/ClientJobsDAO.py:dangerous-default-value:def getActiveJobsForClientKey(self, clientKey, fields=[]):","count":2,"result_id":2089},{"warning":"4:src\/database\/ClientJobsDAO.py:dangerous-default-value:def getJobs(self, fields=[]):","count":2,"result_id":2089},{"warning":"4:src\/database\/ClientJobsDAO.py:dangerous-default-value:def getFieldsForActiveJobsOfType(self, jobType, fields=[]):","count":2,"result_id":2089},{"warning":"4:src\/regions\/SPRegion.py:dangerous-default-value:def _buildArgs(f, self=None, kwargs={}):","count":2,"result_id":2089},{"warning":"4:src\/regions\/SPRegion.py:dangerous-default-value:def _getAdditionalSpecs(spatialImp, kwargs={}):","count":2,"result_id":2089},{"warning":"4:src\/regions\/SPRegion.py:used-before-assignment:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"4:src\/regions\/RecordSensor.py:singleton-comparison:if self.encoder == None:","count":6,"result_id":2089},{"warning":"4:src\/regions\/KNNAnomalyClassifierRegion.py:protected-access:knn = self._knnclassifier._knn","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNAnomalyClassifierRegion.py:protected-access:nProtos = self._knnclassifier._knn._numPatterns","count":8,"result_id":2089},{"warning":"4:src\/regions\/KNNAnomalyClassifierRegion.py:protected-access:self._knnclassifier._knn.removeIds(idsToDelete)","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNAnomalyClassifierRegion.py:protected-access:assert self._knnclassifier._knn._numPatterns == nProtos - len(idsToDelete)","count":8,"result_id":2089},{"warning":"4:src\/regions\/KNNAnomalyClassifierRegion.py:protected-access:self._knnclassifier._knn.removeIds(idsToDelete.tolist())","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:if self._knn._categoryList:","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return int(max(self._knn._categoryList)+1)","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return len(set(self._knn._categoryList))","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:if self._knn._M is not None:","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return self._knn._M","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return self._knn._Memory","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return self._knn._numPatterns","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return self._knn._categoryRecencyList","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:undefined-variable:self._samples = numpy.zeros((0, len(inputVector)), dtype=RealNumpyDType)","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:singleton-comparison:if self._justUseAuxiliary == True:","count":4,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:singleton-comparison:if self._useAuxiliary==True:","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:return self._knn._categoryList","count":2,"result_id":2089},{"warning":"4:src\/regions\/KNNClassifierRegion.py:protected-access:if self._knn._partitionIdArray is not None:","count":2,"result_id":2089},{"warning":"4:src\/regions\/CLAClassifierRegion.py:eval-used:self.stepsList = eval(\"[%s]\" % (steps))","count":2,"result_id":2089},{"warning":"4:src\/regions\/TPRegion.py:dangerous-default-value:def _buildArgs(f, self=None, kwargs={}):","count":2,"result_id":2089},{"warning":"4:src\/regions\/TPRegion.py:dangerous-default-value:def _getAdditionalSpecs(temporalImp, kwargs={}):","count":2,"result_id":2089},{"warning":"4:src\/regions\/TPRegion.py:used-before-assignment:import dbgp.client; dbgp.client.brk()","count":2,"result_id":2089},{"warning":"4:src\/regions\/SVMClassifierNode.py:singleton-comparison:if self._justUseAuxiliary == True:","count":4,"result_id":2089},{"warning":"4:src\/regions\/SVMClassifierNode.py:singleton-comparison:if self._auxInputLen == None:","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensor.py:dangerous-default-value:def _init(self, width=1, height=1, depth=1, mode='gray',","count":4,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:dangerous-default-value:def __init__(self,","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:undefined-variable:orientations = numpy.array(range(orientationCount), dtype=RealNumpyDType) * \\","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:undefined-variable:suppressTerm = (radialDist < distThresh).astype(RealNumpyDType)","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:undefined-variable:dtype=RealNumpyDType)))","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/Rotation2D.py:dangerous-default-value:def __init__(self, angles=[0], expand=False, targetRatio=None,","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:imgDir, imgName = os.path.split(imagePath)","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:match = re.match(r\"^(?P<mnemonic>[a-z]+)\\.(?P<videoID>[0-9]{4})_sequence(?P<seqID>\\-?[0-9]{1,5})$\", imgPrefix)","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:match = re.match(r\"^vid(?P<videoID>[0-9]{4})_seq(?P<seqID>\\-?[0-9]{3,4})$\", imgPrefix)","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:w=ones(window_len,'d')","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/BoxFixer.py:eval-used:w=eval('numpy.'+window+'(window_len)')","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"%s = keywds.pop('%s', None)\" % (paramName, paramName))","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:eval-used:if eval(paramName) is None:","count":6,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"%s = paramValue\" % paramName)","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:used-before-assignment:if edgeMode is None:","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:eval-used:self._validate(paramName, eval(paramName))","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"self._%s = %s\" % (internalName, paramName))","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"%s = defValue\" % paramName)","count":4,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:bad-format-character:raise RuntimeError(\"Value error: '%s' must be one of %; your value: %s\" % \\","count":10,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:eval-used:return eval(\"self._%s\" % parameterName)","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:unsubscriptable-object:return self._inputPyramidTopology[0]['numNodes'][0]","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:unsubscriptable-object:return self._inputPyramidTopology[0]['numNodes'][1]","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"self._%s = parameterValue\" % parameterName)","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"self._%s = paramValue\" % paramName)","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:exec-used:exec(\"import %s\" % dottedPath)","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:eval-used:libPath = eval(\"%s.__file__\" % dottedPath)","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:unsubscriptable-object:nCols, nRows = self._outputPyramidTopology[scaleIndex]['numNodes']","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:not-an-iterable:for lvl in self._inputPyramidTopology])","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:ns = Spec(description = cls.__doc__,","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:bottomUpIn=InputSpec(","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:validRegionIn=InputSpec(","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:validAlphaIn=InputSpec(","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:bottomUpOut=OutputSpec(","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:topDownOut=OutputSpec(","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:filterDim=ParameterSpec(dataType='int', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:numOrientations=ParameterSpec(dataType='int', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:phaseMode=ParameterSpec(dataType='str', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:centerSurround=ParameterSpec(dataType='int', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:targetType=ParameterSpec(dataType='str', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:gainConstant=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:normalizationMethod=ParameterSpec(dataType='str', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:perPlaneNormalization=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:perPhaseNormalization=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:postProcessingMethod=ParameterSpec(dataType='str', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:postProcessingSlope=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:postProcessingCenter=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:postProcessingMin=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:postProcessingMax=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:zeroThresholdOut=ParameterSpec(dataType='float', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:boundaryMode=ParameterSpec(dataType='str', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:offImagePixelValue=ParameterSpec(dataType=\"str\", accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:suppressOutsideBox=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:forceBoxContraction=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:suppressByAlpha=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:logPrefix=ParameterSpec(dataType='str', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:maxTopDownOut=ParameterSpec(dataType='float', accessMode='Read', count=0,","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_aspectRatio=ParameterSpec(dataType='float', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_effectiveWidth=ParameterSpec(dataType='float', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_wavelength=ParameterSpec(dataType='float', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_lobeSuppression=ParameterSpec(dataType='int', accessMode='Create',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_debugLogBuffers=ParameterSpec(dataType='int', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_width=ParameterSpec(dataType=\"int\", accessMode='Read',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_height=ParameterSpec(dataType=\"int\", accessMode='Read',","count":2,"result_id":2089},{"warning":"4:src\/regions\/extra\/GaborNode2.py:undefined-variable:nta_morphologyMethod=ParameterSpec(dataType='str', accessMode='ReadWrite',","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/GaborConvolution.py:dangerous-default-value:def __init__(self,","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/Convolution.py:dangerous-default-value:def __init__(self,","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/Tracking.py:eval-used:self._resizingFilter = eval(\"Image.%s\" % qualityLevel.upper())","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/Tracking.py:eval-used:bbox = eval(bbox)","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:dangerous-default-value:def __init__(self, scales=[1], background=0, simultaneous=False):","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorFilters\/MultipleScales.py:dangerous-default-value:def __init__(self, scales=[1], simultaneous=False):","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/RandomSweep.py:dangerous-default-value:def __init__(self, sweepDirections=['left', 'right', 'up', 'down'],","count":2,"result_id":2089},{"warning":"4:src\/regions\/RecordSensorFilters\/ModifyFields.py:dangerous-default-value:def __init__(self, fields=[], operation='setToZero', seed=-1):","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:dangerous-default-value:def __init__(self, sweepDirections=[\"right\", \"down\"], shiftDuringSweep=1,","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:claModel._getSPRegion().setParameter('learningMode', True)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:claModel._getSPRegion().setParameter('learningMode', False)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:claModel._getTPRegion().setParameter('learningMode', True)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:claModel._getTPRegion().setParameter('learningMode', False)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:spRegion = claModel._getSPRegion().getSelf()","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:sfdr = spRegion._sfdr","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:initArgsDict = sfdr._initArgsDict","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:tpRegion = claModel._getTPRegion().getSelf()","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:tfdr = tpRegion._tfdr","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodelcallbacks.py:protected-access:initArgsDict = tfdr._initArgsDict","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/opftaskdriver.py:protected-access:self.__phases = tuple(map(lambda x: x._getImpl(model=model),","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:if type(d['name']) is int and d['name'] not in filters:","count":4,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/MultiSweep.py:undefined-variable:+ str(keywds.keys()))","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:if d['probability'] is not None:","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:cumulativeProbability += d['probability']","count":2,"result_id":2089},{"warning":"4:src\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:if d['probability'] is None:","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/previousvaluemodel.py:dangerous-default-value:def __init__(self, inferenceType=InferenceType.TemporalNextStep,","count":6,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/previousvaluemodel.py:unexpected-special-method-signature:def __setstate__(self):","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/predictionmetricsmanager.py:protected-access:assert mgr._getGroundTruth(InferenceElement.multiStepPredictions)[0] == gt","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/predictionmetricsmanager.py:protected-access:assert mgr._getInference(InferenceElement.multiStepPredictions)[1] is None","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/predictionmetricsmanager.py:protected-access:prediction = mgr._getInference(InferenceElement.multiStepPredictions)[1]","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/predictionmetricsmanager.py:protected-access:inference = mgr._getInference(InferenceElement.multiStepPredictions)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/predictionmetricsmanager.py:protected-access:prediction = mgr._getInference(InferenceElement.multiStepPredictions)[3]","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/model.py:protected-access:model._deSerializeExtraData(","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/two_gram_model.py:unexpected-special-method-signature:def __setstate__(self):","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/experiment_runner.py:protected-access:self.__taskRunner._getAndEmitExperimentMetrics()","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/periodic.py:dangerous-default-value:def __init__(self, requestedActivities=[]):","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/opfhelpers.py:undefined-variable:(descriptionPyPath, name))","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/opfbasicenvironment.py:singleton-comparison:if row == None:","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/opfbasicenvironment.py:arguments-differ:def append(self, modelResult):","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:dangerous-default-value:def __init__(self, clamodel, anomalyParams={}):","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:self.clamodel._getSPRegion().getSelf().getParameter('numActiveColumnsPerInhArea')","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:classifier = self.clamodel._getAnomalyClassifier()","count":10,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:knn = classifier.getSelf()._knn","count":10,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:categories = knn._categoryList","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:nProtos = knn._numPatterns","count":4,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:assert knn._numPatterns == nProtos - len(idsToDelete)","count":4,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:sp = model._getSPRegion()","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:tp = model._getTPRegion()","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:tpImp = tp.getSelf()._tfdr","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:undefined-variable:return MetricMultiStepAAE(metricSpec)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:undefined-variable:return MetricMultiStepAveError(metricSpec)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:no-value-for-parameter:return MetricMulti(metricSpec)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:not-callable:error = sandbox(expr)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:exec-used:exec(metricSpec.params[\"customFuncSource\"])","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:singleton-comparison:if groundTruth.any() == False:","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/metrics.py:singleton-comparison:if prevGTKey == None:","count":2,"result_id":2089},{"warning":"4:src\/support\/exceptions.py:undefined-variable:super(JobFatalException, self).__init__(errorCode, msg)","count":2,"result_id":2089},{"warning":"4:src\/support\/__init__.py:protected-access:f = sys._getframe(depth)","count":2,"result_id":2089},{"warning":"4:src\/support\/__init__.py:protected-access:for handler in logging._handlerList:","count":2,"result_id":2089},{"warning":"4:src\/support\/enum.py:protected-access:return cls.__labels[val]","count":2,"result_id":2089},{"warning":"4:src\/support\/enum.py:protected-access:return val in cls.__values","count":2,"result_id":2089},{"warning":"4:src\/support\/enum.py:protected-access:return list(cls.__values)","count":2,"result_id":2089},{"warning":"4:src\/support\/enum.py:protected-access:return list(cls.__labels.values())","count":2,"result_id":2089},{"warning":"4:src\/support\/enum.py:protected-access:newType.__labels = dict( (v,k) for k,v in kwargs.iteritems())","count":2,"result_id":2089},{"warning":"4:src\/support\/enum.py:protected-access:newType.__values = set(newType.__labels.keys())","count":4,"result_id":2089},{"warning":"4:src\/support\/configuration_custom.py:protected-access:properties = Configuration._readConfigFile(os.path.basename(","count":2,"result_id":2089},{"warning":"4:src\/support\/datafiles.py:undefined-variable:numColumns = calculateColumnsFromLine(strippedLine)","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:assert self._canAddAttributes >= 1","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:count = self._canAddAttributes","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:self._canAddAttributes = count - 1","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:assert self._canAddAttributes >= 0","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:if self._canAddAttributes == 0:","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:(hasattr(self, '_canAddAttributes') and self._canAddAttributes > 0) or","count":2,"result_id":2089},{"warning":"4:src\/support\/lockattributes.py:protected-access:return self._original_setattr(name, value)","count":2,"result_id":2089},{"warning":"4:src\/support\/unittesthelpers\/algorithm_test_helpers.py:protected-access:columnDim = pySp._columnDimensions","count":2,"result_id":2089},{"warning":"4:src\/support\/unittesthelpers\/algorithm_test_helpers.py:protected-access:inputDim = pySp._inputDimensions","count":2,"result_id":2089},{"warning":"4:src\/support\/unittesthelpers\/algorithm_test_helpers.py:protected-access:pySp._random = NupicRandom(newSeed)","count":2,"result_id":2089},{"warning":"4:src\/support\/unittesthelpers\/testcasebase.py:arguments-differ:def parse_args(self, args=None, values=None, consumeArgv=True):","count":2,"result_id":2089},{"warning":"4:src\/math\/stats.py:undefined-variable:dtype = GetNTAReal()","count":2,"result_id":2089},{"warning":"4:src\/math\/stats.py:undefined-variable:self.hist_ = SparseMatrix(rows, cols)","count":2,"result_id":2089},{"warning":"4:src\/math\/stats.py:undefined-variable:self.hack_ = SparseMatrix(0, self.hist_.nCols())","count":2,"result_id":2089},{"warning":"4:src\/math\/stats.py:undefined-variable:dMeans = [min(samples)+0.01 , mean(samples) ,max(samples)-0.01]","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:def logit(p): return numpy.log(p \/ (1.0 - p))","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:o = numpy.exp(lo)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:return (current, numpy.log(kernelForward), numpy.log(kernelBackward))","count":4,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:return (proposed, (logForward + numpy.log(1.0 - kernelForward)),","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:(logBackward + numpy.log(1.0 - kernelBackward)))","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:self.logp = -numpy.log(nKeys-1)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:logKernel = numpy.log(self.kernel)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:logKernel = numpy.log(1.0 - self.kernel)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:def __init__(self, scale, minVal=-numpy.inf, maxVal=numpy.inf):","count":4,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:self.dist = PoissonDistribution(scale)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:log2 = numpy.log(2) # The half chance we went up, rather than down.","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:logForward = logProb - numpy.log(cdf) - log2","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:logBackward = rlp - numpy.log(rcdf) - log2","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:x, logProb = PoissonDistribution(curLambda).sample(r)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:logBackward = PoissonDistribution(x+self.offset).logDensity(current)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:self.dist = NormalDistribution(0, sd)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:dist = LogNormalDistribution(numpy.log(current), self.sd)","count":4,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:dist.setNormalMean(numpy.log(x))","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:fdist = GammaDistribution(self.shape, forwardScale)","count":2,"result_id":2089},{"warning":"4:src\/math\/proposal.py:undefined-variable:bdist = GammaDistribution(self.shape, backwardScale)","count":2,"result_id":2089},{"warning":"4:src\/math\/mvn.py:undefined-variable:return bits","count":2,"result_id":2089},{"warning":"4:src\/math\/mvn.py:undefined-variable:return getDistribution(given).logDensity(x)","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:if self._getAnomalyClassifier() is None:","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:dangerous-default-value:def __init__(self,","count":8,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:tpOutput = tp.getSelf()._tfdr.infActiveState['t']","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:trainRecords=self._classifier_helper._autoDetectWaitRecords,","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:cacheSize=self._classifier_helper._history_length,","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:self._getAnomalyClassifier().getSelf()._iteration = self.__numRunCalls","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:self._getAnomalyClassifier().getSelf()._recordsCache = (","count":2,"result_id":2089},{"warning":"4:src\/frameworks\/opf\/clamodel.py:protected-access:self._getAnomalyClassifier().getSelf()._knnclassifier = knnRegion","count":2,"result_id":2089},{"warning":"4:nupic\/swarming\/object_json.py:eval-used:return eval(obj[Types.DATETIME])","count":1,"result_id":2088},{"warning":"4:nupic\/swarming\/object_json.py:eval-used:return eval(obj[Types.REPR], {module: __import__(module)})","count":1,"result_id":2088},{"warning":"4:nupic\/swarming\/hypersearch\/utils.py:dangerous-default-value:def _matchReportKeys(reportKeyREs=[], allReportKeys=[]):","count":2,"result_id":2088},{"warning":"4:nupic\/swarming\/hypersearch\/utils.py:undefined-variable:raise _BadOptimizeKeyError(optimizeKey, matchingKeys)","count":1,"result_id":2088},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:assignment-from-no-return:filesDescription = _generateExperiment(args, outDir, hsVersion=hsVersion,","count":1,"result_id":2088},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:singleton-comparison:if not options[\"customErrorMetric\"] == None :","count":1,"result_id":2088},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:undefined-variable:for propertyName in _metricSpecSchema['properties'].keys():","count":1,"result_id":2088},{"warning":"4:nupic\/swarming\/exp_generator\/ExpGenerator.py:undefined-variable:_getPropertyValue(_metricSpecSchema, propertyName, metric)","count":1,"result_id":2088},{"warning":"4:nupic\/research\/connections.py:protected-access:otherSynapseSet = other._synapseSetForSynapses(","count":2,"result_id":2088},{"warning":"4:nupic\/research\/temporal_memory.py:protected-access:tm._random = Random()","count":1,"result_id":2088},{"warning":"4:nupic\/research\/temporal_memory.py:protected-access:tm._random.read(proto.random)","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._id = proto.id","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:statsLen = len(bitHistory._stats) - 1","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats.extend(","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._stats[statProto.index] = statProto.dutyCycle","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._lastTotalUpdate = proto.lastTotalUpdate","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:bitHistory._learnIteration = proto.learnIteration","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._learnIteration = proto.learnIteration","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._recordNumMinusLearnIteration = (","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory = deque(maxlen=max(classifier.steps) + 1)","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:learnIteration = classifier._learnIteration - len(patternNZHistoryProto) + 1","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._patternNZHistory.append((learnIteration,","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._activeBitHistory = dict()","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._activeBitHistory[(bit, nSteps)] = bitHistory","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._maxBucketIdx = proto.maxBucketIdx","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues = []","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues.append(None)","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._actualValues.append(actValue)","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/CLAClassifier.py:protected-access:classifier._version = proto.version","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._mode == self._mode and","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._binaryThreshold == self._binaryThreshold and","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._movingAverage == self._movingAverage and","count":1,"result_id":2088},{"warning":"4:nupic\/algorithms\/anomaly.py:protected-access:other._likelihood == self._likelihood)","count":1,"result_id":2088},{"warning":"4:nupic\/data\/generators\/anomalyzer.py:eval-used:valueType = eval(reader.fields[column][1])","count":2,"result_id":2088},{"warning":"4:nupic\/data\/generators\/sequence_machine.py:singleton-comparison:if number == None:","count":1,"result_id":2088},{"warning":"4:nupic\/data\/generators\/sequence_machine.py:singleton-comparison:if pattern == None:","count":1,"result_id":2088},{"warning":"4:nupic\/data\/generators\/distributions.py:dangerous-default-value:def __init__(self, params={}):","count":3,"result_id":2088},{"warning":"4:nupic\/data\/generators\/distributions.py:arguments-differ:def getData(self):","count":1,"result_id":2088},{"warning":"4:nupic\/data\/generators\/data_generator.py:no-name-in-module:from nupic.bindings.math import GetNTAReal","count":1,"result_id":2088},{"warning":"4:nupic\/data\/generators\/data_generator.py:eval-used:dataClass=eval(dataClassName)(fieldParams)","count":1,"result_id":2088},{"warning":"4:nupic\/engine\/common_networks\/__init__.py:dangerous-default-value:def createTemporalAnomaly(recordParams, spatialParams=_SP_PARAMS,","count":2,"result_id":2088},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:no-name-in-module:from nupic.bindings.math import Random as NupicRandom","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:protected-access:encoder._offset = proto.offset","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/random_distributed_scalar.py:protected-access:encoder._maxBuckets = INITIAL_BUCKETS","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/category.py:protected-access:encoder._topDownMappingM = None","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/category.py:protected-access:encoder._bucketValues = None","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/pass_through_encoder.py:undefined-variable:return [EncoderResult(value=0, scalar=0, encoding=numpy.zeros(self.n))]","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._adaptiveScalarEnc = (","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._prevAbsolute = proto.prevAbsolute","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._prevDelta = proto.prevDelta","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/delta.py:protected-access:encoder._stateLock = proto.stateLock","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/scalarspace.py:abstract-method:class ScalarSpaceEncoder(Encoder):","count":2,"result_id":2088},{"warning":"4:nupic\/encoders\/sdrcategory.py:no-name-in-module:from nupic.bindings.math import SM32, GetNTAReal, Random as NupicRandom","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/sdrcategory.py:undefined-variable:self.random = NupicRandom(randomState.randint(sys.maxint))","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/sdrcategory.py:protected-access:encoder._learningEnabled = False","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/sdrcategory.py:protected-access:encoder._initOverlap()","count":1,"result_id":2088},{"warning":"4:nupic\/encoders\/logenc.py:protected-access:encoder._bucketValues = None","count":1,"result_id":2088},{"warning":"4:nupic\/frameworks\/opf\/metrics.py:no-value-for-parameter:return MetricMulti(metricSpec)","count":1,"result_id":2088},{"warning":"4:nupic\/frameworks\/opf\/clamodel_classifier_helper.py:protected-access:self.clamodel._getSPRegion().getSelf().getParameter('numActiveColumnsPerInhArea')","count":1,"result_id":2088},{"warning":"4:src\/nupic\/image\/__init__.py:undefined-variable:header = cv.CreateImageHeader(cv.Size(result.shape[1], result.shape[0]),","count":38,"result_id":2069},{"warning":"4:src\/nupic\/image\/__init__.py:undefined-variable:cv.Smooth(header1, header, cv.GAUSSIAN, length, length, sigma)","count":57,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/inward.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/random1DOF.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/rotate.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/HorizontalBlock.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/blockSpread.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/block1DOF.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/rotate_block.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/random.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/block.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/PictureSensorExplorers\/center.py:no-name-in-module:from nupic.regions.PictureSensor import PictureSensor","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensor.py:no-name-in-module:from nupic.bindings.math import GetNTAReal","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensor.py:dangerous-default-value:def _init(self, width=1, height=1, depth=1, mode='gray',","count":38,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:dangerous-default-value:def __init__(self,","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:undefined-variable:orientations = numpy.array(range(orientationCount), dtype=RealNumpyDType) * \\","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:undefined-variable:suppressTerm = (radialDist < distThresh).astype(RealNumpyDType)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/CenterSurroundConvolution.py:undefined-variable:dtype=RealNumpyDType)))","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/Rotation2D.py:dangerous-default-value:def __init__(self, angles=[0], expand=False, targetRatio=None,","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:no-name-in-module:from nupic.bindings.algorithms import (Float32SeparableConvolution2D,","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:imgDir, imgName = os.path.split(imagePath)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:match = re.match(r\"^(?P<mnemonic>[a-z]+)\\.(?P<videoID>[0-9]{4})_sequence(?P<seqID>\\-?[0-9]{1,5})$\", imgPrefix)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:match = re.match(r\"^vid(?P<videoID>[0-9]{4})_seq(?P<seqID>\\-?[0-9]{3,4})$\", imgPrefix)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:undefined-variable:w=ones(window_len,'d')","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:eval-used:w=eval('numpy.'+window+'(window_len)')","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/AddBackgroundImage.py:no-name-in-module:from nupic.frameworks.vision2 import VisionUtils","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"%s = keywds.pop('%s', None)\" % (paramName, paramName))","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:eval-used:if eval(paramName) is None:","count":57,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"%s = paramValue\" % paramName)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:used-before-assignment:if edgeMode is None:","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:eval-used:self._validate(paramName, eval(paramName))","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"self._%s = %s\" % (internalName, paramName))","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"%s = defValue\" % paramName)","count":38,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:bad-format-character:raise RuntimeError(\"Value error: '%s' must be one of %; your value: %s\" % \\","count":95,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:eval-used:return eval(\"self._%s\" % parameterName)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:unsubscriptable-object:return self._inputPyramidTopology[0]['numNodes'][0]","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:unsubscriptable-object:return self._inputPyramidTopology[0]['numNodes'][1]","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"self._%s = parameterValue\" % parameterName)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"self._%s = paramValue\" % paramName)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:exec-used:exec(\"import %s\" % dottedPath)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:eval-used:libPath = eval(\"%s.__file__\" % dottedPath)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:unsubscriptable-object:nCols, nRows = self._outputPyramidTopology[scaleIndex]['numNodes']","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:not-an-iterable:for lvl in self._inputPyramidTopology])","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/extra\/GaborNode2.py:no-name-in-module:from nupic.bindings.algorithms import Float32Erosion","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:dangerous-default-value:def __init__(self,","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:eval-used:self._resizingFilter = eval(\"Image.%s\" % qualityLevel.upper())","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/Tracking.py:eval-used:bbox = eval(bbox)","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/GaborConvolution.py:dangerous-default-value:def __init__(self,","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:dangerous-default-value:def __init__(self, scales=[1], background=0, simultaneous=False):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorFilters\/MultipleScales.py:dangerous-default-value:def __init__(self, scales=[1], simultaneous=False):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/RandomJump.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/OnionSweep.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/RandomEyeMovements.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/EyeMovements.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:dangerous-default-value:def __init__(self, sweepDirections=['left', 'right', 'up', 'down'],","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/RandomSweep.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/InwardSweep.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/ManualSaliency.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/OnionBlock.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:dangerous-default-value:def __init__(self, sweepDirections=[\"right\", \"down\"], shiftDuringSweep=1,","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/ExhaustiveSweep.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:arguments-differ:def first(self):","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:if type(d['name']) is int and d['name'] not in filters:","count":38,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:undefined-variable:+ str(keywds.keys()))","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:if d['probability'] is not None:","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:cumulativeProbability += d['probability']","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/ImageSensorExplorers\/MultiSweep.py:invalid-sequence-index:if d['probability'] is None:","count":19,"result_id":2069},{"warning":"4:src\/nupic\/regions\/TestNode.py:no-name-in-module:from nupic.proto.TestNodeProto_capnp import TestNodeProto","count":13,"result_id":2040},{"warning":"4:src\/nupic\/engine\/__init__.py:no-name-in-module:from nupic.analysis import inspect","count":64,"result_id":2024},{"warning":"4:src\/nupic\/regions\/CLAClassifierRegion.py:protected-access:instance._claClassifier = CLAClassifierFactory.read(regionImpl)","count":11,"result_id":1991},{"warning":"4:src\/nupic\/regions\/SPRegion.py:protected-access:instance._sfdr = PYSpatialPooler.read(regionImpl.spatialPooler)","count":8,"result_id":1991},{"warning":"4:src\/nupic\/regions\/SPRegion.py:protected-access:instance._sfdr = CPPSpatialPooler()","count":8,"result_id":1991},{"warning":"4:src\/nupic\/regions\/SPRegion.py:protected-access:instance._sfdr.read(regionImpl.spatialPooler)","count":8,"result_id":1991},{"warning":"4:src\/nupic\/regions\/KNNClassifierRegion.py:protected-access:if self._knn._partitionIdArray is not None:","count":98,"result_id":1990},{"warning":"4:src\/nupic\/research\/fast_temporal_memory.py:no-name-in-module:from nupic.bindings.algorithms import Connections, ConnectionsCell","count":146,"result_id":1942}],"16":[{"warning":"16:nupic\/research\/monitor_mixin\/temporal_memory_monitor_mixin.py:missing-final-newline:activityType, title, showReset, resetShading)","count":150,"result_id":2183},{"warning":"16:src\/research\/fdrutilities.py:unnecessary-semicolon:permanences1 = SP1._masterPermanenceM[i];","count":2,"result_id":2089},{"warning":"16:src\/research\/fdrutilities.py:unnecessary-semicolon:permanences2 = SP2._masterPermanenceM[i];","count":2,"result_id":2089},{"warning":"16:src\/research\/fdrutilities.py:unnecessary-semicolon:potential1 = SP1._masterPotentialM[i];","count":2,"result_id":2089},{"warning":"16:src\/research\/fdrutilities.py:unnecessary-semicolon:potential2 = SP2._masterPotentialM[i];","count":2,"result_id":2089},{"warning":"16:src\/algorithms\/CLAClassifier.py:unnecessary-semicolon:found = True;","count":2,"result_id":2089},{"warning":"16:src\/encoders\/sdrcategory.py:unnecessary-semicolon:break;","count":2,"result_id":2089},{"warning":"16:src\/regions\/TestNode.py:missing-final-newline:test()","count":2,"result_id":2089},{"warning":"16:src\/regions\/extra\/GaborNode2.py:unnecessary-semicolon:return 255.0;","count":2,"result_id":2089},{"warning":"16:src\/regions\/extra\/GaborNode2.py:unnecessary-semicolon:self._logDebugBuffers(outputVector, scaleIndex);","count":2,"result_id":2089},{"warning":"16:src\/regions\/extra\/GaborNode2.py:unnecessary-semicolon:buf = (self._bufferSetOut[scaleIndex][k] \/ 4096).clip(min=0, max=255);","count":2,"result_id":2089},{"warning":"16:src\/regions\/ImageSensorFilters\/LogPolar.py:unnecessary-semicolon:centerx = (xsize-1)\/2.;","count":2,"result_id":2089},{"warning":"16:src\/regions\/ImageSensorFilters\/LogPolar.py:unnecessary-semicolon:centery = (ysize-1)\/2.;","count":2,"result_id":2089},{"warning":"16:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:unnecessary-semicolon:mode = image.mode;","count":2,"result_id":2089},{"warning":"16:src\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:unnecessary-semicolon:originalSize = image.size;","count":2,"result_id":2089},{"warning":"16:src\/frameworks\/opf\/exceptions.py:missing-final-newline:pass","count":2,"result_id":2089},{"warning":"16:src\/frameworks\/opf\/opfbasicenvironment.py:unnecessary-semicolon:break;","count":2,"result_id":2089},{"warning":"16:src\/nupic\/regions\/extra\/GaborNode2.py:unnecessary-semicolon:return 255.0;","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/extra\/GaborNode2.py:unnecessary-semicolon:self._logDebugBuffers(outputVector, scaleIndex);","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/extra\/GaborNode2.py:unnecessary-semicolon:buf = (self._bufferSetOut[scaleIndex][k] \/ 4096).clip(min=0, max=255);","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:unnecessary-semicolon:centerx = (xsize-1)\/2.;","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/ImageSensorFilters\/LogPolar.py:unnecessary-semicolon:centery = (ysize-1)\/2.;","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:unnecessary-semicolon:mode = image.mode;","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/ImageSensorFilters\/CenteredMultipleScales.py:unnecessary-semicolon:originalSize = image.size;","count":19,"result_id":2069},{"warning":"16:src\/nupic\/regions\/TestNode.py:missing-final-newline:test()","count":48,"result_id":2040}],"10":[{"warning":"10:nupic\/frameworks\/opf\/experiment_runner.py:no-shebang:# ----------------------------------------------------------------------","count":169,"result_id":2151},{"warning":"10:nupic\/encoders\/multi.py:fixme:# TODO expand this docstring to explain how the multiple encoders are combined","count":275,"result_id":2091},{"warning":"10:nupic\/frameworks\/opf\/metrics.py:fixme:#FIXME @abstractmethod - this should be marked abstract method and required to be implemented","count":480,"result_id":2091},{"warning":"10:nupic\/encoders\/base.py:fixme:# TODO: (#1943) Make sure subclasses don't rely on this and remove it.","count":222,"result_id":2091},{"warning":"10:nupic\/utils.py:fixme:# TODO obsoleted by capnp, will be removed in future","count":110,"result_id":2091},{"warning":"10:nupic\/swarming\/exp_generator\/ExpGenerator.py:fixme:# TODO: remove this!","count":75,"result_id":2091},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: do we really want to set numRecords to 0? Last updated value might","count":71,"result_id":2091},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: Make sure this wasn't the best model in job. If so, set the best","count":71,"result_id":2091},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: Note the function 'rUpdate' is also duplicated in the","count":68,"result_id":2091},{"warning":"10:nupic\/data\/dictutils.py:fixme:# TODO: Note the functions 'rUpdate' are duplicated in","count":68,"result_id":2091},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: 'ValidationError', 'validate', 'loadJSONValueFromFile' duplicated in","count":66,"result_id":2091},{"warning":"10:nupic\/data\/jsonhelpers.py:fixme:# TODO: duplicate of 'validate', 'ValidationError', 'loadJSONValueFromFile'","count":66,"result_id":2091},{"warning":"10:nupic\/swarming\/hypersearch\/experimentutils.py:fixme:# TODO: This file contains duplicates of 'InferenceElement', 'InferenceType',","count":39,"result_id":2091},{"warning":"10:src\/utils.py:fixme:# TODO obsoleted by capnp, will be removed in future","count":2,"result_id":2089},{"warning":"10:src\/swarming\/api.py:fixme:# TODO: the use of opfhelpers.loadExperimentDescriptionScriptFromDir when","count":2,"result_id":2089},{"warning":"10:src\/swarming\/permutations_runner.py:fixme:# TODO flesh me out","count":2,"result_id":2089},{"warning":"10:src\/swarming\/permutations_runner.py:fixme:# TODO: update code to handle non-ronomatic search algorithms","count":2,"result_id":2089},{"warning":"10:src\/swarming\/HypersearchWorker.py:fixme:# TODO: don't increment for orphaned models","count":2,"result_id":2089},{"warning":"10:src\/swarming\/permutationhelpers.py:fixme:# TODO: figure this out","count":2,"result_id":2089},{"warning":"10:src\/swarming\/hypersearch\/experimentutils.py:fixme:# TODO: This file contains duplicates of 'InferenceElement', 'InferenceType',","count":2,"result_id":2089},{"warning":"10:src\/swarming\/ModelRunner.py:fixme:# TODO remove this when JAVA API server is gone","count":2,"result_id":2089},{"warning":"10:src\/swarming\/ModelRunner.py:fixme:# TODO cache optimizedMetricLabel sooner","count":2,"result_id":2089},{"warning":"10:src\/swarming\/ModelRunner.py:fixme:# TODO: Don't stop if we are currently the best model. Also, if we","count":2,"result_id":2089},{"warning":"10:src\/swarming\/hypersearch\/utils.py:fixme:# TODO: Note the function 'rUpdate' is also duplicated in the","count":2,"result_id":2089},{"warning":"10:src\/swarming\/hypersearch\/utils.py:fixme:# TODO: 'ValidationError', 'validate', 'loadJSONValueFromFile' duplicated in","count":2,"result_id":2089},{"warning":"10:src\/swarming\/hypersearch\/utils.py:fixme:# TODO: do we really want to set numRecords to 0? Last updated value might","count":2,"result_id":2089},{"warning":"10:src\/swarming\/hypersearch\/utils.py:fixme:# TODO: Make sure this wasn't the best model in job. If so, set the best","count":2,"result_id":2089},{"warning":"10:src\/research\/fdrutilities.py:fixme:# TODO: check confidence at T (confT)","count":4,"result_id":2089},{"warning":"10:src\/swarming\/exp_generator\/ExpGenerator.py:fixme:# TODO: remove this!","count":2,"result_id":2089},{"warning":"10:src\/research\/utils.py:fixme:# TODO: Re-purpose for use with nodes other than PMXClassifierNode.","count":2,"result_id":2089},{"warning":"10:src\/research\/fast_temporal_memory.py:fixme:# TODO: For some reason, bestSegment.cell is garbage-collected after","count":2,"result_id":2089},{"warning":"10:src\/research\/temporal_memory.py:fixme:# TODO: Validate all parameters (and add validation tests)","count":2,"result_id":2089},{"warning":"10:src\/swarming\/HypersearchV2.py:fixme:# TODO: incorporate data from choice variables....","count":2,"result_id":2089},{"warning":"10:src\/swarming\/HypersearchV2.py:fixme:# TODO: make sure we're calling this when appropriate.","count":2,"result_id":2089},{"warning":"10:src\/swarming\/HypersearchV2.py:fixme:# TODO: There is currently a problem with this filters implementation as","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:fixme:initialPerm = 0.11, # TODO: check perm numbers with Ron","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:fixme:# TODO: need to add C++ accessors to get segment details","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:fixme:# TODO: need to add C++ accessors to implement this method","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:fixme:# TODO: add C++ accessor to implement this","count":4,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:fixme:# TODO: add C++ accessor to implement this or implement our own variation","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def isSegmentActive(self, seg, timeStep):","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def getSegmentActivityLevel(self, seg, timeStep, connectedSynapsesOnly =False,","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def isSequenceSegment(self, s):","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def getBestMatchingSegment(self, c, i, timeStep, learnState = False):","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def getSegmentActiveSynapses(self, c,i,s, timeStep, newSynapses =False):","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def updateSynapse(self, segment, synapse, delta):","count":2,"result_id":2089},{"warning":"10:src\/research\/TP10X2.py:empty-docstring:def adaptSegment(self, update, positiveReinforcement):","count":2,"result_id":2089},{"warning":"10:src\/research\/spatial_pooler.py:fixme:#TODO: extend to support different number of dimensions for inputs and","count":2,"result_id":2089},{"warning":"10:src\/research\/spatial_pooler.py:fixme:# TODO: See https:\/\/github.com\/numenta\/nupic.core\/issues\/128","count":2,"result_id":2089},{"warning":"10:src\/data\/dictutils.py:fixme:# TODO: Note the functions 'rUpdate' are duplicated in","count":2,"result_id":2089},{"warning":"10:src\/research\/TP.py:fixme:# TODO: scan list of updates for that cell and consolidate?","count":2,"result_id":2089},{"warning":"10:src\/research\/TP.py:fixme:# TODO: This operation can be sped up by:","count":2,"result_id":2089},{"warning":"10:src\/research\/TP.py:fixme:# TODO: This operation can be sped up by making  activeState of","count":2,"result_id":2089},{"warning":"10:src\/research\/TP.py:fixme:# TODO: check if the situation described in the docstring above actually","count":2,"result_id":2089},{"warning":"10:src\/research\/TP.py:fixme:# TODO: Add option to check predictedState only.","count":2,"result_id":2089},{"warning":"10:src\/data\/jsonhelpers.py:fixme:# TODO: offer a combined json parsing\/validation function that applies","count":2,"result_id":2089},{"warning":"10:src\/data\/jsonhelpers.py:fixme:# TODO: duplicate of 'validate', 'ValidationError', 'loadJSONValueFromFile'","count":2,"result_id":2089},{"warning":"10:src\/data\/jsonhelpers.py:empty-docstring:def test():","count":2,"result_id":2089},{"warning":"10:src\/data\/joiner.py:fixme:# TODO Handle times smaller than a day","count":2,"result_id":2089},{"warning":"10:src\/data\/aggregator.py:fixme:# TODO: May use self._firstSequenceStartTime as a start for the new","count":2,"result_id":2089},{"warning":"10:src\/data\/stats_v2.py:fixme:# TODO: Right now, always pass the data along.","count":2,"result_id":2089},{"warning":"10:src\/data\/stats_v2.py:fixme:# TODO: handle reset field in a clean way","count":2,"result_id":2089},{"warning":"10:src\/database\/Connection.py:fixme:# TODO: this was fixed in Webware DBUtils r8228, so once","count":2,"result_id":2089},{"warning":"10:src\/encoders\/category.py:fixme:# TODO: change back to string meta-type after the decoding logic is fixed","count":2,"result_id":2089},{"warning":"10:src\/encoders\/scalar.py:fixme:output[0:self.n] = 0  #TODO: should all 1s, or random SDR be returned instead?","count":2,"result_id":2089},{"warning":"10:src\/encoders\/base.py:fixme:# TODO: (#1943) Make sure subclasses don't rely on this and remove it.","count":2,"result_id":2089},{"warning":"10:src\/encoders\/multi.py:fixme:# TODO expand this docstring to explain how the multiple encoders are combined","count":2,"result_id":2089},{"warning":"10:src\/encoders\/sdrcategory.py:fixme:# TODO: change back to string meta-type after the decoding logic is fixed","count":2,"result_id":2089},{"warning":"10:src\/regions\/TestRegion.py:fixme:# TODO: as a temporary hack, getParameterArrayCount checks to see if there's a","count":2,"result_id":2089},{"warning":"10:src\/regions\/TestRegion.py:fixme:# TODO: as a temporary hack, getParameterArray checks to see if there's a","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:# TODO: presently, no one seems to set the","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:# TODO: different semantics for results field of ProductionJob","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:# TODO: validate that the job is in the appropriate state for being","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:# TODO: when Nupic job control states get figured out, there may be a","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:# TODO: if we could be assured that the caller already verified the","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:# TODO: may need a table index on job_id\/status for speed","count":2,"result_id":2089},{"warning":"10:src\/database\/ClientJobsDAO.py:fixme:#  # TODO: This test code is out of date: e.g., at the time of this writing,","count":2,"result_id":2089},{"warning":"10:src\/regions\/SPRegion.py:fixme:# TODO: where does numberOfCols come into SPRegion?","count":2,"result_id":2089},{"warning":"10:src\/regions\/SPRegion.py:fixme:# TODO: Re-enable warning or turn into error in a future release.","count":2,"result_id":2089},{"warning":"10:src\/regions\/SPRegion.py:fixme:# TODO: as a temporary hack, getParameterArrayCount checks to see if there's a","count":2,"result_id":2089},{"warning":"10:src\/regions\/SPRegion.py:fixme:# TODO: as a temporary hack, getParameterArray checks to see if there's a","count":2,"result_id":2089},{"warning":"10:src\/regions\/SPRegion.py:empty-docstring:def initialize(self, dims, splitterMaps):","count":2,"result_id":2089},{"warning":"10:src\/regions\/RecordSensor.py:fixme:## TODO: Add temporal top-down loop","count":2,"result_id":2089},{"warning":"10:src\/regions\/RecordSensor.py:fixme:# TODO: Make sure that this doesn't modify any state","count":2,"result_id":2089},{"warning":"10:src\/regions\/TPRegion.py:fixme:# TODO: Re-enable warning or turn into error in a future release.","count":2,"result_id":2089},{"warning":"10:src\/regions\/TPRegion.py:fixme:# TODO: as a temporary hack, getParameterArrayCount checks to see if there's a variable, private or","count":2,"result_id":2089},{"warning":"10:src\/regions\/TPRegion.py:fixme:# TODO: as a temporary hack, getParameterArray checks to see if there's a variable, private or not,","count":2,"result_id":2089},{"warning":"10:src\/regions\/SVMClassifierNode.py:fixme:# TODO do this after sphering instead?","count":2,"result_id":2089},{"warning":"10:src\/regions\/SVMClassifierNode.py:fixme:# TODO custom distance norm?","count":2,"result_id":2089},{"warning":"10:src\/regions\/ImageSensor.py:fixme:# TODO change the names and indices of the loaded image?","count":2,"result_id":2089},{"warning":"10:src\/regions\/ImageSensorFilters\/BoxFixer.py:empty-docstring:def process(self, image):","count":2,"result_id":2089},{"warning":"10:src\/regions\/ImageSensorFilters\/Contrast.py:fixme:maxValue = 255 # TODO: Determine how to get maximum value __allowed__.","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/client.py:fixme:# TODO: make this work - sinkSpec not yet supported.","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/previousvaluemodel.py:fixme:# TODO: Add debugging stats.","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/model.py:fixme:# TODO Is default mode (0777) appropriate?","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/two_gram_model.py:fixme:# TODO: Add debugging stats.","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/experiment_runner.py:fixme:# TODO: should this be done in OPFTaskDriver.setup(), instead?  Is it always","count":4,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/opfutils.py:fixme:# TODO: document category","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/opfhelpers.py:fixme:# TODO: Rename as helpers.py once we're ready to replace the legacy","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/opfbasicenvironment.py:fixme:# TODO: Right now we assume list inferences are associated with","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/opfbasicenvironment.py:fixme:# TODO Is default mode (0777) appropriate?","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/opfbasicenvironment.py:empty-docstring:def _mapNumpyValues(obj):","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/expdescriptionhelpers.py:empty-docstring:def applyValueGettersToContainer(container):","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/expdescriptionhelpers.py:empty-docstring:def _applyValueGettersImpl(container, currentObj, recursionStack):","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/metrics.py:fixme:#FIXME @abstractmethod - this should be marked abstract method and required to be implemented","count":4,"result_id":2089},{"warning":"10:src\/support\/decorators.py:fixme:# TODO Need unit tests","count":2,"result_id":2089},{"warning":"10:src\/support\/__init__.py:fixme:# TODO queryNumInwardIters appears to be unused and should probably be deleted","count":2,"result_id":2089},{"warning":"10:src\/support\/datafiles.py:fixme:# TODO for NUPIC 2 -- document the interface!","count":2,"result_id":2089},{"warning":"10:src\/support\/datafiles.py:fixme:# TODO for NuPIC 2 -- should this move to inferenceanalysis?","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/clamodel.py:fixme:# TODO: We can't figure out what this is. Remove?","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/clamodel.py:fixme:# TODO: Reconstruction and temporal classification not used. Remove","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/clamodel.py:fixme:score = sp.getOutputData(\"anomalyScore\")[0] #TODO move from SP to Anomaly ?","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/clamodel.py:fixme:# TODO: make labels work with non-SP models","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/clamodel.py:fixme:# TODO: All this logic could be simpler if in the encoder itself","count":2,"result_id":2089},{"warning":"10:src\/frameworks\/opf\/clamodel.py:fixme:# TODO: Temporary migration solution","count":2,"result_id":2089},{"warning":"10:nupic\/utils.py:fixme:# TODO obsoleted by capnp, will be removed in future","count":1,"result_id":2088},{"warning":"10:nupic\/swarming\/hypersearch\/experimentutils.py:fixme:# TODO: This file contains duplicates of 'InferenceElement', 'InferenceType',","count":1,"result_id":2088},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: Note the function 'rUpdate' is also duplicated in the","count":1,"result_id":2088},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: 'ValidationError', 'validate', 'loadJSONValueFromFile' duplicated in","count":1,"result_id":2088},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: do we really want to set numRecords to 0? Last updated value might","count":1,"result_id":2088},{"warning":"10:nupic\/swarming\/hypersearch\/utils.py:fixme:# TODO: Make sure this wasn't the best model in job. If so, set the best","count":1,"result_id":2088},{"warning":"10:nupic\/swarming\/exp_generator\/ExpGenerator.py:fixme:# TODO: remove this!","count":1,"result_id":2088},{"warning":"10:nupic\/data\/dictutils.py:fixme:# TODO: Note the functions 'rUpdate' are duplicated in","count":1,"result_id":2088},{"warning":"10:nupic\/data\/jsonhelpers.py:fixme:# TODO: duplicate of 'validate', 'ValidationError', 'loadJSONValueFromFile'","count":1,"result_id":2088},{"warning":"10:nupic\/encoders\/base.py:fixme:# TODO: (#1943) Make sure subclasses don't rely on this and remove it.","count":1,"result_id":2088},{"warning":"10:nupic\/encoders\/multi.py:fixme:# TODO expand this docstring to explain how the multiple encoders are combined","count":1,"result_id":2088},{"warning":"10:nupic\/frameworks\/opf\/metrics.py:fixme:#FIXME @abstractmethod - this should be marked abstract method and required to be implemented","count":2,"result_id":2088},{"warning":"10:src\/nupic\/regions\/ImageSensor.py:fixme:# TODO change the names and indices of the loaded image?","count":19,"result_id":2069},{"warning":"10:src\/nupic\/regions\/ImageSensorFilters\/BoxFixer.py:empty-docstring:def process(self, image):","count":19,"result_id":2069},{"warning":"10:src\/nupic\/regions\/ImageSensorFilters\/Contrast.py:fixme:maxValue = 255 # TODO: Determine how to get maximum value __allowed__.","count":19,"result_id":2069},{"warning":"10:src\/nupic\/regions\/TestNode.py:fixme:# TODO: Write remaining params","count":13,"result_id":2040},{"warning":"10:src\/nupic\/regions\/TestNode.py:fixme:# TODO: Read remaining params","count":13,"result_id":2040},{"warning":"10:src\/nupic\/research\/fast_temporal_memory.py:fixme:# TODO: For some reason, bestSegment.cell is garbage-collected after","count":146,"result_id":1942}],"6":[{"warning":"6:nupic\/data\/generators\/distributions.py:old-style-class:class Distributions():","count":251,"result_id":2091},{"warning":"6:nupic\/data\/generators\/data_generator.py:old-style-class:class DataGenerator():","count":251,"result_id":2091},{"warning":"6:nupic\/data\/generators\/data_generator.py:old-style-class:class _field():","count":251,"result_id":2091},{"warning":"6:src\/swarming\/DummyModelRunner.py:old-style-class:class DummyLogger:","count":2,"result_id":2089},{"warning":"6:src\/data\/generators\/distributions.py:old-style-class:class Distributions():","count":2,"result_id":2089},{"warning":"6:src\/data\/generators\/data_generator.py:old-style-class:class DataGenerator():","count":2,"result_id":2089},{"warning":"6:src\/data\/generators\/data_generator.py:old-style-class:class _field():","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:old-style-class:class _ArrayParameterHelper:","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:network = property(_getNetwork,","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:name = property(functools.partial(_get, method='getName'),","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:type = property(functools.partial(_get, method='getType'),","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:spec = property(_getSpec,","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:dimensions = property(_getDimensions,","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:computeTimer = property(functools.partial(_get, method='getComputeTimer'),","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:executeTimer = property(functools.partial(_get, method='getExecuteTimer'),","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:regions = property(_getRegions, doc='@property:place_holder(Network.getRegions)')","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:minPhase = property(engine.Network.getMinPhase, doc='@property:place_holder(Network.getMinPhase)')","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:maxPhase = property(engine.Network.getMaxPhase, doc='@property:place_holder(Network.getMaxPhase)')","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:minEnabledPhase = property(engine.Network.getMinEnabledPhase, engine.Network.setMinEnabledPhase, doc='@property:place_holder(Network.getMinEnabledPhase)')","count":2,"result_id":2089},{"warning":"6:src\/engine\/__init__.py:property-on-old-class:maxEnabledPhase = property(engine.Network.getMaxEnabledPhase, engine.Network.setMaxEnabledPhase, doc='@property:place_holder(Network.getMaxEnabledPhase)')","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:inferenceMode = property(","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:learningMode = property(","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:mode = property(","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:kernelType = property(","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:nta_cpp_svm_seed = property(fget=lambda self: self.cpp_svm_seed,","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:activeOutputCount = property(fget=_getActiveOutputCount)","count":2,"result_id":2089},{"warning":"6:src\/regions\/SVMClassifierNode.py:property-on-old-class:autoTuningData = property(_getAutoTuningData, _setAutoTuningData)","count":2,"result_id":2089},{"warning":"6:src\/regions\/RecordSensorFilters\/AddNoise.py:old-style-class:class AddNoise:","count":2,"result_id":2089},{"warning":"6:src\/regions\/RecordSensorFilters\/ModifyFields.py:old-style-class:class ModifyFields:","count":2,"result_id":2089},{"warning":"6:src\/frameworks\/opf\/metrics.py:old-style-class:class CircularBuffer():","count":2,"result_id":2089},{"warning":"6:nupic\/data\/generators\/distributions.py:old-style-class:class Distributions():","count":1,"result_id":2088},{"warning":"6:nupic\/data\/generators\/data_generator.py:old-style-class:class DataGenerator():","count":1,"result_id":2088},{"warning":"6:nupic\/data\/generators\/data_generator.py:old-style-class:class _field():","count":1,"result_id":2088},{"warning":"6:src\/nupic\/engine\/__init__.py:property-on-old-class:regions = property(_getRegions, doc='@property:place_holder(Network.getRegions)')","count":28,"result_id":2060},{"warning":"6:src\/nupic\/engine\/__init__.py:property-on-old-class:minPhase = property(engine.Network.getMinPhase, doc='@property:place_holder(Network.getMinPhase)')","count":28,"result_id":2060},{"warning":"6:src\/nupic\/engine\/__init__.py:property-on-old-class:maxPhase = property(engine.Network.getMaxPhase, doc='@property:place_holder(Network.getMaxPhase)')","count":28,"result_id":2060},{"warning":"6:src\/nupic\/engine\/__init__.py:property-on-old-class:minEnabledPhase = property(engine.Network.getMinEnabledPhase, engine.Network.setMinEnabledPhase, doc='@property:place_holder(Network.getMinEnabledPhase)')","count":28,"result_id":2060},{"warning":"6:src\/nupic\/engine\/__init__.py:property-on-old-class:maxEnabledPhase = property(engine.Network.getMaxEnabledPhase, engine.Network.setMaxEnabledPhase, doc='@property:place_holder(Network.getMaxEnabledPhase)')","count":28,"result_id":2060}],"3":[{"warning":"3:nupic\/data\/generators\/data_generator.py:redefine-in-handler:except TypeError, e:","count":251,"result_id":2091},{"warning":"3:nupic\/simple_server.py:bare-except:except:","count":96,"result_id":2091},{"warning":"3:nupic\/swarming\/hypersearch\/utils.py:broad-except:except Exception, e:","count":142,"result_id":2091},{"warning":"3:src\/simple_server.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/swarming\/permutations_runner.py:broad-except:except Exception as exc:","count":2,"result_id":2089},{"warning":"3:src\/swarming\/HypersearchWorker.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/swarming\/HypersearchWorker.py:broad-except:except Exception, e:","count":2,"result_id":2089},{"warning":"3:src\/swarming\/ModelRunner.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/swarming\/hypersearch\/utils.py:broad-except:except Exception, e:","count":4,"result_id":2089},{"warning":"3:src\/swarming\/HypersearchV2.py:broad-except:except Exception:","count":2,"result_id":2089},{"warning":"3:src\/swarming\/HypersearchV2.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/data\/stats.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/engine\/__init__.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/image\/__init__.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/database\/ClientJobsDAO.py:broad-except:except Exception, e:","count":2,"result_id":2089},{"warning":"3:src\/regions\/SPRegion.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/regions\/KNNAnomalyClassifierRegion.py:broad-except:except Exception:","count":12,"result_id":2089},{"warning":"3:src\/regions\/SVMClassifierNode.py:bare-except:except: pass","count":2,"result_id":2089},{"warning":"3:src\/regions\/ImageSensor.py:bare-except:except:","count":4,"result_id":2089},{"warning":"3:src\/regions\/ImageSensorFilters\/GaborFilter.py:bare-except:except:","count":4,"result_id":2089},{"warning":"3:src\/regions\/extra\/GaborNode2.py:bare-except:except:","count":6,"result_id":2089},{"warning":"3:src\/regions\/extra\/GaborNode2.py:broad-except:except Exception, e:","count":2,"result_id":2089},{"warning":"3:src\/regions\/ImageSensorFilters\/Convolution.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/frameworks\/opf\/predictionmetricsmanager.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/frameworks\/opf\/metrics.py:bare-except:except:","count":2,"result_id":2089},{"warning":"3:src\/support\/__init__.py:misplaced-bare-raise:raise","count":2,"result_id":2089},{"warning":"3:src\/support\/configuration_base.py:broad-except:except Exception as resourceException:","count":2,"result_id":2089},{"warning":"3:nupic\/simple_server.py:bare-except:except:","count":1,"result_id":2088},{"warning":"3:nupic\/swarming\/hypersearch\/utils.py:broad-except:except Exception, e:","count":2,"result_id":2088},{"warning":"3:nupic\/data\/generators\/data_generator.py:redefine-in-handler:except TypeError, e:","count":1,"result_id":2088},{"warning":"3:src\/nupic\/image\/__init__.py:bare-except:except:","count":19,"result_id":2069},{"warning":"3:src\/nupic\/regions\/ImageSensor.py:bare-except:except:","count":38,"result_id":2069},{"warning":"3:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:bare-except:except:","count":38,"result_id":2069},{"warning":"3:src\/nupic\/regions\/extra\/GaborNode2.py:bare-except:except:","count":57,"result_id":2069},{"warning":"3:src\/nupic\/regions\/extra\/GaborNode2.py:broad-except:except Exception, e:","count":19,"result_id":2069},{"warning":"3:src\/nupic\/regions\/ImageSensorFilters\/Convolution.py:bare-except:except:","count":19,"result_id":2069}],"15":[{"warning":"15:nupic\/algorithms\/KNNClassifier.py:simplifiable-if-statement:if self.numSVDDims==\"adaptive\":","count":121,"result_id":2091},{"warning":"15:nupic\/algorithms\/anomaly.py:unneeded-not:if not self._mode in self._supportedModes:","count":113,"result_id":2091},{"warning":"15:nupic\/swarming\/exp_generator\/ExpGenerator.py:unneeded-not:if not \"errorWindow\" in metricParams:","count":75,"result_id":2091},{"warning":"15:nupic\/swarming\/exp_generator\/ExpGenerator.py:consider-using-enumerate:for i in range(len(metricSpecStrings)):","count":75,"result_id":2091},{"warning":"15:nupic\/swarming\/exp_generator\/ExpGenerator.py:deprecated-lambda:activeOptions = filter(lambda x: getattr(options, x) != None,","count":75,"result_id":2091},{"warning":"15:nupic\/swarming\/object_json.py:deprecated-lambda:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":37,"result_id":2091},{"warning":"15:src\/swarming\/object_json.py:deprecated-lambda:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":2,"result_id":2089},{"warning":"15:src\/swarming\/DummyModelRunner.py:deprecated-lambda:sameModelNumbers = filter(lambda x: x[1] == self.modelIndex,","count":2,"result_id":2089},{"warning":"15:src\/swarming\/HypersearchWorker.py:deprecated-lambda:changedEntries = filter(lambda x:x[1][1] != x[2][1],","count":2,"result_id":2089},{"warning":"15:src\/swarming\/exp_generator\/ExpGenerator.py:unneeded-not:if not \"errorWindow\" in metricParams:","count":2,"result_id":2089},{"warning":"15:src\/swarming\/exp_generator\/ExpGenerator.py:consider-using-enumerate:for i in range(len(metricSpecStrings)):","count":2,"result_id":2089},{"warning":"15:src\/swarming\/exp_generator\/ExpGenerator.py:deprecated-lambda:activeOptions = filter(lambda x: getattr(options, x) != None,","count":2,"result_id":2089},{"warning":"15:src\/research\/temporal_memory.py:unneeded-not:if not cellsPerColumn > 0:","count":2,"result_id":2089},{"warning":"15:src\/swarming\/HypersearchV2.py:unneeded-not:if not str(encoder) in toRemove]","count":2,"result_id":2089},{"warning":"15:src\/swarming\/HypersearchV2.py:unneeded-not:if not 'terminatedSwarms' in results:","count":2,"result_id":2089},{"warning":"15:src\/algorithms\/anomaly.py:unneeded-not:if not self._mode in self._supportedModes:","count":2,"result_id":2089},{"warning":"15:src\/algorithms\/KNNClassifier.py:simplifiable-if-statement:if self.numSVDDims==\"adaptive\":","count":2,"result_id":2089},{"warning":"15:src\/research\/TP.py:simplifiable-if-statement:if useStartCells or numPredictedColumns >= 0.50 * len(activeColumns):","count":2,"result_id":2089},{"warning":"15:src\/research\/TP.py:simplifiable-if-statement:if numPredictedCols >= 0.5 * self.avgInputDensity:","count":2,"result_id":2089},{"warning":"15:src\/research\/TP.py:simplifiable-if-statement:if numUnpredictedColumns < numBottomUpColumns \/ 2:","count":2,"result_id":2089},{"warning":"15:src\/engine\/__init__.py:unneeded-not:if not '_region' in self.__dict__:","count":2,"result_id":2089},{"warning":"15:src\/engine\/__init__.py:consider-using-enumerate:for i in range(len(a)):","count":4,"result_id":2089},{"warning":"15:src\/encoders\/random_distributed_scalar.py:simplifiable-if-statement:if overlap == (self.w - abs(i-j)):","count":2,"result_id":2089},{"warning":"15:src\/encoders\/random_distributed_scalar.py:simplifiable-if-statement:if overlap <= self._maxOverlap:","count":2,"result_id":2089},{"warning":"15:src\/regions\/KNNClassifierRegion.py:consider-using-enumerate:for k in range(len(input)):","count":2,"result_id":2089},{"warning":"15:src\/regions\/KNNClassifierRegion.py:consider-using-enumerate:for k in range(len(output)):","count":2,"result_id":2089},{"warning":"15:src\/regions\/SVMClassifierNode.py:simplifiable-if-statement:if numSVDDims=='adaptive':","count":2,"result_id":2089},{"warning":"15:src\/regions\/ImageSensor.py:simplifiable-if-statement:if userAuxData is not None:","count":2,"result_id":2089},{"warning":"15:src\/regions\/ImageSensorFilters\/GaborFilter.py:consider-using-enumerate:for responseIndex in range(len(imageSet)):","count":2,"result_id":2089},{"warning":"15:src\/regions\/ImageSensorFilters\/GaborFilter.py:consider-using-enumerate:for responseIndex in range(len(responseSet)):","count":2,"result_id":2089},{"warning":"15:src\/regions\/ImageSensorExplorers\/BlockSpread.py:simplifiable-if-statement:if self._resetEveryPos or self._spreadPosIdx == 0:","count":2,"result_id":2089},{"warning":"15:src\/frameworks\/opf\/opftaskdriver.py:deprecated-lambda:self.__phases = tuple(map(lambda x: x._getImpl(model=model),","count":2,"result_id":2089},{"warning":"15:src\/frameworks\/opf\/expdescriptionapi.py:deprecated-lambda:taskLabelDuplicates = filter(lambda x: taskLabelsList.count(x) > 1,","count":2,"result_id":2089},{"warning":"15:src\/support\/configuration_base.py:deprecated-lambda:replaceKeys = filter(lambda x: x.startswith(cls.envPropPrefix),","count":2,"result_id":2089},{"warning":"15:src\/math\/stats.py:consider-using-enumerate:for k in range(len(samples)):","count":2,"result_id":2089},{"warning":"15:src\/frameworks\/opf\/clamodel.py:simplifiable-if-statement:if (self.getInferenceType() == InferenceType.TemporalAnomaly or","count":2,"result_id":2089},{"warning":"15:nupic\/swarming\/object_json.py:deprecated-lambda:values = map(lambda x: getattr(obj, x), obj.__slots__)","count":1,"result_id":2088},{"warning":"15:nupic\/swarming\/exp_generator\/ExpGenerator.py:unneeded-not:if not \"errorWindow\" in metricParams:","count":1,"result_id":2088},{"warning":"15:nupic\/swarming\/exp_generator\/ExpGenerator.py:consider-using-enumerate:for i in range(len(metricSpecStrings)):","count":1,"result_id":2088},{"warning":"15:nupic\/swarming\/exp_generator\/ExpGenerator.py:deprecated-lambda:activeOptions = filter(lambda x: getattr(options, x) != None,","count":1,"result_id":2088},{"warning":"15:nupic\/algorithms\/anomaly.py:unneeded-not:if not self._mode in self._supportedModes:","count":1,"result_id":2088},{"warning":"15:nupic\/algorithms\/KNNClassifier.py:simplifiable-if-statement:if self.numSVDDims==\"adaptive\":","count":1,"result_id":2088},{"warning":"15:src\/nupic\/regions\/ImageSensor.py:simplifiable-if-statement:if userAuxData is not None:","count":19,"result_id":2069},{"warning":"15:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:consider-using-enumerate:for responseIndex in range(len(imageSet)):","count":19,"result_id":2069},{"warning":"15:src\/nupic\/regions\/ImageSensorFilters\/GaborFilter.py:consider-using-enumerate:for responseIndex in range(len(responseSet)):","count":19,"result_id":2069},{"warning":"15:src\/nupic\/regions\/ImageSensorExplorers\/BlockSpread.py:simplifiable-if-statement:if self._resetEveryPos or self._spreadPosIdx == 0:","count":19,"result_id":2069}],"7":[{"warning":"7:src\/algorithms\/CLAClassifier.py:undefined-loop-variable:for bit in learnPatternNZ:","count":2,"result_id":2089},{"warning":"7:src\/research\/TP.py:undefined-loop-variable:\"steps ago:\" % (numPrevPatterns - startOffset),","count":2,"result_id":2089},{"warning":"7:src\/research\/TP.py:undefined-loop-variable:self._prevLrnPatterns[startOffset])","count":2,"result_id":2089},{"warning":"7:src\/research\/TP.py:undefined-loop-variable:self.learnBacktrackFrom(startOffset, readOnly=False)","count":2,"result_id":2089},{"warning":"7:src\/research\/TP.py:undefined-loop-variable:if i in badPatterns or i <= startOffset:","count":2,"result_id":2089},{"warning":"7:src\/research\/TP.py:undefined-loop-variable:return numPrevPatterns - startOffset","count":2,"result_id":2089},{"warning":"7:src\/encoders\/base.py:undefined-loop-variable:if i >= len(description)-1:","count":2,"result_id":2089},{"warning":"7:src\/encoders\/base.py:undefined-loop-variable:return (offset, description[i+1][1] - offset)","count":2,"result_id":2089},{"warning":"7:src\/encoders\/base.py:access-member-before-definition:self._flattenedFieldTypeList is not None:","count":2,"result_id":2089},{"warning":"7:src\/encoders\/base.py:access-member-before-definition:return self._flattenedFieldTypeList","count":2,"result_id":2089},{"warning":"7:src\/encoders\/base.py:access-member-before-definition:self._flattenedEncoderList is not None:","count":2,"result_id":2089},{"warning":"7:src\/encoders\/base.py:access-member-before-definition:return self._flattenedEncoderList","count":2,"result_id":2089},{"warning":"7:src\/regions\/KNNClassifierRegion.py:access-member-before-definition:if self._partitions is None:","count":2,"result_id":2089},{"warning":"7:src\/regions\/ImageSensorExplorers\/RepetitiveSweep.py:access-member-before-definition:self._repMemory += [self.position.copy()]","count":2,"result_id":2089},{"warning":"7:src\/regions\/ImageSensorExplorers\/MultiSweep.py:access-member-before-definition:if self.position['reset'] and self.blankWithReset:","count":2,"result_id":2089},{"warning":"7:src\/regions\/ImageSensorExplorers\/MultiSweep.py:access-member-before-definition:self.position['reset'] = False","count":4,"result_id":2089},{"warning":"7:src\/regions\/ImageSensorExplorers\/MultiSweep.py:access-member-before-definition:prevPosition = self._copyPosition(self.position)","count":2,"result_id":2089},{"warning":"7:src\/regions\/ImageSensorExplorers\/MultiSweep.py:access-member-before-definition:while self.position['reset'] and self.length < self.minSweepLength and \\","count":2,"result_id":2089},{"warning":"7:src\/frameworks\/opf\/metrics.py:undefined-loop-variable:print \"IN=\",groundTruth,\" pred=\",prediction,\": w=\",self.weights[i],\" metric=\",self.metrics[i],\" value=\",m,\" err=\",err","count":6,"result_id":2089},{"warning":"7:src\/support\/feature_groups.py:expression-not-assigned:[DEVELOPMENT.remove(feature) for feature in [","count":2,"result_id":2089},{"warning":"7:src\/support\/feature_groups.py:expression-not-assigned:[ALPHA.remove(feature) for feature in [","count":2,"result_id":2089},{"warning":"7:src\/support\/feature_groups.py:expression-not-assigned:[ALPHA_A.remove(feature) for feature in [","count":2,"result_id":2089},{"warning":"7:nupic\/frameworks\/opf\/metrics.py:undefined-loop-variable:print \"IN=\",groundTruth,\" pred=\",prediction,\": w=\",self.weights[i],\" metric=\",self.metrics[i],\" value=\",m,\" err=\",err","count":3,"result_id":2088}]}